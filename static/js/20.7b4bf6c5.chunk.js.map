{"version":3,"sources":["assets/svg/fbtc20.svg","components/CollateralInfoBox/index.tsx","views/Liquidation/detail.tsx","hooks/useComputedPrice.ts","hooks/useHashPowerToken.ts","components/DataWrapper/index.tsx","components/Methods/index.tsx","hooks/usePosContract.ts"],"names":["TitleContent","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","LeftWrap","Card","_templateObject3","AssetListWrap","_templateObject4","MyCollateral","props","pageType","currentCpt","useAppSelector","state","collateralManage","currentCPT","position","balance","decimals","positionInfoValues","address","chainId","useWeb3React","_jsxs","children","className","_jsx","Number","avatar","formatWBTC","BigNumber","from","totalAssetsValues","GuaranteeIcon","interestGuaranteed","AvatarIcon","CopyToClipboard","toCopy","concat","slice","List","ListItem","WBTCIcon","formatNumber","avatarAssetList","WBTC","USDTIcon","USDT","src","Fbtc20Icon","alt","tokensSymbol","FBTC20","_Fragment","tokensValues","token","Link","to","ArrowLine","style","marginBottom","toLargeUnits","display","flexWrap","alignItems","justifyContent","margin","estimatedDailyDebt","target","href","tokens","rel","colType","AddBtn","Button","Content","RightCard","liquidation","contracts","LiquidationDetail","active","hashPowerTokenList","setRefresh","useHashPowerToken","signer","getWBTC","helperContract","useSystemParams","changeCPT","useUpdataCurrentCPT","rewards","posContract","usePosContract","computedPrice","pairWBTCAndUSDT","pairWBTCAndFBTC","pairWBTCAndFBTC25","useCallback","data","value","inputToken","outputToken","oracleHub","inputBalance","outputBalance","inputAmount","inputDecimals","outputDecimals","output","priceInfo1","FBTC25","priceInfo","useComputedPrice","toastSuccess","toastError","toastWarning","useToast","columns","setColumns","useState","tokensList","setTokensList","neutralizeData","setNeutralizeData","addType","setAddType","transferVal","setTransferVal","m1","m2","m3","m4","params","setParams","nowGDays","nowCRate","selectedValue","setSelectedValue","React","handleChange","event","computed","collateralValues","guaranteeValues","outstandingDebt","forEach","item","toFixed","amount","symbol","input","type","g","toWBTC","cRate","shortBalanceValue","formatTheValue","gDays","totalObligation","Math","floor","futureCRate","formatInfinity","toString","includes","futureGDays","dailyObligationReference","onChange","val","tokenData","filter","addMethods","a","list","index","findIndex","it","copy","splice","unshift","rightIndex","rightOptionList","push","id","uuid","onChangeInputAmount","e","map","onChangeToken","selected","onMax","record","i","allBalance","changeTransferVal","key","onSubmit","async","inf","utils","Interface","abi","healthCheck","_params","formatSnNumber","toSmallUnits","m","path","dataCode","encodeFunctionData","methods","toHashToken","dataMulti","info","delegateCall","wait","message","substr","indexOf","submitActionState","useMemo","reg1","RegExp","console","log","replace","handleAddType","useEffect","tokensKey","tokenItem","icon","tokensKeyB","price","Object","keys","length","Title","Select","selectDisabled","isGroup","options","selectValue","Grid","container","spacing","marginTop","paddingTop","xs","DragDropContext","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","copiedItems","Droppable","provided","droppableProps","ref","innerRef","Draggable","draggableId","provideds","draggableProps","dragHandleProps","userSelect","width","Methods","SelectIcon","leftInputValue","rightInputValue","rightOptions","leftSelectValue","rightSelectValue","leftBalance","rightBalance","selectedBalance","leftDisableStatus","RightIcon","rightDisableStatus","selectInput","leftChange","rightChange","leftSymbol","rightSymbol","bottom","right","color","fontSize","IconButton","onClick","cursor","marginLeft","padding","DeleteIcon","DroppableIcon","fill","placeholder","AddIcon","FormControl","RadioGroup","row","name","FormControlLabel","control","Radio","label","paddingRight","poolData","checked","inputProps","TextIcon","rightNumberIsShow","DataWrapper","TipWrap","IconWrap","background","Approve","disabled","paddingBottom","hashPowerToken","useContext","HashPowerTokenContext","undefined","Error","colSpan","SelectWrap","GroupWrap","Index","isExchange","onExchange","rightSelectInput","leftDesc","rightDesc","currentSelected","setVal","rightList","setRightList","rightVal","setRightVal","displayValues","_rightBalance","_leftBalance","orignalBalance","TokenUtils","formatFourDecimals","left","title","allDisabled","inputDisabled","actionValue","groupStyle","FlexWrap","dir","onKeyUp","tabIndex","role","ExchangeArrow","RoundArrow","contract","setContract","_contract","getContract","PositionABI"],"mappings":"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","file":"static/js/20.7b4bf6c5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fbtc20.5f91e1ef.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport Card from 'components/Card'\nimport { ArrowLine, WBTCIcon, USDTIcon, GuaranteeIcon, AvatarIcon } from 'components/uikit'\nimport { List, ListItem } from '@mui/material'\nimport { formatNumber, formatWBTC } from 'utils/formatTheValue'\nimport CopyToClipboard from 'components/uikit/components/WalletModal/CopyToClipboard'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { useAppSelector } from 'state'\nimport Fbtc20Icon from 'assets/svg/fbtc20.svg'\nimport { useWeb3React } from 'web3-react-core'\nimport { tokensSymbol } from '../../config/constants/types'\nimport tokens from '../../config/constants/tokens'\nimport { toLargeUnits } from '../../utils/transformHelper'\n\nconst TitleContent = styled('h3')`\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 16px;\n  line-height: 22px;\n  color: #000000;\n  margin-bottom: 20px;\n`\nconst Wrapper = styled('div')`\n  height: calc(100vh - 200px);\n  overflow-y: scroll;\n  padding-bottom: 30px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\nconst LeftWrap = styled(Card)`\n  background: rgba(255, 255, 255, 0.4) !important;\n  margin-bottom: 20px;\n  padding: 20px !important;\n`\n\nconst AssetListWrap = styled('div')`\n  .total {\n    display: flex;\n    justify-content: space-between;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 14px;\n\n    span {\n      color: #000000;\n      &:first-of-type {\n        font-family: PingFangSC-Medium, sans-serif;\n        font-weight: 500;\n      }\n      &:last-of-type {\n        font-family: PingFangSC-Regular, sans-serif;\n        font-weight: 400;\n      }\n    }\n  }\n\n  .guarantee,\n  .avatar,\n  .ticker {\n    display: flex;\n    margin-bottom: 16px;\n\n    .icon {\n      margin-right: 8px;\n    }\n\n    .title {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 12px;\n      color: #000 !important;\n    }\n\n    div {\n      line-height: 20px;\n      width: calc(100% - 20px - 8px);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      span:last-of-type {\n        font-family: PingFangSC-Regular, sans-serif;\n        font-size: 12px;\n        color: rgba(0, 0, 0, 0.5);\n      }\n    }\n  }\n\n  .avatar .avatar_info {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: fit-content;\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-weight: 400;\n    }\n    svg {\n      cursor: pointer;\n    }\n  }\n\n  .ticker div span {\n    font-size: 14px !important;\n    line-height: 20px;\n    color: #000000 !important;\n  }\n\n  .token_list {\n    background: rgba(0, 0, 0, 0.04);\n    border-radius: 8px;\n    .icon {\n      width: 22px;\n      margin-right: 10px;\n    }\n    .MuiListItem-root {\n      display: flex;\n\n      .currency {\n        width: 100%;\n        //margin-left: 12px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 12px;\n        color: rgba(0, 0, 0, 0.5);\n        span {\n          font-family: PingFangSC-Regular, sans-serif;\n          font-weight: 400;\n        }\n      }\n    }\n  }\n\n  .daily {\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-top: 20px;\n    margin-bottom: 5px;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    color: #000000;\n    white-space: nowrap;\n  }\n\n  .daily_name span {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-size: 14px;\n    line-height: 20px;\n    color: #000000;\n  }\n\n  .more {\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.02em;\n    color: #2aa1ff;\n    cursor: pointer;\n  }\n`\nexport default function MyCollateral(props) {\n  const { pageType } = props\n  const currentCpt = useAppSelector((state) => state.collateralManage.currentCPT)\n  const { position, balance, decimals, positionInfoValues, address } = currentCpt\n  const { chainId } = useWeb3React()\n  return (\n    <Wrapper>\n      <LeftWrap>\n        <TitleContent>{pageType === 'Liq' ? 'The Collateral' : 'My Collateral'} </TitleContent>\n        <AssetListWrap>\n          <div className=\"total\">\n            <span>Collateral Value</span>\n            <span>\n              ≈{' '}\n              {currentCpt && Number(currentCpt.avatar)\n                ? formatWBTC(BigNumber.from(currentCpt.positionInfoValues.totalAssetsValues))\n                : 0}{' '}\n              WBTC\n            </span>\n          </div>\n          <div className=\"guarantee\">\n            <GuaranteeIcon className=\"icon\" />\n            <div>\n              <span className=\"title\">Prepaid Interest </span>\n              <span>\n                ≈{' '}\n                {currentCpt && Number(currentCpt.avatar)\n                  ? formatWBTC(BigNumber.from(currentCpt.positionInfoValues.interestGuaranteed))\n                  : 0}{' '}\n                WBTC\n              </span>\n            </div>\n          </div>\n          <div className=\"avatar\">\n            <AvatarIcon className=\"icon\" />\n            <div>\n              <span className=\"title\">Collateral</span>\n              <CopyToClipboard className=\"avatar_info\" toCopy={currentCpt ? currentCpt.position : ''}>\n                <span>\n                  {currentCpt && Number(currentCpt.avatar)\n                    ? `${currentCpt.position.slice(0, 3)}..${currentCpt.position.slice(5, 8)}`\n                    : ''}\n                </span>\n              </CopyToClipboard>\n            </div>\n          </div>\n          <List className=\"token_list\">\n            <ListItem>\n              <WBTCIcon className=\"icon\" />\n              <div className=\"currency\">\n                <span className=\"symbol\">WBTC</span>\n                <span className=\"balance\">\n                  {currentCpt && Number(currentCpt.avatar) ? formatNumber(currentCpt.avatarAssetList.WBTC) : 0}\n                </span>\n              </div>\n            </ListItem>\n            <ListItem>\n              <USDTIcon className=\"icon\" />\n              <div className=\"currency\">\n                <span className=\"symbol\">USDT</span>\n                <span className=\"balance\">\n                  {currentCpt && Number(currentCpt.avatar) ? formatNumber(currentCpt.avatarAssetList.USDT) : 0}\n                </span>\n              </div>\n            </ListItem>\n            <ListItem>\n              <img src={Fbtc20Icon} alt=\"\" className=\"icon\" />\n              <div className=\"currency\">\n                <span className=\"symbol\">F(BTC,20)</span>\n                <span className=\"balance\">\n                  {currentCpt && Number(currentCpt.avatar)\n                    ? formatNumber(currentCpt.avatarAssetList[tokensSymbol.FBTC20])\n                    : 0}\n                </span>\n              </div>\n            </ListItem>\n          </List>\n          {pageType !== 'Liq' && (\n            <>\n              <h3 className=\"daily\">Mark Price</h3>\n              <div className=\"daily_name\">\n                <span>\n                  1 F(BTC, 20) ≈{' '}\n                  {currentCpt && Number(currentCpt.avatar)\n                    ? formatWBTC(BigNumber.from(currentCpt.tokensValues[currentCpt.token]))\n                    : 0}{' '}\n                  WBTC{' '}\n                </span>\n              </div>{' '}\n              <Link to=\"/collateral\" className=\"more\">\n                <span>Add More Collateral</span>&nbsp;&nbsp;\n                <ArrowLine />\n              </Link>\n            </>\n          )}\n        </AssetListWrap>\n      </LeftWrap>\n      <LeftWrap>\n        <TitleContent>{pageType === 'Liq' ? 'The Outstanding Debt' : 'My Outstanding Debt'}</TitleContent>\n        <AssetListWrap>\n          <div className=\"ticker\" style={{ marginBottom: 20 }}>\n            <img src={Fbtc20Icon} alt=\"\" className=\"icon\" />\n            <div>\n              <span>{currentCpt?.token}</span>\n              <span>{balance ? formatNumber(toLargeUnits(balance, decimals)) : 0}</span>\n            </div>\n          </div>\n\n          <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'space-between' }}>\n            <h3 className=\"daily\" style={{ margin: '0' }}>\n              Daily Paid Rewards Reference\n            </h3>\n            <div className=\"daily_name\">\n              <span>{Number(position) ? formatWBTC(positionInfoValues.estimatedDailyDebt) : 0} WBTC</span>\n            </div>\n          </div>\n          {pageType !== 'Liq' && (\n            <div className=\"more\">\n              <a\n                target=\"_blank\"\n                href={`https://app.uniswap.org/#/swap?&outputCurrency=${\n                  address ? address[chainId] : ''\n                }&inputCurrency=${tokens.WBTC.address[chainId]}`}\n                rel=\"noreferrer\"\n              >\n                Buy More Asset to Neutralize &nbsp;&nbsp;\n                <ArrowLine />\n              </a>\n            </div>\n          )}\n        </AssetListWrap>\n      </LeftWrap>\n    </Wrapper>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { Grid, IconButton, FormControl, RadioGroup, FormControlLabel, Radio } from '@mui/material'\nimport { utils } from 'ethers'\nimport MyCollateral from 'components/CollateralInfoBox'\nimport Card from 'components/Card'\nimport AddIcon from '@mui/icons-material/Add'\nimport { Approve, icon, IconWrap, TextIcon, TipWrap, Title } from 'components/CommonComponent'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport uuid from 'uuid/dist/v4'\nimport { useWeb3React } from 'web3-react-core'\nimport Select from 'components/Select'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useAppSelector } from 'state'\nimport Methods from 'components/Methods'\nimport { Button, DeleteIcon, DroppableIcon } from 'components/uikit'\nimport contracts from 'config/constants/contracts'\nimport tokens, { poolData } from 'config/constants/tokens'\nimport formatTheValue, {\n  formatSnNumber,\n  formatWBTC,\n  toFixed,\n  toWBTC,\n  toHashToken,\n  formatInfinity,\n  formatNumber,\n} from 'utils/formatTheValue'\n// import { BigNumber } from '@ethersproject/bignumber'\nimport useSystemParams from 'hooks/useSystemParams'\nimport DataWrapper from 'components/DataWrapper'\nimport { toSmallUnits } from 'utils/transformHelper'\nimport { useUpdataCurrentCPT } from 'state/CollateralManage/hooks'\nimport useComputedPrice from '../../hooks/useComputedPrice'\nimport usePosContract from '../../hooks/usePosContract'\nimport useToast from '../../hooks/useToast'\n\n// Avatar->Avatar 0 Guarantee-Avatar->1\nenum colType {\n  a,\n  g,\n}\n\nconst AddBtn = styled(Button)`\n  box-shadow: none !important;\n  width: 34px !important;\n  height: 28px !important;\n  padding: 0 !important;\n  background: linear-gradient(90deg, #62c3f7 0%, #7ae9f1 100%) !important;\n  border-radius: 6px !important;\n\n  svg {\n    color: #000;\n    width: 16px;\n  }\n`\n\nconst Wrapper = styled('div')`\n  padding-right: 44px;\n  width: 100%;\n  overflow: scroll;\n\n  .left_func {\n    overflow: scroll;\n    height: calc(100vh - 200px);\n    padding-bottom: 100px !important;\n  }\n`\n\nconst Content = styled('div')`\n  min-width: 1024px;\n`\nconst RightCard = styled(Card)``\n\nconst { liquidation } = contracts\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return\n  const { source, destination } = result\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId]\n    const destColumn = columns[destination.droppableId]\n    const sourceItems = [...sourceColumn.items]\n    const destItems = [...destColumn.items]\n    const [removed] = sourceItems.splice(source.index, 1)\n    destItems.splice(destination.index, 0, removed)\n    setColumns([...destColumn, destItems])\n  } else {\n    const copiedItems = [...columns]\n    const [removed] = copiedItems.splice(source.index, 1)\n    copiedItems.splice(destination.index, 0, removed)\n    // if (copiedItems.map(it=>it.input>0).includes(false)){\n    //   setIsSubmit(true)\n    // }else{\n    //   setIsSubmit(false)\n    // }\n    setColumns(copiedItems)\n  }\n}\n\nfunction LiquidationDetail() {\n  const { active, chainId } = useWeb3React()\n  const { hashPowerTokenList, setRefresh } = useHashPowerToken()\n  const { signer, getWBTC, helperContract } = useSystemParams()\n  const { changeCPT } = useUpdataCurrentCPT()\n  const currentCpt = useAppSelector((state) => state.collateralManage.currentCPT)\n  const { avatarAssetList, positionInfoValues, token, position, balance, decimals, rewards, tokensValues } = currentCpt\n  const posContract = usePosContract(active, signer)\n  const computedPrice = useComputedPrice()\n  const { toastSuccess, toastError, toastWarning } = useToast()\n  const [columns, setColumns] = useState([])\n  const [tokensList, setTokensList] = useState([])\n  const [neutralizeData, setNeutralizeData] = useState([])\n  const [addType, setAddType] = useState(0)\n  const [transferVal, setTransferVal] = useState({\n    m1: 0,\n    m2: 0,\n    m3: 0,\n    m4: 0,\n  })\n  const [params, setParams] = useState<any>({\n    nowGDays: 0,\n    nowCRate: '0%',\n  })\n  const [selectedValue, setSelectedValue] = React.useState('2')\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value)\n  }\n\n  const computed = useCallback(\n    (data) => {\n      if (positionInfoValues) {\n        if (data) {\n          let collateralValues = 0\n          let guaranteeValues = 0\n          let outstandingDebt = 0\n          data.forEach((item) => {\n            collateralValues +=\n              toFixed(\n                getWBTC({ amount: item.output, symbol: item.outputToken.token, decimals: item.outputToken.decimals }),\n                'WBTC',\n              ) * 1\n            collateralValues -=\n              toFixed(\n                getWBTC({ amount: item.input, symbol: item.inputToken.token, decimals: item.inputToken.decimals }),\n                'WBTC',\n              ) * 1\n            if (item.type === colType.g) {\n              guaranteeValues -= item.input\n            }\n          })\n\n          if (transferVal.m3) {\n            guaranteeValues += transferVal.m3\n          }\n          if (transferVal.m4 > 0) {\n            outstandingDebt -= transferVal.m4\n          }\n          const totalAssetsValues =\n            positionInfoValues.totalAssetsValues * 1 +\n            (collateralValues === 0 ? 0 : toWBTC(toFixed(collateralValues, 'WBTC') * 1))\n          const interestGuaranteed = positionInfoValues.interestGuaranteed - guaranteeValues\n\n          const cRate = () => {\n            if (Number(totalAssetsValues) === 0) {\n              return 0\n            }\n            if (Number(positionInfoValues.shortBalanceValue) === 0) {\n              return 0\n            }\n            return (\n              (totalAssetsValues / (tokensValues[token] * (formatTheValue(balance, decimals) + outstandingDebt))) *\n              100\n            ).toFixed(2)\n          }\n          const gDays = () => {\n            if (interestGuaranteed - positionInfoValues.totalObligation === 0) {\n              return 0\n            }\n            if (Number(positionInfoValues.estimatedDailyDebt) === 0) {\n              return 0\n            }\n            return Math.floor(\n              (interestGuaranteed - positionInfoValues.totalObligation) / positionInfoValues.estimatedDailyDebt,\n            )\n          }\n          setParams((state) => ({\n            ...state,\n            outstandingDebt: formatTheValue(balance, decimals) + outstandingDebt,\n            futureCRate: formatInfinity(cRate()).toString().includes('∞')\n              ? formatInfinity(cRate())\n              : `${formatInfinity(cRate())}%`,\n            futureGDays: gDays(),\n            dailyObligationReference: formatWBTC(\n              ((formatTheValue(balance, decimals) + outstandingDebt) * rewards) / 10,\n            ),\n          }))\n        }\n      }\n    },\n    [positionInfoValues, transferVal.m3, transferVal.m4, getWBTC, tokensValues, token, balance, decimals, rewards],\n  )\n  const onChange = useCallback(\n    (val) => {\n      if (hashPowerTokenList) {\n        const tokenData = hashPowerTokenList.filter((item) => item.token === val)[0]\n        changeCPT(tokenData)\n      }\n    },\n    [hashPowerTokenList, changeCPT],\n  )\n  const addMethods = useCallback(() => {\n    setColumns((state) => {\n      const data = [...state]\n      if (addType === colType.a) {\n        const list = [...tokensList]\n        const index = list.findIndex((it) => it.token === 'WBTC')\n        const copy = list.splice(index, 1)\n        list.unshift(...copy)\n        const rightIndex = list[0].rightOptionList.findIndex((it) => it.token === token)\n        list[0].rightOptionList.unshift(...list[0].rightOptionList.splice(rightIndex, 1))\n        data.push({\n          id: uuid(),\n          type: colType.a,\n          input: 0,\n          inputToken: list[0],\n          outputToken: list[0].rightOptionList[0],\n        })\n      }\n      if (addType === colType.g) {\n        const list = [...tokensList]\n        const index = list.findIndex((it) => it.token === 'WBTC')\n        const copy = list.splice(index, 1)\n        list.unshift(...copy)\n        const rightIndex = list[0].rightOptionList.findIndex((it) => it.token === 'WBTC')\n        list[0].rightOptionList.unshift(...list[0].rightOptionList.splice(rightIndex, 1))\n        data.push({\n          id: uuid(),\n          type: colType.g,\n          input: 0,\n          inputToken: list[0],\n          outputToken: list[0].rightOptionList[0],\n        })\n      }\n\n      return data\n    })\n  }, [addType, token, tokensList])\n  const onChangeInputAmount = useCallback(\n    (e, item) => {\n      setColumns((state) => {\n        const data = state.map((it) => {\n          const _item = {\n            ...it,\n            input: it.id === item.id ? e.target.value : it.input,\n            output:\n              it.id === item.id\n                ? it.inputToken.token === item.outputToken.token\n                  ? e.target.value\n                  : toFixed(computedPrice(item, e.target.value), item.outputToken.token)\n                : it.output,\n          }\n\n          return _item\n        })\n        //\n        // if (data.map(it=>it.input>0 && it.output>0).includes(false)){\n        //   setIsSubmit(true)\n        // }else if (value.indexOf('.')!== -1 && String(value).slice(value.indexOf('.')+1).length > item.inputToken.decimals ){\n        //   setIsSubmit(true)\n        // }else{\n        //   setIsSubmit(false)\n        // }\n        computed(data)\n        return data\n      })\n    },\n    [computed, computedPrice],\n  )\n  const onChangeToken = useCallback(\n    (selected, id, type) => {\n      setColumns((state) => {\n        return state.map((item) => {\n          if (item.id === id) {\n            const data = { ...item, [type]: selected }\n            if (data.inputToken.token === selected.token) {\n              data.output = data.input\n            } else {\n              data.output = toFixed(computedPrice(data, data.input), data.outputToken.token)\n            }\n            if (type === 'inputToken') {\n              data.output = 0\n              data.input = 0\n            }\n            return data\n          }\n          return item\n        })\n      })\n    },\n    [computedPrice],\n  )\n  const onMax = useCallback(\n    (record, index) => {\n      setColumns((state) => {\n        const data = state.map((item, i) => ({\n          ...item,\n          input:\n            i === index\n              ? record.type === colType.g && positionInfoValues\n                ? formatWBTC(positionInfoValues.interestGuaranteed)\n                : record.inputToken.allBalance\n              : item.input,\n          output:\n            item.id === record.id\n              ? record.type === colType.g && positionInfoValues\n                ? formatWBTC(positionInfoValues.interestGuaranteed)\n                : toFixed(computedPrice(item, record.inputToken.allBalance), record.outputToken.token)\n              : item.output,\n        }))\n        computed(data)\n        return data\n      })\n    },\n    [computed, computedPrice, positionInfoValues],\n  )\n  const changeTransferVal = useCallback(\n    (e, type, key) => {\n      if (type > 0) {\n        if (key === 'm1') {\n          if (positionInfoValues) {\n            setTransferVal((state) => ({\n              ...state,\n              [key]: formatWBTC(positionInfoValues.interestGuaranteed),\n            }))\n          }\n        }\n        if (key === 'm3') {\n          setTransferVal((state) => ({\n            ...state,\n            [key]: avatarAssetList.WBTC,\n          }))\n        }\n        if (key === 'm4' || key === 'm2') {\n          setTransferVal((state) => ({\n            ...state,\n            [key]: avatarAssetList[token],\n          }))\n        }\n\n        // computed(walletTokenBalance.WBTC.toFixed(6))\n      } else {\n        setTransferVal((state) => ({\n          ...state,\n          [key]: e.target.value,\n        }))\n        // computed(e.target.value)\n        // if (e.target.value && e.target.value>0) {\n        //   setDisabled(false)\n        // }else{\n        //   setDisabled(true)\n        // }\n      }\n    },\n    [avatarAssetList, positionInfoValues, token],\n  )\n  const onSubmit = useCallback(async () => {\n    const inf = new utils.Interface(liquidation.abi)\n    if (posContract) {\n      const result = await helperContract.healthCheck(position, balance, 15000, 60)\n\n      if (result.includes(false)) {\n        const _params = columns.map((it) => {\n          const inputAmount = formatSnNumber(Math.floor(it.input * (toSmallUnits('1', it.inputToken.decimals) as any)))\n          const m = []\n          const path = []\n          if (it.type === colType.a) {\n            if (\n              (it.inputToken.token === 'USDT' || it.outputToken.token === 'USDT') &&\n              (it.inputToken.token === 'F(BTC,20)' || it.outputToken.token === 'F(BTC,20)')\n            ) {\n              path.push(it.inputToken.address[chainId])\n              path.push(tokens.WBTC.address[chainId])\n              path.push(it.outputToken.address[chainId])\n            } else {\n              path.push(it.inputToken.address[chainId])\n              path.push(it.outputToken.address[chainId])\n            }\n            const dataCode = inf.encodeFunctionData('swapExactTokensForTokens', [\n              inputAmount,\n              '0',\n              path,\n              '999999999999999',\n            ])\n            m.push(liquidation.address[chainId], dataCode)\n          }\n          if (it.type === colType.g) {\n            m.push(liquidation.address[chainId], inf.encodeFunctionData('moveGuaranteeBack', [inputAmount]))\n          }\n          return m\n        })\n        const methods = []\n\n        if (selectedValue === '1' && transferVal.m3) {\n          const m3 = inf.encodeFunctionData('addGuarantee', [Math.floor(toWBTC(transferVal.m3))])\n          methods.push([liquidation.address[chainId], m3])\n        }\n        if (selectedValue === '2' && transferVal.m4) {\n          const m4 = inf.encodeFunctionData('neutralizetBalance', [Math.floor(toHashToken(transferVal.m4))])\n          methods.push([liquidation.address[chainId], m4])\n        }\n        const dataMulti = inf.encodeFunctionData('liquidation', [selectedValue, [..._params, ...methods]])\n\n        try {\n          const info = await posContract.delegateCall(liquidation.address[chainId], dataMulti)\n          if (info) {\n            const res = await info.wait()\n            if (res) {\n              setRefresh((state) => !state)\n              toastSuccess('Success')\n            }\n          }\n        } catch (e: any) {\n          toastError('Failed', e?.message.substr(0, e?.message.indexOf('(')))\n        }\n      } else {\n        toastWarning('Warning', 'Liquidation conditions not met')\n      }\n    }\n  }, [\n    posContract,\n    helperContract,\n    position,\n    balance,\n    columns,\n    transferVal.m3,\n    transferVal.m4,\n    selectedValue,\n    chainId,\n    setRefresh,\n    toastSuccess,\n    toastError,\n    toastWarning,\n  ])\n\n  const submitActionState = useMemo(() => {\n    const reg1 = new RegExp('%', 'g')\n    console.log(params.futureCRate)\n    const _newVal = params.futureCRate ? params.futureCRate.toString().replace(reg1, '') : params.futureCRate\n    return _newVal < 110 || params.futureGDays < 10\n  }, [params])\n  // change add methods     Avatar->Avatar | Guarantee-> Avata\n  const handleAddType = useCallback((e) => {\n    const { value } = e.target\n    setAddType(Number(value))\n  }, [])\n\n  useEffect(() => {\n    if (active && avatarAssetList) {\n      const list = []\n      for (const tokensKey in tokens) {\n        // Object.prototype.hasOwnProperty.call(tokens, tokensKey)\n        if (tokensKey) {\n          const item = tokens[tokensKey]\n          const tokenItem = {\n            token: tokensKey,\n            address: item.address,\n            allBalance: formatSnNumber(avatarAssetList[tokensKey]),\n            balance: toFixed(avatarAssetList[tokensKey], tokensKey),\n            icon: item.icon,\n            decimals: item.decimals,\n            rightOptionList: [],\n          }\n          for (const tokensKeyB in tokens) {\n            // Object.prototype.hasOwnProperty.call(tokens, tokensKeyB)\n            if (tokensKeyB) {\n              tokenItem.rightOptionList.push({\n                token: tokensKeyB,\n                address: tokens[tokensKeyB].address,\n                icon: tokens[tokensKeyB].icon,\n                allBalance: formatSnNumber(avatarAssetList[tokensKeyB]),\n                balance: toFixed(avatarAssetList[tokensKeyB], tokensKeyB),\n                decimals: tokens[tokensKeyB].decimals,\n              })\n            }\n          }\n          list.push(tokenItem)\n        }\n      }\n\n      setTokensList(list)\n      let price = 0\n      if (list) {\n        price = computedPrice({\n          inputToken: list[0],\n          outputToken: list[0].rightOptionList[0],\n        })\n        const index = list.findIndex((it) => it.token === 'WBTC')\n        const copy = list.splice(index, 1)\n        list.unshift(...copy)\n        const rightIndex = list[0].rightOptionList.findIndex((it) => it.token === token)\n        list[0].rightOptionList.unshift(...list[0].rightOptionList.splice(rightIndex, 1))\n\n        setColumns(() => {\n          return [\n            {\n              id: uuid(),\n              type: colType.a,\n              input: 0,\n              output: 0,\n              inputToken: list[0],\n              outputToken: list[0].rightOptionList[0],\n              oracleHub: price,\n            },\n          ]\n        })\n      }\n    }\n  }, [active, avatarAssetList, computedPrice, token])\n\n  useEffect(() => {\n    if (currentCpt && Object.keys(currentCpt).length) {\n      const data = [\n        {\n          ...currentCpt,\n          rightOptionList: [currentCpt],\n        },\n      ]\n      setNeutralizeData(data)\n    }\n  }, [currentCpt])\n\n  useEffect(() => {\n    computed(columns)\n  }, [columns, transferVal.m4, transferVal.m3, computed])\n\n  return (\n    <Wrapper>\n      <Content>\n        <Title>Liquidation</Title>\n        <Select\n          selectDisabled\n          isGroup={false}\n          options={hashPowerTokenList || []}\n          selectValue={currentCpt ? currentCpt.token : ''}\n          onChange={onChange}\n        />\n        <Grid container spacing={2} style={{ marginTop: 14 }}>\n          <Grid className=\"left_func\" style={{ paddingTop: 0 }} item xs={8}>\n            <RightCard>\n              {/* trading through Avatar */}\n              <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\n                <Droppable droppableId=\"droppableId\">\n                  {(provided) => {\n                    return (\n                      <div {...provided.droppableProps} ref={provided.innerRef}>\n                        {columns.map((item, index) => {\n                          return (\n                            <Draggable key={item.id} draggableId={item.id} index={index}>\n                              {(provideds) => {\n                                return (\n                                  <div\n                                    ref={provideds.innerRef}\n                                    {...provideds.draggableProps}\n                                    {...provideds.dragHandleProps}\n                                    style={{\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      userSelect: 'none',\n                                      margin: '0 0 8px 0',\n                                      ...provideds.draggableProps.style,\n                                      position: 'static',\n                                    }}\n                                  >\n                                    <div style={{ width: '100%', position: 'relative' }}>\n                                      <Methods\n                                        SelectIcon={() => (\n                                          <span>{item.type === colType.a ? 'Collateral' : 'Prepaid Interest '}</span>\n                                        )}\n                                        leftInputValue={item.input}\n                                        rightInputValue={item.output}\n                                        options={tokensList}\n                                        rightOptions={item.inputToken.rightOptionList}\n                                        leftSelectValue={item.inputToken.token}\n                                        rightSelectValue={item.outputToken.token}\n                                        leftBalance={\n                                          item.type === colType.g && positionInfoValues\n                                            ? formatWBTC(positionInfoValues.interestGuaranteed)\n                                            : item.inputToken.balance || item.inputToken.allBalance\n                                        }\n                                        rightBalance={item.outputToken.balance || item.outputToken.allBalance}\n                                        selectedBalance={100}\n                                        leftDisableStatus={[item.type === colType.g, false]}\n                                        RightIcon={() => <span>Collateral</span>}\n                                        rightDisableStatus={[item.type === colType.g, true]}\n                                        selectInput={(e) => {\n                                          onChangeInputAmount(e, item)\n                                        }}\n                                        leftChange={(selected) => {\n                                          onChangeToken(selected, item.id, 'inputToken')\n                                        }}\n                                        rightChange={(selected) => {\n                                          onChangeToken(selected, item.id, 'outputToken')\n                                        }}\n                                        onMax={() => {\n                                          onMax(item, index)\n                                        }}\n                                        leftSymbol={item.inputToken.token}\n                                        rightSymbol={item.outputToken.token}\n                                      />\n                                      <p\n                                        style={{\n                                          position: 'absolute',\n                                          bottom: 0,\n                                          right: 0,\n                                          color: 'rgba(0, 0, 0, 0.5)',\n                                          fontSize: 12,\n                                        }}\n                                      >\n                                        1{item.inputToken.token} ≈{' '}\n                                        {item.inputToken.token === item.outputToken.token\n                                          ? 1\n                                          : formatSnNumber(computedPrice(item, 1))}\n                                        {item.outputToken.token}\n                                      </p>\n                                    </div>\n                                    <IconButton\n                                      onClick={() => {\n                                        const data = [...columns]\n                                        data.splice(index, 1)\n                                        // if (data.map(it=>it.input>0).includes(false)){\n                                        //   setIsSubmit(true)\n                                        // }else{\n                                        //   setIsSubmit(false)\n                                        // }\n                                        setColumns(data)\n                                      }}\n                                      style={{\n                                        cursor: 'pointer',\n                                        marginTop: 8,\n                                        marginLeft: 10,\n                                        padding: 0,\n                                      }}\n                                    >\n                                      <DeleteIcon />\n                                    </IconButton>\n                                    <IconButton style={{ marginTop: 8, marginLeft: 8, padding: 0 }}>\n                                      <DroppableIcon style={{ fill: 'none' }} />\n                                    </IconButton>\n                                  </div>\n                                )\n                              }}\n                            </Draggable>\n                          )\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    )\n                  }}\n                </Droppable>\n              </DragDropContext>\n              <div style={{ display: 'flex', alignItems: 'center', marginTop: 10, marginBottom: 40 }}>\n                <AddBtn onClick={addMethods}>\n                  <AddIcon />\n                </AddBtn>\n                <FormControl style={{ marginLeft: 10 }}>\n                  <RadioGroup\n                    row\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                    name=\"row-radio-buttons-group\"\n                    value={addType}\n                    onChange={handleAddType}\n                  >\n                    <FormControlLabel\n                      value={0}\n                      control={<Radio />}\n                      label={\n                        <p style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                          <span>Collateral</span>\n                          <span style={{ margin: '0 10px' }}>-&gt;</span>\n                          <span>Collateral</span>\n                        </p>\n                      }\n                    />\n                    <FormControlLabel\n                      value={1}\n                      control={<Radio />}\n                      label={\n                        <p style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                          <span>Prepaid Interest </span>\n                          <span style={{ margin: '0 10px' }}>-&gt;</span>\n                          <span>Collateral</span>\n                        </p>\n                      }\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n              {/* add guarantee */}\n              <div style={{ display: 'flex', alignItems: 'center', paddingRight: 28, width: '100%' }}>\n                <div style={{ width: '100%' }}>\n                  <Methods\n                    SelectIcon={() => <span>Collateral</span>}\n                    options={poolData}\n                    rightBalance={positionInfoValues ? formatWBTC(positionInfoValues.guaranteeValues) : 0}\n                    rightOptions={poolData}\n                    leftBalance={avatarAssetList ? formatNumber(avatarAssetList.WBTC) : 0}\n                    RightIcon={() => <span>Prepaid Interest </span>}\n                    leftInputValue={transferVal.m3}\n                    rightInputValue={transferVal.m3}\n                    selectInput={(e) => {\n                      changeTransferVal(e, 0, 'm3')\n                    }}\n                    onMax={() => {\n                      changeTransferVal({}, 1, 'm3')\n                    }}\n                  />\n                </div>\n                <Radio\n                  checked={selectedValue === '1'}\n                  onChange={handleChange}\n                  value=\"1\"\n                  name=\"radio-buttons\"\n                  style={{\n                    cursor: 'pointer',\n                    marginTop: 8,\n                    marginLeft: 10,\n                    padding: 0,\n                  }}\n                  inputProps={{ 'aria-label': '1' }}\n                />\n              </div>\n              {/* neutralize */}\n              <div style={{ display: 'flex', alignItems: 'center', paddingRight: 28, width: '100%' }}>\n                <div style={{ width: '100%' }}>\n                  <Methods\n                    SelectIcon={() => <span>Collateral</span>}\n                    options={neutralizeData}\n                    rightOptions={neutralizeData}\n                    leftBalance={avatarAssetList ? avatarAssetList[token] : 0}\n                    RightIcon={icon(TextIcon, [<span style={{ color: '#f40' }}>Neutralize</span>])}\n                    leftSelectValue={token}\n                    leftSymbol={token}\n                    rightSelectValue={token}\n                    leftInputValue={transferVal.m4}\n                    rightInputValue={transferVal.m4}\n                    rightNumberIsShow={false}\n                    selectInput={(e) => {\n                      changeTransferVal(e, 0, 'm4')\n                    }}\n                    onMax={() => {\n                      changeTransferVal({}, 1, 'm4')\n                    }}\n                  />\n                </div>\n                <Radio\n                  checked={selectedValue === '2'}\n                  onChange={handleChange}\n                  value=\"2\"\n                  style={{\n                    cursor: 'pointer',\n                    marginTop: 8,\n                    marginLeft: 10,\n                    padding: 0,\n                  }}\n                  name=\"radio-buttons\"\n                  inputProps={{ 'aria-label': '2' }}\n                />\n              </div>\n\n              <DataWrapper\n                data={[\n                  [\n                    'OutStanding Debt',\n                    formatNumber(formatTheValue(balance, decimals)),\n                    formatNumber(params.outstandingDebt),\n                  ],\n                  [\n                    'Daily Obligation Reference',\n                    positionInfoValues ? formatNumber(formatWBTC(positionInfoValues.estimatedDailyDebt)) : 0,\n                    params.dailyObligationReference,\n                  ],\n                  [\n                    'Collateral Ratio',\n                    positionInfoValues && formatInfinity(positionInfoValues.cRate).toString().includes('∞')\n                      ? formatInfinity(positionInfoValues.cRate)\n                      : `${formatInfinity(positionInfoValues.cRate)}%` || 0,\n                    params.futureCRate,\n                  ],\n                  [\n                    'Prepaid Interest Coverage',\n                    `${positionInfoValues ? formatInfinity(positionInfoValues.gDays) : 0} days`,\n                    `${params.futureGDays} days`,\n                  ],\n                ]}\n              />\n              <TipWrap>\n                <IconWrap style={{ background: '#FF7D00', color: '#fff' }}>!</IconWrap>\n                <p>\n                  The collateral ratio should lower than 200% and the Prepaid Interest Coverage should lower than 100\n                  days after the liquidation.\n                </p>\n              </TipWrap>\n              <Approve disabled={submitActionState} onClick={onSubmit}>\n                Submit\n              </Approve>\n            </RightCard>\n          </Grid>\n          <Grid item style={{ paddingTop: 0, marginBottom: 40, paddingBottom: 50 }} xs={4}>\n            <MyCollateral pageType=\"Liq\" />\n          </Grid>\n        </Grid>\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default LiquidationDetail\n","import { useCallback } from 'react'\nimport useSystemParams from 'hooks/useSystemParams'\nimport oracleHub from 'utils/oracleHub'\nimport { tokensSymbol } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\nexport default function useComputedPrice() {\n  const { pairWBTCAndUSDT, pairWBTCAndFBTC, pairWBTCAndFBTC25 } = useSystemParams()\n  return useCallback(\n    (data, value?) => {\n      /**\n       * data\n       * {\n       *   inputToken:{\n       *     token:?,\n       *     decimals:?,\n       *\n       *   }\n       *   outputToken:{\n       *     token:?,\n       *     decimals:?,\n       *   }\n       * }\n       *\n       *\n       *\n       * */\n      if (pairWBTCAndUSDT && pairWBTCAndFBTC) {\n        if (\n          data.inputToken &&\n          data.outputToken &&\n          (data.inputToken.token === 'USDT' || data.outputToken.token === 'USDT')\n        ) {\n          if (data.inputToken.token === 'USDT' && data.outputToken.token === 'WBTC') {\n            const priceInfo = oracleHub({\n              inputBalance: pairWBTCAndUSDT.USDT,\n              outputBalance: pairWBTCAndUSDT.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo.output\n          }\n          if (data.inputToken.token === 'WBTC') {\n            const priceInfo = oracleHub({\n              inputBalance: pairWBTCAndUSDT.WBTC,\n              outputBalance: pairWBTCAndUSDT.USDT,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo.output\n          }\n          if (data.inputToken.token === 'F(BTC,20)') {\n            const priceInfo1 = oracleHub({\n              inputBalance: pairWBTCAndFBTC[tokensSymbol.FBTC20],\n              outputBalance: pairWBTCAndFBTC.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: tokens.WBTC.decimals,\n            })\n            const priceInfo2 = oracleHub({\n              inputBalance: pairWBTCAndUSDT.WBTC,\n              outputBalance: pairWBTCAndUSDT.USDT,\n              inputAmount: priceInfo1.output,\n              inputDecimals: tokens.WBTC.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo2.output\n          }\n\n          if (data.inputToken.token === 'F(BTC,25)') {\n            const priceInfo1 = oracleHub({\n              inputBalance: pairWBTCAndFBTC25[tokensSymbol.FBTC25],\n              outputBalance: pairWBTCAndFBTC25.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: tokens.WBTC.decimals,\n            })\n            const priceInfo2 = oracleHub({\n              inputBalance: pairWBTCAndUSDT.WBTC,\n              outputBalance: pairWBTCAndUSDT.USDT,\n              inputAmount: priceInfo1.output,\n              inputDecimals: tokens.WBTC.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo2.output\n          }\n\n          if (data.outputToken.token === 'F(BTC,20)') {\n            const priceInfo1 = oracleHub({\n              inputBalance: pairWBTCAndUSDT.USDT,\n              outputBalance: pairWBTCAndUSDT.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: tokens.WBTC.decimals,\n            })\n            const priceInfo2 = oracleHub({\n              inputBalance: pairWBTCAndFBTC.WBTC,\n              outputBalance: pairWBTCAndFBTC[tokensSymbol.FBTC20],\n              inputAmount: priceInfo1.output,\n              inputDecimals: tokens.WBTC.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo2.output\n          }\n          if (data.outputToken.token === 'F(BTC,25)') {\n            const priceInfo1 = oracleHub({\n              inputBalance: pairWBTCAndUSDT.USDT,\n              outputBalance: pairWBTCAndUSDT.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: tokens.WBTC.decimals,\n            })\n            const priceInfo2 = oracleHub({\n              inputBalance: pairWBTCAndFBTC25.WBTC,\n              outputBalance: pairWBTCAndFBTC25[tokensSymbol.FBTC25],\n              inputAmount: priceInfo1.output,\n              inputDecimals: tokens.WBTC.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo2.output\n          }\n        } else if (\n          data.inputToken &&\n          data.outputToken &&\n          data.outputToken.token !== 'USDT' &&\n          data.inputToken.token !== 'USDT'\n        ) {\n          if (data.inputToken.token === 'WBTC') {\n            const priceInfo = oracleHub({\n              inputBalance: pairWBTCAndFBTC.WBTC,\n              outputBalance: pairWBTCAndFBTC[tokensSymbol.FBTC20],\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            return priceInfo.output\n          }\n          if (data.inputToken.token === tokensSymbol.FBTC20) {\n            const priceInfo = oracleHub({\n              inputBalance: pairWBTCAndFBTC[tokensSymbol.FBTC20],\n              outputBalance: pairWBTCAndFBTC.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            if (data.outputToken.token === tokensSymbol.FBTC25) {\n              const priceInfo2 = oracleHub({\n                inputBalance: pairWBTCAndFBTC25.WBTC,\n                outputBalance: pairWBTCAndFBTC25[tokensSymbol.FBTC25],\n                inputAmount: priceInfo.output,\n                inputDecimals: tokens.WBTC.decimals,\n                outputDecimals: data.outputToken.decimals,\n              })\n              return priceInfo2.output\n            }\n            return priceInfo.output\n          }\n          if (data.inputToken.token === tokensSymbol.FBTC25) {\n            const priceInfo = oracleHub({\n              inputBalance: pairWBTCAndFBTC25[tokensSymbol.FBTC25],\n              outputBalance: pairWBTCAndFBTC25.WBTC,\n              inputAmount: value,\n              inputDecimals: data.inputToken.decimals,\n              outputDecimals: data.outputToken.decimals,\n            })\n            if (data.outputToken.token === tokensSymbol.FBTC20) {\n              const priceInfo2 = oracleHub({\n                inputBalance: pairWBTCAndFBTC.WBTC,\n                outputBalance: pairWBTCAndFBTC[tokensSymbol.FBTC20],\n                inputAmount: priceInfo.output,\n                inputDecimals: tokens.WBTC.decimals,\n                outputDecimals: data.outputToken.decimals,\n              })\n              return priceInfo2.output\n            }\n            return priceInfo.output\n          }\n        }\n      }\n      return 0\n    },\n    [pairWBTCAndFBTC, pairWBTCAndFBTC25, pairWBTCAndUSDT],\n  )\n}\n","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nconst Wrapper = styled('div')`\n  background: #def1ff;\n  border-radius: 14px;\n  padding: 13px 22px;\n  margin: 20px 0;\n\n  table {\n    width: 100%;\n  }\n\n  td {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-weight: 400;\n    font-size: 12px;\n    padding: 5px 0;\n  }\n\n  .label {\n    text-align: left;\n    width: 30%;\n  }\n\n  .from,\n  .to {\n    width: 35%;\n    line-height: 17px;\n    text-align: right;\n  }\n\n  .to {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    color: #000;\n  }\n\n  .borderTop {\n    border-top: 0.5px solid rgba(0, 0, 0, 0.12);\n  }\n`\n\n/*\n\nconst data = [\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n]\n\n*/\n\nfunction DataWrapper(props) {\n  const { data } = props\n  return (\n    <Wrapper>\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"from\" colSpan={2}>\n              From\n            </td>\n            <td className=\"to\">To</td>\n          </tr>\n          {data.map((item) => (\n            <tr className={item[3] ? 'borderTop' : ''} key={item[0]}>\n              <td className=\"label\">{item[0]}</td>\n              <td className=\"from\">{item[1]}</td>\n              <td className=\"to\">{item[2]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Wrapper>\n  )\n}\n\nexport default DataWrapper\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { PoolProps } from 'config/constants/types'\nimport { TokenUtils } from 'utils/transformHelper'\nimport Select from '../Select'\nimport { ExchangeArrow, RoundArrow } from '../uikit'\nimport { FlexWrap } from '../CommonComponent'\n\nconst SelectWrap = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: static !important;\n`\n\nconst GroupWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% / 2 - 25px);\n\n  p {\n    height: 28px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 15px;\n    box-sizing: border-box;\n\n    span {\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  .maxBtn {\n    height: 21px;\n    align-items: flex-end;\n  }\n`\n\nexport const IconWrap = styled('strong')`\n  display: block;\n  width: 20px;\n  height: 20px;\n  background: #c4c4c4;\n  line-height: 20px;\n  text-align: center;\n  border-radius: 50%;\n`\n\nexport interface MethodsProps {\n  options: PoolProps[] // selectIcon\n  selectValue: number // current selected\n  onMax?: (arg1: PoolProps) => void // to max action\n  selectedSymbol: string // selected symbol\n  SelectIcon: React.FC // leftTop icon\n  RightIcon: React.FC // right icon\n  leftInputValue?: number | null // left input value\n  rightInputValue?: number // right input value\n  rightBalance: number // right balance\n  rightSymbol: string // right symbol\n  rightOptions: PoolProps[] // options list\n  selectInput?: (arg1: React.SyntheticEvent) => void\n  leftBalance?: any\n}\n\nexport default function Index(props) {\n  const {\n    options,\n    leftBalance,\n    isExchange,\n    onExchange,\n    onMax,\n    selectInput,\n    rightSelectInput,\n    SelectIcon,\n    RightIcon,\n    leftInputValue,\n    rightInputValue,\n    rightBalance,\n    rightDisableStatus,\n    leftChange,\n    rightChange,\n    leftDisableStatus = [false, false],\n    leftSelectValue,\n    rightSelectValue,\n    rightOptions,\n    leftSymbol,\n    rightSymbol,\n    rightNumberIsShow = true,\n    leftDesc,\n    rightDesc,\n  } = props\n  // rightDisableStatus[1] true selectDisabled\n  // rightDisableStatus[2] true inputDisabled\n\n  const [currentSelected, setVal] = useState(options && options.length ? options[0] : {})\n  const [rightList, setRightList] = useState(options && options.length ? options[0].rightOptionList : [])\n  const [rightVal, setRightVal] = useState(rightList ? rightList[0] : {})\n\n\n  useEffect(() => {\n    if (options && options.length && leftSelectValue && rightSelectValue) {\n      setVal(options.filter((it) => it.token === leftSelectValue)[0] || options[0])\n      setRightList(options[0].rightOptionList)\n      setRightVal(options[0].rightOptionList.filter((it) => it.token === rightSelectValue)[0] || options[0].rightOptionList[0])\n    }\n  }, [leftSelectValue, options, rightSelectValue])\n\n  const displayValues = useMemo(() => {\n    const _rightBalance = rightBalance || rightVal && rightVal.balance || 0;\n    const _leftBalance = leftBalance || currentSelected.balance || 0;\n    return {\n      right: {\n        orignalBalance: _rightBalance,\n        balance: TokenUtils.formatFourDecimals(_rightBalance),\n        symbol: rightSymbol || (rightVal && Object.keys(rightVal) ? rightVal.token : 'WBTC'),\n      },\n      left: {\n        orignalBalance: _leftBalance,\n        balance: TokenUtils.formatFourDecimals(_leftBalance),\n        symbol: leftSymbol || currentSelected.token || 'WBTC',\n      },\n    }\n  }, [currentSelected, leftBalance, leftSymbol, rightBalance, rightSymbol, rightVal])\n  return (\n    <>\n      <SelectWrap>\n        <GroupWrap>\n          <p title={`${displayValues.left.symbol} Balance: ${displayValues.left.orignalBalance}`}>\n            <SelectIcon />\n            <span className=\"balance\">\n              {displayValues.left.balance} {displayValues.left.symbol}\n            </span>\n          </p>\n          <Select\n            key={1}\n            selectValue={leftSelectValue || currentSelected.token}\n            allDisabled={!leftDisableStatus || (leftDisableStatus[0] && leftDisableStatus[1])}\n            inputDisabled={!leftDisableStatus || leftDisableStatus[1]}\n            selectDisabled={!leftDisableStatus || leftDisableStatus[0]}\n            onChange={(val) => {\n              const selected = options.filter((it) => it.token === val)[0]\n              setRightList(selected.rightOptionList)\n              setRightVal(selected.rightOptionList[0])\n              setVal(selected)\n              if (leftChange) {\n                leftChange(selected)\n              }\n            }}\n            selectInput={selectInput}\n            actionValue={leftInputValue}\n            options={options}\n            groupStyle={{ width: '100%' }}\n            isGroup\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {leftDesc && leftDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\">\n              <span\n                onClick={() => {\n                  if (onMax) {\n                    onMax(currentSelected)\n                  }\n                }}\n                onKeyUp={() => null}\n                tabIndex={0}\n                role=\"button\"\n                style={{ cursor: 'pointer', color: '#6ED6F3', fontSize: '0.75rem', userSelect: 'none' }}\n              >\n                Max\n              </span>\n            </p>\n          </FlexWrap>\n        </GroupWrap>\n        {isExchange ? (\n          <ExchangeArrow onClick={onExchange} style={{ fill: 'none', cursor: 'pointer', width: 22, marginTop: 8 }} />\n        ) : (\n          <RoundArrow style={{ fill: 'none', width: 22, marginTop: 8 }} />\n        )}\n\n        <GroupWrap>\n          <p title={rightNumberIsShow ? `${displayValues.right.symbol} Balance: ${displayValues.right.orignalBalance}` : ''}>\n            <RightIcon />\n            {rightNumberIsShow ? (\n              <span className=\"balance\">\n                {displayValues.right.balance}{\" \"}\n                {displayValues.right.symbol}\n              </span>\n            ) : null}\n          </p>\n          <Select\n            key={2}\n            selectValue={rightSelectValue || (rightVal ? rightVal.token : 'WBTC')}\n            options={rightOptions || rightList}\n            actionValue={rightInputValue}\n            groupStyle={{ width: '100%' }}\n            isGroup\n            allDisabled={!rightDisableStatus || (rightDisableStatus[0] && rightDisableStatus[1])}\n            inputDisabled={!rightDisableStatus || rightDisableStatus[1]}\n            selectDisabled={!rightDisableStatus || rightDisableStatus[0]}\n            selectInput={rightSelectInput}\n            onChange={(val) => {\n              if (currentSelected) {\n                const selected = currentSelected.rightOptionList.filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              } else {\n                const selected = options[0].filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              }\n            }}\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {rightDesc && rightDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\" />\n          </FlexWrap>\n        </GroupWrap>\n      </SelectWrap>\n    </>\n  )\n}\n","import {useEffect, useState} from \"react\";\nimport {getContract} from \"utils/web3React\";\nimport PositionABI from 'config/abi/Position.json';\nimport {useAppSelector} from \"../state\";\n\nexport default function usePosContract(active,signer) {\n  const [contract,setContract] = useState(null);\n  const currentCpt = useAppSelector(state=> state.collateralManage.currentCPT)\n\n  useEffect(()=>{\n    if (active && signer && currentCpt && Number(currentCpt.position)) {\n      const _contract = getContract(signer, PositionABI, currentCpt.position);\n      setContract(_contract)\n    }\n  }, [active, currentCpt, signer])\n\n  return contract\n}\n"],"sourceRoot":""}