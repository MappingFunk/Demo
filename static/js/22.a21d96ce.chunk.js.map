{"version":3,"sources":["views/History/Claimed.tsx","components/Table/icon/SortIcon.tsx","components/Table/Table.tsx","components/Tabs/index.tsx"],"names":["window","moment","Box","styled","_templateObject","_taggedTemplateLiteral","ClaimButton","Button","_templateObject2","TableCard","Card","_templateObject3","AvatarColumns","id","numeric","disablePadding","isSort","label","WalletColumns","WalletList","_ref","list","_jsx","children","Table","dataSource","filter","it","type","columns","pagiation","content","row","index","labelId","_jsxs","_Fragment","StyledTableCell","component","scope","date","format","tokenSymbol","walletRewards","AvatarList","_ref2","avatarRewards","AllList","_ref3","ClaimedHistory","props","match","setDataSource","useState","localStorage","getItem","useEffect","_list","JSON","parse","BTitle","Tabs","tabsStyle","marginTop","defaultTabsValue","params","tab","Svg","svg","SortIcon","order","width","height","viewBox","fill","xmlns","d","TableCell","concat","tableCellClasses","head","border","color","body","fontSize","borderBottom","StyledTableRow","TableRow","cursor","BoxWrapper","descendingComparator","a","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","map","el","sort","console","log","EnhancedTableHead","onRequestSort","isMyPage","TableHead","headCell","style","paddingLeft","sortDirection","TableSortLabel","active","direction","onClick","property","event","IconComponent","fontFamily","marginLeft","EnhancedTable","pagination","rowClick","pages","setOrder","React","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleClick","useCallback","name","selectedIndex","indexOf","newSelected","slice","length","dataSourceDom","hover","ticker","role","tabIndex","textAlign","colSpan","rowSpan","TableContainer","sx","minWidth","handleRequestSort","TableBody","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onChangePage","onRowsPerPageChange","parseInt","target","value","AntTabs","TabIndicatorProps","className","margin","display","justifyContent","backgroundColor","maxWidth","borderRadius","background","AntTab","Tab","disableRipple","theme","textTransform","breakpoints","up","fontWeight","marginRight","spacing","opacity","typography","fontWeightMedium","withRouter","tabStyle","history","setValue","Number","onChange","handleChange","newValue","undefined","push","item"],"mappings":"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","file":"static/js/22.a21d96ce.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport moment from 'moment'\nimport { BTitle } from 'components/CommonComponent'\nimport Tabs from 'components/Tabs'\nimport Card from 'components/Card'\nimport { Button } from 'components/uikit'\nimport Table, { StyledTableCell } from 'components/Table'\n\nwindow.moment = moment\n\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 26px;\n  padding-right: 44px;\n  height: 80%;\n  overflow: scroll;\n  padding-bottom: 20px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const ClaimButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px;\n  box-shadow: none;\n  height: 30px;\n  line-height: 30px;\n  color: #000;\n  font-size: 14px;\n  display: block;\n  margin: 30px auto 0;\n`\n\nconst TableCard = styled(Card)`\n  margin-bottom: 20px;\n  padding: 8px;\n`\n\nconst AvatarColumns = [\n  {\n    id: 'date',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Date',\n  },\n  {\n    id: 'tokenSymbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'avatarRewards',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimed Rewards',\n  },\n  {\n    id: 'type',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'account',\n  },\n]\nconst WalletColumns = [\n  {\n    id: 'date',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Date',\n  },\n  {\n    id: 'tokenSymbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'walletRewards',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimed Rewards',\n  },\n  {\n    id: 'address',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Account',\n  },\n]\nconst WalletList = ({ list }) => {\n  return (\n    <TableCard>\n      <Table\n        dataSource={list.filter((it) => it.type === 'My Wallet')}\n        columns={WalletColumns}\n        pagiation={false}\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell component=\"th\" id={labelId} scope=\"row\">\n              {moment(row.date).format('YYYY-MM-DD HH:mm')}\n            </StyledTableCell>\n            <StyledTableCell>{row.tokenSymbol}</StyledTableCell>\n            <StyledTableCell>{row.walletRewards} WBTC</StyledTableCell>\n            <StyledTableCell>{row.type}</StyledTableCell>\n          </>\n        )}\n      />\n    </TableCard>\n  )\n}\n\nconst AvatarList = ({ list }) => {\n  return (\n    <TableCard>\n      <Table\n        dataSource={list.filter((it) => it.type === 'Avatar')}\n        columns={AvatarColumns}\n        pagiation={false}\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell component=\"th\" id={labelId} scope=\"row\">\n              {moment(row.date).format('YYYY-MM-DD HH:mm')}\n            </StyledTableCell>\n            <StyledTableCell>{row.tokenSymbol}</StyledTableCell>\n            <StyledTableCell>{row.avatarRewards} WBTC</StyledTableCell>\n            <StyledTableCell>Collateral</StyledTableCell>\n          </>\n        )}\n      />\n    </TableCard>\n  )\n}\nconst AllList = ({ list }) => {\n  return (\n    <>\n      <TableCard>\n        <Table\n          dataSource={list}\n          columns={WalletColumns}\n          pagiation={false}\n          content={(row, index, labelId) => (\n            <>\n              <StyledTableCell component=\"th\" id={labelId} scope=\"row\">\n                {moment(row.date).format('YYYY-MM-DD HH:mm')}\n              </StyledTableCell>\n              <StyledTableCell>{row.tokenSymbol}</StyledTableCell>\n              <StyledTableCell>{row.type === 'Avatar' ? row.avatarRewards : row.walletRewards} WBTC</StyledTableCell>\n              <StyledTableCell>{row.type === 'Avatar' ? 'Collateral' : row.type}</StyledTableCell>\n            </>\n          )}\n        />\n      </TableCard>\n    </>\n  )\n}\n\nfunction ClaimedHistory(props) {\n  const { match } = props\n  const [dataSource, setDataSource] = useState([])\n  const list = window.localStorage.getItem('claimRewardsList')\n\n  useEffect(() => {\n    if (list) {\n      const _list = JSON.parse(list)\n      setDataSource(_list)\n    }\n  }, [list])\n\n  return (\n    <>\n      <BTitle>Claimed Rewards History</BTitle>\n      <Box>\n        <Tabs\n          tabsStyle={{ marginTop: 0 }}\n          defaultTabsValue={match.params.id}\n          tab={[\n            {\n              label: 'All',\n              component: <AllList list={dataSource} />,\n            },\n            {\n              label: 'My Wallet',\n              component: <WalletList list={dataSource} />,\n            },\n            {\n              label: 'Collateral',\n              component: <AvatarList list={dataSource} />,\n            },\n          ]}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default ClaimedHistory\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Svg = styled.svg`\n  font-size: 14px;\n  width: 10px;\n  height: 5px;\n  display: block;\n`\n\nfunction SortIcon({order}) {\n  return (\n    <span>\n        <Svg width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M0.284084 3.2146L4.81473 3.2146C5.03791 3.2146 5.17182 3.06953 5.06023 2.95794C4.89284 2.77939 2.89534 0.692616 2.79491 0.592183C2.67216 0.458272 2.40434 0.480591 2.29274 0.592183C2.21463 0.670297 0.161333 2.83519 0.0385814 2.95794C-0.0730109 3.08069 0.0720592 3.20344 0.284084 3.2146Z\"\n    fill={order === 'asc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n  <Svg  width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M4.81626 0.7854H0.285613C0.0624289 0.7854 -0.0714817 0.930471 0.0401105 1.04206C0.207499 1.22061 2.205 3.30738 2.30543 3.40782C2.42818 3.54173 2.69601 3.51941 2.8076 3.40782C2.88571 3.3297 4.93901 1.16481 5.06176 1.04206C5.17335 0.919311 5.02828 0.79656 4.81626 0.7854Z\"\n    fill={order === 'desc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n\n    </span>\n  );\n}\n\nexport default SortIcon;\n","import React, { useCallback } from 'react'\nimport { styled } from '@mui/material/styles'\nimport {\n  Box,\n  Table,\n  TableRow,\n  TableSortLabel,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n} from '@mui/material'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport SortIcon from './icon/SortIcon'\n\nexport const StyledTableCell = styled(TableCell)(() => ({\n  [`&.${tableCellClasses.head}`]: {\n    border: 'none',\n    color: 'rgba(0, 0, 0, 0.5)',\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    borderBottom: '1px solid #E2E8EE',\n  },\n}))\nexport const StyledTableRow = styled(TableRow)(() => ({\n  cursor: 'pointer',\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    fontSize: 14,\n    borderBottom: '1px solid rgba(226, 232, 238, 1)',\n  },\n}))\n\nconst BoxWrapper = styled(Box)`\n  height: 80%;\n  overflow: scroll;\n  &::-webkit-scrollbar,\n  .MuiTableContainer-root::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) {\n      return order\n    }\n    return a[1] - b[1]\n  })\n  console.log('stabilizedThis :>> ', stabilizedThis);\n  return stabilizedThis.map((el) => el[0])\n}\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, columns, isMyPage = false } = props\n  const createSortHandler = (property) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell, index) => (\n          <StyledTableCell\n            style={{ paddingLeft: index === 0 && isMyPage && 0 }}\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {!headCell.isSort ? (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            )}\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport default function EnhancedTable(props) {\n  const { dataSource, columns, content, pagination, rowClick, isMyPage, pages } = props\n\n  const [order, setOrder] = React.useState<Order>('desc')\n  const [orderBy, setOrderBy] = React.useState(columns[0].id)\n  const [selected, setSelected] = React.useState<readonly string[]>([])\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property) => {\n    console.log('p :>> ', property);\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  const handleClick = useCallback(\n    (event, name) => {\n      const selectedIndex = selected.indexOf(name)\n      let newSelected: readonly string[] = []\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name)\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1))\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1))\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1))\n      }\n\n      setSelected(newSelected)\n\n      if (rowClick) {\n        rowClick(event, name)\n      }\n    },\n    [rowClick, selected],\n  )\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n    if (pagination && props.onChangePage) {\n      props.onChangePage(newPage);\n    }\n  }\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const dataSourceDom = React.useCallback(() => {\n    if (dataSource && dataSource.length && pagination) {\n      if (pages) {\n        return stableSort(dataSource, getComparator(order, orderBy))\n          .map((row, index) => {\n            const labelId = `enhanced-table-checkbox-${index}`\n            return (\n              <StyledTableRow\n                hover\n                onClick={(event) => handleClick(event, row.ticker)}\n                role=\"checkbox\"\n                tabIndex={-1}\n                key={`row_${labelId}`}\n              >\n                {content(row, index, labelId)}\n              </StyledTableRow>\n            )\n          })\n      }\n      return stableSort(dataSource, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row, index) => {\n          const labelId = `enhanced-table-checkbox-${index}`\n          return (\n            <StyledTableRow\n              hover\n              onClick={(event) => handleClick(event, row.ticker)}\n              role=\"checkbox\"\n              tabIndex={-1}\n              key={`row_${labelId}`}\n            >\n              {content(row, index, labelId)}\n            </StyledTableRow>\n          )\n        })\n    }\n    if (dataSource && dataSource.length && !pagination) {\n      return stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n        const labelId = `enhanced-table-checkbox-${index}`\n        return (\n          <StyledTableRow\n            hover\n            onClick={(event) => handleClick(event, row.ticker)}\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={row.ticker}\n          >\n            {content(row, index, labelId)}\n          </StyledTableRow>\n        )\n      })\n    }\n    return (\n      <StyledTableRow>\n        <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n          No data\n        </StyledTableCell>\n      </StyledTableRow>\n    )\n  }, [columns.length, content, dataSource, handleClick, order, orderBy, page, pages, pagination, rowsPerPage])\n  return (\n    <BoxWrapper>\n      <TableContainer>\n        <Table sx={{ minWidth: 1400 }} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            columns={columns}\n            isMyPage={isMyPage}\n          />\n          <TableBody>\n            {dataSourceDom()}\n            {/* {dataSource && dataSource.length && pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <StyledTableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.ticker)}\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.ticker}\n                    >\n                      {content(row, index, labelId)}\n                    </StyledTableRow>\n                  )\n                })\n            ) : dataSource && dataSource.length && !pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`\n                return (\n                  <StyledTableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.ticker)}\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.ticker}\n                  >\n                    {content(row, index, labelId)}\n                  </StyledTableRow>\n                )\n              })\n            ) : (\n              <StyledTableRow>\n                <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n                  No data\n                </StyledTableCell>\n              </StyledTableRow>\n            )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {pagination ? (\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={pages || (dataSource && dataSource.length) || 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      ) : null}\n    </BoxWrapper>\n  )\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { withRouter } from 'react-router'\n\nexport interface StyledTabProps {\n  label: string\n  style?: any\n}\n\nexport interface StyledTabsProps {\n  children?: React.ReactNode\n  value: number\n  onChange: (event: React.SyntheticEvent, newValue: number) => void\n  style?: any\n}\n\nexport const AntTabs = styled((props: StyledTabsProps) => (\n  <Tabs {...props} TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }} />\n))({\n  margin: '40px auto 20px',\n  '& .MuiTabs-indicator': {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 4,\n    backgroundColor: 'transparent',\n  },\n  '& .MuiTabs-indicatorSpan': {\n    maxWidth: 20,\n    width: '100%',\n    borderRadius: 5,\n    background: 'linear-gradient(270deg, #7AE9F0 0%, #61C3F7 100%);',\n  },\n})\n\nexport const AntTab = styled((props: StyledTabProps) => <Tab disableRipple {...props} />)(({ theme }) => ({\n  textTransform: 'none',\n  minWidth: 0,\n  [theme.breakpoints.up('sm')]: {\n    minWidth: 0,\n  },\n  fontFamily: 'Heebo Medium',\n  fontWeight: 500,\n  marginRight: theme.spacing(1),\n  color: 'rgba(0, 0, 0, 0.5)',\n  fontSize: '22px',\n  '&:hover': {\n    color: '#000000',\n    opacity: 1,\n  },\n  '&.Mui-selected': {\n    color: '#000000',\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: '#d1eaff',\n  },\n}))\n\nfunction CustomizedTabs(props) {\n  const { tab, tabsStyle, tabStyle, defaultTabsValue, history } = props\n  const [value, setValue] = React.useState(Number(defaultTabsValue) || 0)\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n\n    if (defaultTabsValue !== undefined) {\n      history.push(`/history/claimed/${newValue}`)\n    }\n  }\n\n  return (\n    <>\n      <AntTabs style={tabsStyle} value={value} onChange={handleChange}>\n        {tab.map((it) => (\n          <AntTab style={tabStyle} key={it.label} label={it.label} />\n        ))}\n      </AntTabs>\n      {tab.map((item, index) => index === value && <React.Fragment key={item.label}>{item.component}</React.Fragment>)}\n    </>\n  )\n}\nexport default withRouter(CustomizedTabs)\n"],"sourceRoot":""}