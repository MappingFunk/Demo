{"version":3,"sources":["views/Faucet/index.tsx","utils/formatTheValue.ts","utils/addAsset.ts"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","SubTitle","_templateObject3","CardWrap","Card","_templateObject4","ButtonWrap","Button","_templateObject5","CheckboxWrap","Checkbox","_templateObject6","BpIcon","_ref","theme","width","height","borderRadius","boxShadow","palette","mode","backgroundColor","backgroundImage","outline","outlineOffset","background","BpCheckedIcon","display","content","TokenWrap","_templateObject7","faucet","contracts","BpCheckbox","props","_jsx","sx","bgcolor","disableRipple","color","checkedIcon","icon","inputProps","Faucet","account","connector","chainId","active","useWeb3React","signer","useSystemParams","faucetContract","setFacuetContract","useState","limitedMapping","setLimitDays","isAirdrop","setIsAirdrop","airDropToken","setAirDropToken","WBTC","USDT","toastSuccess","toastError","toastInfo","useToast","addToMetaMask","useCallback","symbol","SupportedChainId","BLAST_SEPPLIA","addAsset","tokenSymbol","useEffect","timer","console","log","tokens","decimals","setTimeout","window","grecaptcha","enterprise","render","sitekey","process","hl","callback","res","contract","getContract","abi","address","_limitDay","Promise","all","then","data","clearTimeout","handleAirdrop","async","info","push","airdrop","wbtcTx","usdtTx","ToastTitle","submited","TransactionSubmittedInfo","txHash","hash","wait","success","e","failed","reason","_jsxs","_Fragment","children","style","overflow","Grid","container","item","xs","Input","value","disabled","type","spacing","FormControlLabel","control","checked","onChange","val","state","label","labelPlacement","formatWBTC","dir","Number","toSmallUnits","className","ButtonText","onClick","id","formatNumberWithUnits","concat","toFixed","resVal","formatSnNumber","number","isNaN","toString","includes","toLocaleString","replace","String","rex","test","numArr","match","n","substr","TokenUtils","formatFourDecimals","mark","slice","indexOf","BigNumber","from","pow","formatNumber","decimal","arguments","length","undefined","v","str","formatTokenAmount","chainConfigs","valueToKeyMap","provider","getProvider","request","method","params","options","error"],"mappings":"ieAoBA,MAAMA,EAAUC,YAAO,MAAPA,CAAaC,MAAAC,YAAA,2GAOvBC,EAAQH,YAAO,KAAPA,CAAYI,MAAAF,YAAA,4FAMpBG,EAAWL,YAAO,IAAPA,CAAWM,MAAAJ,YAAA,gKAStBK,EAAWP,YAAOQ,IAAPR,CAAYS,MAAAP,YAAA,orCA6DvBQ,EAAaV,YAAOW,IAAPX,CAAcY,MAAAV,YAAA,oPASpBW,EAAeb,YAAOc,IAAPd,CAAgBe,MAAAb,YAAA,6BAGtCc,EAAShB,YAAO,OAAPA,EAAeiB,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC5CE,MAAO,GACPC,OAAQ,GACRC,aAAc,MACdC,UACyB,SAAvBJ,EAAMK,QAAQC,KACV,gCACA,sEACNC,gBAAwC,SAAvBP,EAAMK,QAAQC,KAAkB,UAAY,UAC7DE,gBACyB,SAAvBR,EAAMK,QAAQC,KACV,gEACA,+DACN,sBAAuB,CACrBG,QAAS,+BACTC,cAAe,GAEjB,kBAAmB,CACjBH,gBAAwC,SAAvBP,EAAMK,QAAQC,KAAkB,UAAY,WAE/D,qBAAsB,CACpBF,UAAW,OACXO,WAAmC,SAAvBX,EAAMK,QAAQC,KAAkB,oBAAsB,wBAErE,IAEKM,EAAgB9B,YAAOgB,EAAPhB,CAAe,CACnCyB,gBAAiB,UACjBC,gBAAiB,oDACjBJ,UAAW,OACX,WAAY,CACVS,QAAS,QACTZ,MAAO,GACPC,OAAQ,GACRM,gBACE,mUAGFM,QAAS,MAEX,kBAAmB,CACjBP,gBAAiB,aAIfQ,EAAYjC,YAAO,MAAPA,CAAakC,MAAAhC,YAAA,ggBAwBzB,OAAEiC,GAAWC,IAGZ,SAASC,EAAWC,GACzB,OACEC,cAAC1B,EAAY,CACX2B,GAAI,CACF,UAAW,CAAEC,QAAS,gBAExBC,eAAa,EACbC,MAAM,UACNC,YAAaL,cAACT,EAAa,IAC3Be,KAAMN,cAACvB,EAAM,IACb8B,WAAY,CAAE,aAAc,oBACxBR,GAGV,CAEe,SAASS,IACtB,MAAM,QAAEC,EAAO,UAAEC,EAAS,QAAEC,EAAO,OAAEC,GAAWC,eAC1C,OAAEC,GAAWC,eACZC,EAAgBC,GAAqBC,mBAAS,OAC9CC,EAAgBC,GAAgBF,mBAAS,OACzCG,EAAWC,GAAgBJ,oBAAS,IACpCK,EAAcC,GAAmBN,mBAAS,CAAEO,MAAM,EAAMC,MAAM,KAC/D,aAAEC,EAAY,WAAEC,EAAU,UAAEC,GAAcC,cAE1CC,EAAgBC,uBACnBC,IACKrB,GAAUD,IAAYuB,IAAiBC,eACzCC,YAAS,CAAE1B,YAAW2B,YAAaJ,EAAQtB,WAC7C,GAEF,CAACC,EAAQD,EAASD,IAGpB4B,qBAAU,KAER,IAAIC,EACJ,GAFAC,QAAQC,IAAIC,IAAOjB,KAAKkB,SAAU,yBAE9B7B,EAAQ,CACVyB,EAAQK,YAAW,KACbC,OAAOC,YACTD,OAAOC,WAAWC,WAAWC,OAAO,eAAgB,CAClDC,QAASC,2CACTC,GAAI,KACJC,SAASC,GACHA,GACF/B,GAAa,EAEjB,GAEJ,GACC,KACH,MAAMgC,EAAWC,YAAYzC,EAAQlB,EAAO4D,IAAK5D,EAAO6D,QAAQ9C,IAChE,GAAI2C,EAAU,CACZ,MAAMI,EAAY,CAChBJ,EAASnC,eAAeuB,IAAOjB,KAAKgC,QAAQ9C,IAC5C2C,EAASnC,eAAeuB,IAAOhB,KAAK+B,QAAQ9C,KAE9CgD,QAAQC,IAAIF,GAAWG,MAAMC,IAC3B1C,EAAa,CACXK,KAAMqC,EAAK,GACXpC,KAAMoC,EAAK,IACX,GAEN,CACA7C,EAAkBqC,EACpB,CACA,MAAO,KACLS,aAAaxB,EAAM,CACpB,GACA,CAAC5B,EAASG,IAEb,MAAMkD,EAAgBhC,uBAAYiC,UAChC,GAAIjD,EAAgB,CAClB,MAAMkD,EAAO,GACb5C,GAAa,GACTC,EAAaE,MACfyC,EAAKC,KAAKnD,EAAeoD,QAAQ1B,IAAOjB,KAAKgC,QAAQ9C,KAEnDY,EAAaG,MACfwC,EAAKC,KAAKnD,EAAeoD,QAAQ1B,IAAOhB,KAAK+B,QAAQ9C,KAEvD,IACE,MAAO0D,EAAQC,SAAgBX,QAAQC,IAAIM,GAC3C,GAAIG,EAAQ,CACVxC,EACE0C,IAAWC,SACXxE,cAACyE,IAAwB,CACvBC,OAAQL,EAAOM,KACflF,QAAQ,2GAGS4E,EAAOO,QAE1BjD,EAAa4C,IAAWM,QAAS,mFAErC,CACA,GAAIP,EAAQ,CACVzC,EACE0C,IAAWC,SACXxE,cAACyE,IAAwB,CACvBC,OAAQJ,EAAOK,KACflF,QAAQ,2GAGS6E,EAAOM,QAE1BjD,EAAa4C,IAAWM,QAAS,mFAErC,CACF,CAAE,MAAOC,GACPxD,GAAa,GACbM,EAAW2C,IAAWQ,QAAS,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,SAAU,mDAC7C,CACF,IACC,CAACzD,EAAcZ,EAASK,EAAgBY,EAAYC,EAAWF,IAElE,OACEsD,eAAAC,WAAA,CAAAC,SAAA,CACEnF,cAACpC,EAAK,CAAAuH,SAAC,WACPnF,cAAClC,EAAQ,CAAAqH,SAAC,uEACVnF,cAAA,OAAKoF,MAAO,CAAExG,MAAO,OAAQyG,SAAU,UAAWF,SAChDnF,cAACxC,EAAO,CAAA2H,SACNnF,cAACsF,IAAI,CAACC,WAAS,EAAAJ,SACbnF,cAACsF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAEN,SACfF,eAACjH,EAAQ,CAAAmH,SAAA,CACPnF,cAAA,MAAAmF,SAAI,mBACJnF,cAAC0F,IAAK,CAACC,MAAOlF,EAASmF,UAAQ,EAACC,KAAK,SACrC7F,cAAA,MAAAmF,SAAI,mBACJF,eAACK,IAAI,CAACC,WAAS,EAACO,QAAS,EAAEX,SAAA,CACzBnF,cAACsF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAEN,SACfF,eAACvF,EAAS,CAAAyF,SAAA,CACRnF,cAAC+F,IAAgB,CACfC,QACEhG,cAACF,EAAU,CACTmG,QAAS1E,EAAaE,KACtByE,SAAUA,CAACpB,EAAGqB,KACZ3E,GAAiB4E,IAAK,IAAWA,EAAO3E,KAAM0E,KAAO,IAI3DE,MAAM,YACNC,eAAe,QAEjBtG,cAAC0F,IAAK,CACJG,KAAK,SACLD,UAAQ,EACRD,MAAOxE,EAAiBoF,YAAWpF,EAAeM,MAAQ,EAC1D+E,IAAI,aAIVxG,cAACsF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAEN,SACfF,eAACvF,EAAS,CAAAyF,SAAA,CACRnF,cAAC+F,IAAgB,CACfC,QACEhG,cAACF,EAAU,CACTmG,QAAS1E,EAAaG,KACtBwE,SAAUA,CAACpB,EAAGqB,KACZ3E,GAAiB4E,IAAK,IAAWA,EAAO1E,KAAMyE,KAAO,IAI3DE,MAAM,YACNC,eAAe,QAEjBtG,cAAC0F,IAAK,CACJG,KAAK,SACLD,UAAQ,EACRD,MACExE,EACIsF,OAAOtF,EAAeO,MAAgBgF,YAAa,IAAKhE,IAAOhB,KAAKiB,UACpE,EAEN6D,IAAI,gBAKZvB,eAACK,IAAI,CAACC,WAAS,EAACO,QAAS,EAAGa,UAAU,cAAaxB,SAAA,CACjDnF,cAACsF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAEN,SACfnF,cAAC4G,IAAU,CACTD,UAAU,MACVE,QAASA,KACP9E,EAAc,OAAO,EACrBoD,SACH,sBAIHnF,cAACsF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAEN,SACfnF,cAAC4G,IAAU,CACTD,UAAU,MACVE,QAASA,KACP9E,EAAc,OAAO,EACrBoD,SACH,yBAKLnF,cAAA,OAAK8G,GAAG,iBACR9G,cAAC7B,EAAU,CAACyH,SAAUvE,EAAWwF,QAAS7C,EAAcmB,SAAC,8BAuBzE,C,mCC3ZA,0IAMO,SAAS4B,EAAsBZ,GACpC,GAAIA,GAAO,IACT,MAAM,GAANa,QAAWb,EAAM,KAASc,QAAQ,GAAE,KAEtC,GAAId,GAAO,IACT,MAAM,GAANa,QAAWb,EAAM,KAAMc,QAAQ,GAAE,KAEnC,MAAMC,EAASf,EAAIc,QAAQ,GAC3B,OAAe,IAAXC,GAA2B,MAAXA,EACX,OAEFA,CACT,CAGO,SAASC,EAAeC,GAC7B,GAAIX,OAAOY,MAAMZ,OAAOW,IACtB,OAAOA,EAGT,GAAIA,EAAOE,WAAWC,SAAS,KAC7B,OAAOd,OAAOW,GAAQI,iBAAiBC,QAAQ,KAAM,IAEvD,GAAIC,OAAON,GAAQG,SAAS,KAAM,CAChC,MAAMzC,EAAI4C,OAAON,GACXO,EAAM,+BACZ,IAAKA,EAAIC,KAAK9C,GAAI,OAAOsC,EACzB,MAAMS,EAAS/C,EAAEgD,MAAMH,GACjBI,EAAItB,OAAO,GAADO,OAAIa,EAAO,IAAEb,OAAGa,EAAO,IAAM,KAE7C,MADS,KAAAb,OAAQU,OAAO,KAAOjB,OAAOoB,EAAO,IAAM,IAAIG,OAAO,IAAEhB,OAAGe,GACxDN,QAAQ,MAAO,GAC5B,CAEA,OAAOC,OAAON,GAAQG,SAAS,KAAOU,IAAWC,mBAAmBzB,OAAOW,IAAWM,OAAON,EAC/F,CAOO,SAASH,EAAQd,EAAKgC,GAC3B,MAAMxC,EAAQ+B,OAAOP,EAAehB,IACpC,OAAIgC,GAAiB,SAATA,GAAmB1B,OAAOd,IAAUA,EAAM4B,SAAS,KACtDJ,EAAeV,OAAOd,EAAMyC,MAAM,EAAGzC,EAAM0C,QAAQ,KAAO,KAE/DF,GAAiB,cAATA,GAAwB1B,OAAOd,IAAUA,EAAM4B,SAAS,KAC3DJ,EAAeV,OAAOd,EAAMyC,MAAM,EAAGzC,EAAM0C,QAAQ,KAAO,KAE/C,kBAATF,EACFhB,EAAeV,OAAOd,EAAMyC,MAAM,EAAGzC,EAAM0C,QAAQ,MAAQF,EAAO,OAE9D,SAATA,GAA4B,cAATA,IACjBxC,EAAM4B,SAAS,KACVJ,EAAeV,OAAOd,EAAMyC,MAAM,EAAGzC,EAAM0C,QAAQ,KAAO,KAI9DlC,CACT,CAEO,SAASI,EAAWJ,GACzB,OAAIA,EACKc,EAAQE,EAAehB,EAAMM,OAAO6B,IAAUC,KAAK,IAAIC,IAAI9F,IAAOjB,KAAKkB,YAAa,QAKtF,CACT,CA4BO,SAAS8F,EAAatC,GAAwB,IAAduC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/C,QAAYE,IAAR1C,EACF,MAAO,IAGT,MAAM2C,EAAmB,kBAAR3C,EAAmBA,EAAMM,OAAON,GAC3C4C,EAAMrB,OAAOoB,GACnB,OAAOC,EAAIxB,SAAS,KAAOU,IAAWe,kBAAkB7C,EAAKuC,GAAWK,CAC1E,C,mCC/GA,8CAKe9E,eAAe7B,EAAQ1D,GAGR,IAHS,UAAEgC,EAAS,YAAE2B,EAAW,QAAE1B,GAGrCjC,EACxB8D,QAAQC,IAAI,cAAewG,IAAatI,GAAS+B,OAAOwG,IAAc7G,IAAcoB,SACtF,IACE,MAAM0F,QAAiBzI,EAAU0I,oBAC3BD,EAASE,QAAQ,CACnBC,OAAQ,oBACRC,OAAQ,CACN1D,KAAM,QACN2D,QAAS,CACP/F,QAASwF,IAAatI,GAAS+B,OAAOwG,IAAc7G,IAAcoB,QAClExB,OAAQI,EACRM,SAAUsG,IAAatI,GAAS+B,OAAOwG,IAAc7G,IAAcM,YAI7E,CAAE,MAAO8G,GACP,CAEJ,C","file":"static/js/24.0c4c8258.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { Grid, Input, FormControlLabel, Checkbox, CheckboxProps, Button as ButtonText } from '@mui/material'\n\nimport Card from 'components/Card'\nimport { useWeb3React } from 'web3-react-core'\nimport { Button } from 'components/uikit/components/Button'\nimport addAsset from 'utils/addAsset'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { getContract } from 'utils/web3React'\nimport contracts from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { formatWBTC } from 'utils/formatTheValue'\n// import { BigNumber } from '@ethersproject/bignumber'\nimport { toSmallUnits } from 'utils/transformHelper'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport useToast from '../../hooks/useToast'\nimport useSystemParams from '../../hooks/useSystemParams'\n\nconst Wrapper = styled('div')`\n  padding-right: 44px;\n  height: calc(100vh - 189px);\n  overflow: auto;\n  min-width: 1024px;\n`\n\nconst Title = styled('h2')`\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 47px;\n  color: #000000;\n`\nconst SubTitle = styled('p')`\n  font-family: 'Heebo Regular';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  color: rgba(0, 0, 0, 0.5);\n  margin-bottom: 20px;\n`\n\nconst CardWrap = styled(Card)`\n  h3 {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-weight: 600;\n    font-size: 22px;\n    line-height: 30px;\n    color: #000000;\n    margin-bottom: 16px;\n  }\n\n  .MuiInputBase-root {\n    margin-bottom: 30px;\n    width: 100%;\n    background: rgba(255, 255, 255, 0.4);\n    font-weight: 600;\n    border: 1px solid rgba(207, 216, 226, 0.5);\n    box-sizing: border-box;\n    border-radius: 11px;\n    padding: 12px;\n    font-size: 14px;\n    color: rgba(0, 0, 0, 0.5);\n\n    &::before {\n      content: '';\n      border: 0;\n    }\n\n    input {\n      padding: 0;\n      border: none;\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n    }\n  }\n\n  .addToWallet {\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 17px;\n    margin-bottom: 30px;\n    text-align: right;\n    .btn {\n      cursor: pointer;\n      color: #2aa1ff;\n      padding: 0;\n      text-transform: none;\n    }\n  }\n\n  .link {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.02em;\n    color: #2aa1ff;\n    text-align: center;\n    cursor: pointer;\n  }\n`\n\nconst ButtonWrap = styled(Button)`\n  display: block !important;\n  margin: 43px auto 20px !important;\n  padding: 13px 53px !important;\n  box-shadow: none !important;\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px !important;\n`\n\nexport const CheckboxWrap = styled(Checkbox)`\n  padding: 0 9px;\n`\nconst BpIcon = styled('span')(({ theme }) => ({\n  width: 16,\n  height: 16,\n  borderRadius: '50%',\n  boxShadow:\n    theme.palette.mode === 'dark'\n      ? '0 0 0 1px rgb(16 22 26 / 40%)'\n      : 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n  backgroundColor: theme.palette.mode === 'dark' ? '#394b59' : '#f5f8fa',\n  backgroundImage:\n    theme.palette.mode === 'dark'\n      ? 'linear-gradient(180deg,hsla(0,0%,100%,.05),hsla(0,0%,100%,0))'\n      : 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n  '.Mui-focusVisible &': {\n    outline: '2px auto rgba(19,124,189,.6)',\n    outlineOffset: 2,\n  },\n  'input:hover ~ &': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#30404d' : '#ebf1f5',\n  },\n  'input:disabled ~ &': {\n    boxShadow: 'none',\n    background: theme.palette.mode === 'dark' ? 'rgba(57,75,89,.5)' : 'rgba(206,217,224,.5)',\n  },\n}))\n\nconst BpCheckedIcon = styled(BpIcon)({\n  backgroundColor: '#137cbd',\n  backgroundImage: 'linear-gradient(270deg, #7AE9F0 0%, #61C3F7 100%)',\n  boxShadow: 'none',\n  '&:before': {\n    display: 'block',\n    width: 16,\n    height: 16,\n    backgroundImage:\n      \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n      \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n      \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n    content: '\"\"',\n  },\n  'input:hover ~ &': {\n    backgroundColor: '#106ba3',\n  },\n})\n\nconst TokenWrap = styled('div')`\n  user-select: none;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.4);\n  border: 1px solid rgba(207, 216, 226, 0.5);\n  box-sizing: border-box;\n  padding: 12px;\n  border-radius: 11px;\n\n  .MuiFormControlLabel-root {\n    width: 50%;\n    border-right: 1px solid rgba(207, 216, 226, 0.5);\n  }\n\n  div.MuiInput-root {\n    border: none;\n    padding: 0;\n    background-color: transparent;\n    width: 50%;\n    margin: 0;\n  }\n`\nconst { faucet } = contracts\n\n// Inspired by blueprintjs\nexport function BpCheckbox(props: CheckboxProps) {\n  return (\n    <CheckboxWrap\n      sx={{\n        '&:hover': { bgcolor: 'transparent' },\n      }}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<BpCheckedIcon />}\n      icon={<BpIcon />}\n      inputProps={{ 'aria-label': 'Checkbox demo' }}\n      {...props}\n    />\n  )\n}\n\nexport default function Faucet() {\n  const { account, connector, chainId, active } = useWeb3React()\n  const { signer } = useSystemParams()\n  const [faucetContract, setFacuetContract] = useState(null)\n  const [limitedMapping, setLimitDays] = useState(null)\n  const [isAirdrop, setIsAirdrop] = useState(true)\n  const [airDropToken, setAirDropToken] = useState({ WBTC: true, USDT: true })\n  const { toastSuccess, toastError, toastInfo } = useToast()\n\n  const addToMetaMask = useCallback(\n    (symbol) => {\n      if (active && chainId === SupportedChainId.BLAST_SEPPLIA) {\n        addAsset({ connector, tokenSymbol: symbol, chainId })\n      }\n    },\n    [active, chainId, connector],\n  )\n\n  useEffect(() => {\n    console.log(tokens.WBTC.decimals, ' tokens tokens tokens')\n    let timer\n    if (signer) {\n      timer = setTimeout(() => {\n        if (window.grecaptcha) {\n          window.grecaptcha.enterprise.render('html_element', {\n            sitekey: process.env.REACT_APP_reCAPTCHA_keys,\n            hl: 'en',\n            callback(res) {\n              if (res) {\n                setIsAirdrop(false)\n              }\n            },\n          })\n        }\n      }, 2000)\n      const contract = getContract(signer, faucet.abi, faucet.address[chainId])\n      if (contract) {\n        const _limitDay = [\n          contract.limitedMapping(tokens.WBTC.address[chainId]),\n          contract.limitedMapping(tokens.USDT.address[chainId]),\n        ]\n        Promise.all(_limitDay).then((data) => {\n          setLimitDays({\n            WBTC: data[0],\n            USDT: data[1],\n          })\n        })\n      }\n      setFacuetContract(contract)\n    }\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [chainId, signer])\n\n  const handleAirdrop = useCallback(async () => {\n    if (faucetContract) {\n      const info = []\n      setIsAirdrop(true)\n      if (airDropToken.WBTC) {\n        info.push(faucetContract.airdrop(tokens.WBTC.address[chainId]))\n      }\n      if (airDropToken.USDT) {\n        info.push(faucetContract.airdrop(tokens.USDT.address[chainId]))\n      }\n      try {\n        const [wbtcTx, usdtTx] = await Promise.all(info)\n        if (wbtcTx) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo\n              txHash={wbtcTx.hash}\n              content=\"Your WBTC airdrop request has been submitted successfully. The distribution will begin shortly.\"\n            />,\n          )\n          const result = await wbtcTx.wait()\n          if (result) {\n            toastSuccess(ToastTitle.success, 'WBTC airdrop successful. Check the transaction history for detailed information.')\n          }\n        }\n        if (usdtTx) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo\n              txHash={usdtTx.hash}\n              content=\"Your USDT airdrop request has been submitted successfully. The distribution will begin shortly.\"\n            />,\n          )\n          const result = await usdtTx.wait()\n          if (result) {\n            toastSuccess(ToastTitle.success, 'USDT airdrop successful. Check the transaction history for detailed information.')\n          }\n        }\n      } catch (e: any) {\n        setIsAirdrop(false)\n        toastError(ToastTitle.failed, e?.reason || 'An error occurred while processing your request.')\n      }\n    }\n  }, [airDropToken, chainId, faucetContract, toastError, toastInfo, toastSuccess])\n\n  return (\n    <>\n      <Title>Faucet</Title>\n      <SubTitle>You can claim the test tokens from the faucet once every 24 hours.</SubTitle>\n      <div style={{ width: '100%', overflow: 'scroll' }}>\n        <Wrapper>\n          <Grid container>\n            <Grid item xs={8}>\n              <CardWrap>\n                <h3>Wallet address</h3>\n                <Input value={account} disabled type=\"text\" />\n                <h3>Request tokens</h3>\n                <Grid container spacing={4}>\n                  <Grid item xs={6}>\n                    <TokenWrap>\n                      <FormControlLabel\n                        control={\n                          <BpCheckbox\n                            checked={airDropToken.WBTC}\n                            onChange={(e, val) => {\n                              setAirDropToken((state) => ({ ...state, WBTC: val }))\n                            }}\n                          />\n                        }\n                        label=\"test WBTC\"\n                        labelPlacement=\"end\"\n                      />\n                      <Input\n                        type=\"number\"\n                        disabled\n                        value={limitedMapping ? formatWBTC(limitedMapping.WBTC) : 0}\n                        dir=\"rtl\"\n                      />\n                    </TokenWrap>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TokenWrap>\n                      <FormControlLabel\n                        control={\n                          <BpCheckbox\n                            checked={airDropToken.USDT}\n                            onChange={(e, val) => {\n                              setAirDropToken((state) => ({ ...state, USDT: val }))\n                            }}\n                          />\n                        }\n                        label=\"test USDT\"\n                        labelPlacement=\"end\"\n                      />\n                      <Input\n                        type=\"number\"\n                        disabled\n                        value={\n                          limitedMapping\n                            ? Number(limitedMapping.USDT as any) / (toSmallUnits('1', tokens.USDT.decimals) as any)\n                            : 0\n                        }\n                        dir=\"rtl\"\n                      />\n                    </TokenWrap>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={4} className=\"addToWallet\">\n                  <Grid item xs={6}>\n                    <ButtonText\n                      className=\"btn\"\n                      onClick={() => {\n                        addToMetaMask('WBTC')\n                      }}\n                    >\n                      add to MetaMask\n                    </ButtonText>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <ButtonText\n                      className=\"btn\"\n                      onClick={() => {\n                        addToMetaMask('USDT')\n                      }}\n                    >\n                      add to MetaMask\n                    </ButtonText>\n                  </Grid>\n                </Grid>\n                <div id=\"html_element\" />\n                <ButtonWrap disabled={isAirdrop} onClick={handleAirdrop}>\n                  Send Request\n                </ButtonWrap>\n\n                {/* <p className=\"link\">\n                  <a target=\"_blank\" href=\"https://faucetlink.to/goerli\" className=\"link\" rel=\"noreferrer\">\n                    Request Ethereum Goerli testnet ETH from a faucet &nbsp;&nbsp;\n                    <ArrowLine />\n                  </a>\n                </p>\n                <p style={{ marginTop: 15 }} className=\"link\">\n                  <a target=\"_self\" href=\"#/quickMode\" className=\"link\" rel=\"noreferrer\">\n                    Go to Quick Mode &nbsp;&nbsp;\n                    <ArrowLine />\n                  </a>\n                </p> */}\n              </CardWrap>\n            </Grid>\n          </Grid>\n        </Wrapper>\n      </div>\n    </>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport tokens from 'config/constants/tokens'\nimport { utils } from 'ethers'\nimport { TokenUtils } from './transformHelper'\n\n// TODO  formatCurrency => formatNumberWithUnits\nexport function formatNumberWithUnits(val) {\n  if (val >= 1000000) {\n    return `${(val / 1000000).toFixed(1)}M`\n  }\n  if (val >= 10000) {\n    return `${(val / 1000).toFixed(1)}K`\n  }\n  const resVal = val.toFixed(2)\n  if (resVal === 0 || resVal === '0') {\n    return '0.00'\n  }\n  return resVal\n}\n\n// TODO rewrite\nexport function formatSnNumber(number) {\n  if (Number.isNaN(Number(number))) {\n    return number\n  }\n\n  if (number.toString().includes('+')) {\n    return Number(number).toLocaleString().replace(/,/g, '')\n  }\n  if (String(number).includes('-')) {\n    const e = String(number)\n    const rex = /^([0-9]).?([0-9]*)e-([0-9]*)/\n    if (!rex.test(e)) return number\n    const numArr = e.match(rex)\n    const n = Number(`${numArr[1]}${numArr[2] || ''}`)\n    const num = `0.${String(10 ** (Number(numArr[3]) - 1)).substr(1)}${n}`\n    return num.replace(/0*$/, '')\n  }\n\n  return String(number).includes('.') ? TokenUtils.formatFourDecimals(Number(number)) : String(number)\n}\n\nexport default function formatTheValue(val: number | BigNumber | any, unitName?: number) {\n  return Number(utils.formatUnits(typeof val === 'number' ? val.toFixed(unitName) : val, unitName))\n  // return 0\n}\n// TODO reset\nexport function toFixed(val, mark?) {\n  const value = String(formatSnNumber(val))\n  if (mark && mark === 'WBTC' && Number(value) && value.includes('.')) {\n    return formatSnNumber(Number(value.slice(0, value.indexOf('.') + 9)))\n  }\n  if (mark && mark === 'F(BTC,20)' && Number(value) && value.includes('.')) {\n    return formatSnNumber(Number(value.slice(0, value.indexOf('.') + 7)))\n  }\n  if (typeof mark === 'number') {\n    return formatSnNumber(Number(value.slice(0, value.indexOf('.') + (mark + 1))))\n  }\n  if (mark !== 'WBTC' || mark !== 'F(BTC,20)') {\n    if (value.includes('.')) {\n      return formatSnNumber(Number(value.slice(0, value.indexOf('.') + 3)))\n    }\n    return val\n  }\n  return val\n}\n\nexport function formatWBTC(val) {\n  if (val) {\n    return toFixed(formatSnNumber(val / Number(BigNumber.from(10).pow(tokens.WBTC.decimals))), 'WBTC')\n  }\n  // if (val) {\n  //   return toSmallUnits(val.toSring(), tokens.WBTC.decimals) as any\n  // }\n  return 0\n}\n\nexport function formatBalance(val, mark) {\n  if (val) {\n    return toFixed(formatSnNumber(val / Number(BigNumber.from(10).pow(tokens.WBTC.decimals))), mark)\n  }\n  return 0\n}\n\nexport function toWBTC(val) {\n  return formatSnNumber(val * 10 ** 8)\n}\nexport function toHashToken(val) {\n  return formatSnNumber(val * 10 ** 6)\n}\n\nexport function formatInfinity(val) {\n  const value = String(val)\n  if (value && value.includes('Infinity') && value.includes('-')) {\n    return '-∞'\n  }\n  if (value && value.includes('Infinity') && !value.includes('-')) {\n    return '+∞'\n  }\n\n  return typeof val === 'number' && String(val).includes('.') ? val.toFixed(2) : val\n}\n\nexport function formatNumber(val: any, decimal = 4) {\n  if (val === undefined) {\n    return '0'\n  }\n\n  const v = typeof val === 'number' ? val : Number(val)\n  const str = String(v)\n  return str.includes('.') ? TokenUtils.formatTokenAmount(val, decimal) : str\n}\n","import { chainConfigs, valueToKeyMap } from \"config/constants/tokenConfig\";\nimport {SupportedChainId} from \"../config/constants/chains\";\n\n\n\nexport default async function addAsset({ connector, tokenSymbol, chainId }: { connector: any\n  tokenSymbol: string,\n\n  chainId: SupportedChainId}){\n    console.log('object :>> ', chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address);\n  try {\n    const provider = await connector.getProvider()\n    await provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].decimals, // The number of decimals in the token\n          },\n        },\n      });\n  } catch (error) {\n    //\n  }\n}\n"],"sourceRoot":""}