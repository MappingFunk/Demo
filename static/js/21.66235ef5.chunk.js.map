{"version":3,"sources":["views/History/Claimed.tsx","components/Logo.tsx","components/Table/icon/SortIcon.tsx","components/Table/Table.tsx","components/Tabs/index.tsx"],"names":["window","moment","Box","styled","_templateObject","_taggedTemplateLiteral","ClaimButton","Button","_templateObject2","TableCard","Card","_templateObject3","AvatarColumns","id","numeric","disablePadding","isSort","label","WalletColumns","WalletList","_ref","list","_jsx","children","Table","dataSource","filter","it","type","columns","pagiation","content","row","index","labelId","_jsxs","_Fragment","StyledTableCell","component","scope","date","format","tokenSymbol","walletRewards","AvatarList","_ref2","includes","avatarRewards","AllList","_ref3","ClaimedHistory","props","match","setDataSource","useState","localStorage","getItem","chainId","useWeb3React","currentMintToken","usePositionInfo","handleChangeCurrentPosition","usePositionAction","mintTokens","useMemo","isSupportedChainId","_tokens","mintTokenChainConfigs","tokens","Object","keys","map","key","token","symbol","address","decimals","icon","Logo","imgprops","style","marginRight","logo","useEffect","_list","JSON","parse","BTitle","Select","selectValue","options","isGroup","onChange","e","Tabs","tabsStyle","marginTop","defaultTabsValue","params","tab","_props$imgprops","width","height","src","alt","Svg","svg","SortIcon","order","viewBox","fill","xmlns","d","TableCell","concat","tableCellClasses","head","border","color","body","fontSize","borderBottom","StyledTableRow","TableRow","cursor","BoxWrapper","descendingComparator","a","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableHead","onRequestSort","isMyPage","TableHead","headCell","paddingLeft","sortDirection","TableSortLabel","active","direction","onClick","property","event","IconComponent","fontFamily","marginLeft","EnhancedTable","pagination","rowClick","pages","selectKey","setOrder","React","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleClick","useCallback","dataSourceDom","length","hover","role","tabIndex","slice","textAlign","colSpan","rowSpan","TableContainer","sx","minWidth","handleRequestSort","console","log","TableBody","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onChangePage","onRowsPerPageChange","parseInt","target","value","AntTabs","TabIndicatorProps","className","margin","display","justifyContent","backgroundColor","maxWidth","borderRadius","background","AntTab","Tab","disableRipple","theme","textTransform","breakpoints","up","fontWeight","spacing","opacity","typography","fontWeightMedium","withRouter","tabStyle","history","setValue","Number","handleChange","newValue","undefined","push","item"],"mappings":"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","file":"static/js/21.66235ef5.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport moment from 'moment'\nimport { BTitle } from 'components/CommonComponent'\nimport Tabs from 'components/Tabs'\nimport Card from 'components/Card'\nimport { Button } from 'components/uikit'\nimport Table, { StyledTableCell } from 'components/Table'\nimport Select from 'components/Select'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { isSupportedChainId } from 'utils/web3React'\nimport { useWeb3React } from 'web3-react-core'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { SupportedChainId } from 'config/constants/chains'\nimport Logo from 'components/Logo'\n\nwindow.moment = moment\n\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 26px;\n  padding-right: 44px;\n  height: 80%;\n  overflow: scroll;\n  padding-bottom: 20px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const ClaimButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px;\n  box-shadow: none;\n  height: 30px;\n  line-height: 30px;\n  color: #000;\n  font-size: 14px;\n  display: block;\n  margin: 30px auto 0;\n`\n\nconst TableCard = styled(Card)`\n  margin-bottom: 20px;\n  padding: 8px;\n`\n\nconst AvatarColumns = [\n  {\n    id: 'date',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Date',\n  },\n  {\n    id: 'tokenSymbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'avatarRewards',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimed Rewards',\n  },\n  {\n    id: 'type',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Account',\n  },\n]\nconst WalletColumns = [\n  {\n    id: 'date',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Date',\n  },\n  {\n    id: 'tokenSymbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'walletRewards',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimed Rewards',\n  },\n  {\n    id: 'address',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Account',\n  },\n]\nconst WalletList = ({ list }) => {\n  return (\n    <TableCard>\n      <Table\n        dataSource={list.filter((it) => it.type === 'My Wallet')}\n        columns={WalletColumns}\n        pagiation={false}\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell component=\"th\" id={labelId} scope=\"row\">\n              {moment(row.date).format('YYYY-MM-DD HH:mm')}\n            </StyledTableCell>\n            <StyledTableCell>{row.tokenSymbol}</StyledTableCell>\n            <StyledTableCell>{row.walletRewards} WBTC</StyledTableCell>\n            <StyledTableCell>{row.type}</StyledTableCell>\n          </>\n        )}\n      />\n    </TableCard>\n  )\n}\n\nconst AvatarList = ({ list }) => {\n  return (\n    <TableCard>\n      <Table\n        dataSource={list.filter((it) => it.type === 'Avatar' || it.type.includes('Collateral'))}\n        columns={AvatarColumns}\n        pagiation={false}\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell component=\"th\" id={labelId} scope=\"row\">\n              {moment(row.date).format('YYYY-MM-DD HH:mm')}\n            </StyledTableCell>\n            <StyledTableCell>{row.tokenSymbol}</StyledTableCell>\n            <StyledTableCell>{row.avatarRewards} WBTC</StyledTableCell>\n            <StyledTableCell>Collateral</StyledTableCell>\n          </>\n        )}\n      />\n    </TableCard>\n  )\n}\nconst AllList = ({ list }) => {\n  return (\n    <>\n      <TableCard>\n        <Table\n          dataSource={list}\n          columns={WalletColumns}\n          pagiation={false}\n          content={(row, index, labelId) => (\n            <>\n              <StyledTableCell component=\"th\" id={labelId} scope=\"row\">\n                {moment(row.date).format('YYYY-MM-DD HH:mm')}\n              </StyledTableCell>\n              <StyledTableCell>{row.tokenSymbol}</StyledTableCell>\n              <StyledTableCell>{row.type === 'Avatar' ? row.avatarRewards : row.walletRewards} WBTC</StyledTableCell>\n              <StyledTableCell>{row.type === 'Avatar' ? 'Collateral' : row.type}</StyledTableCell>\n            </>\n          )}\n        />\n      </TableCard>\n    </>\n  )\n}\n\nfunction ClaimedHistory(props) {\n  const { match } = props\n  const [dataSource, setDataSource] = useState([])\n  const list = window.localStorage.getItem('claimRewardsList')\n  const { chainId } = useWeb3React()\n\n  const { currentMintToken } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n\n  const mintTokens = useMemo(() => {\n    if (isSupportedChainId(chainId)) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      return Object.keys(mintTokenChainConfigs[chainId as SupportedChainId].tokens).map((key) => {\n        return {\n          token: _tokens[key as MintTokenKey].symbol,\n          address: _tokens[key as MintTokenKey].address,\n          decimals: _tokens[key as MintTokenKey].decimals,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={_tokens[key as MintTokenKey].logo}\n              symbol={_tokens[key as MintTokenKey].symbol}\n            />\n          ),\n        }\n      })\n    }\n    return []\n  }, [chainId])\n  useEffect(() => {\n    if (list) {\n      const _list = JSON.parse(list)\n      setDataSource(_list.filter(it=> it.tokenSymbol === currentMintToken))\n    }\n  }, [list, currentMintToken])\n\n  return (\n    <>\n      <BTitle>Claimed Rewards History</BTitle>\n      <Select\n        selectValue={currentMintToken}\n        options={mintTokens}\n        isGroup={false}\n        onChange={(e) => {\n          handleChangeCurrentPosition(e)\n        }}\n      />\n      <Box>\n        <Tabs\n          tabsStyle={{ marginTop: 0 }}\n          defaultTabsValue={match.params.id}\n          tab={[\n            {\n              label: 'All',\n              component: <AllList list={dataSource} />,\n            },\n            {\n              label: 'My Wallet',\n              component: <WalletList list={dataSource} />,\n            },\n            {\n              label: 'Collateral',\n              component: <AvatarList list={dataSource} />,\n            },\n          ]}\n        />\n      </Box>\n    </>\n  )\n}\n\nexport default ClaimedHistory\n","import React from 'react'\n\nexport default function Logo(props: { token: string; symbol: string; imgprops?: React.ImgHTMLAttributes<HTMLImageElement> }) {\n  return <img {...props.imgprops} style={{width: 22, height: 22, ...props.imgprops?.style}} src={props.token} alt={props.symbol}  />\n}\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Svg = styled.svg`\n  font-size: 14px;\n  width: 10px;\n  height: 5px;\n  display: block;\n`\n\nfunction SortIcon({order}) {\n  return (\n    <span>\n        <Svg width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M0.284084 3.2146L4.81473 3.2146C5.03791 3.2146 5.17182 3.06953 5.06023 2.95794C4.89284 2.77939 2.89534 0.692616 2.79491 0.592183C2.67216 0.458272 2.40434 0.480591 2.29274 0.592183C2.21463 0.670297 0.161333 2.83519 0.0385814 2.95794C-0.0730109 3.08069 0.0720592 3.20344 0.284084 3.2146Z\"\n    fill={order === 'asc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n  <Svg  width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M4.81626 0.7854H0.285613C0.0624289 0.7854 -0.0714817 0.930471 0.0401105 1.04206C0.207499 1.22061 2.205 3.30738 2.30543 3.40782C2.42818 3.54173 2.69601 3.51941 2.8076 3.40782C2.88571 3.3297 4.93901 1.16481 5.06176 1.04206C5.17335 0.919311 5.02828 0.79656 4.81626 0.7854Z\"\n    fill={order === 'desc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n\n    </span>\n  );\n}\n\nexport default SortIcon;\n","import React, { useCallback } from 'react'\nimport { styled } from '@mui/material/styles'\nimport {\n  Box,\n  Table,\n  TableRow,\n  TableSortLabel,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n} from '@mui/material'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport { uniq } from 'lodash'\nimport SortIcon from './icon/SortIcon'\n\nexport const StyledTableCell = styled(TableCell)(() => ({\n  [`&.${tableCellClasses.head}`]: {\n    border: 'none',\n    color: 'rgba(0, 0, 0, 0.5)',\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    borderBottom: '1px solid #E2E8EE',\n  },\n}))\nexport const StyledTableRow = styled(TableRow)(() => ({\n  cursor: 'pointer',\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    fontSize: 14,\n    borderBottom: '1px solid rgba(226, 232, 238, 1)',\n  },\n}))\n\nconst BoxWrapper = styled(Box)`\n  height: 80%;\n  overflow: scroll;\n  &::-webkit-scrollbar,\n  .MuiTableContainer-root::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) {\n      return order\n    }\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, columns, isMyPage = false } = props\n  const createSortHandler = (property) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell, index) => (\n          <StyledTableCell\n            style={{ paddingLeft: index === 0 && isMyPage && 0 }}\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {!headCell.isSort ? (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            )}\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport default function EnhancedTable(props) {\n  const { dataSource, columns, content, pagination, rowClick, isMyPage, pages, selectKey } = props\n\n  const [order, setOrder] = React.useState<Order>('desc')\n  const [orderBy, setOrderBy] = React.useState(columns[0].id)\n  const [selected, setSelected] = React.useState<readonly string[]>([])\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property) => {\n    console.log('p :>> ', property);\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  const handleClick = useCallback(\n    (event, row) => {\n      // const selectedIndex = selected.indexOf(name)\n      // let newSelected: readonly string[] = []\n\n      // if (selectedIndex === -1) {\n      //   newSelected = newSelected.concat(selected, name)\n      // } else if (selectedIndex === 0) {\n      //   newSelected = newSelected.concat(selected.slice(1))\n      // } else if (selectedIndex === selected.length - 1) {\n      //   newSelected = newSelected.concat(selected.slice(0, -1))\n      // } else if (selectedIndex > 0) {\n      //   newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1))\n      // }\n      // console.log('object :>> ', uniq(newSelected));\n      // setSelected(uniq(newSelected))\n\n      if (rowClick) {\n        rowClick(event, row)\n      }\n    },\n    [rowClick],\n  )\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n    if (pagination && props.onChangePage) {\n      props.onChangePage(newPage);\n    }\n  }\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const dataSourceDom = React.useCallback(() => {\n    if (dataSource && dataSource.length && pagination) {\n      if (pages) {\n        return stableSort(dataSource, getComparator(order, orderBy))\n          .map((row, index) => {\n            const labelId = `enhanced-table-checkbox-${index}`\n            return (\n              <StyledTableRow\n                hover\n                onClick={(event) => handleClick(event, row)}\n                role=\"checkbox\"\n                tabIndex={-1}\n                key={`row_${labelId}`}\n              >\n                {content(row, index, labelId)}\n              </StyledTableRow>\n            )\n          })\n      }\n      return stableSort(dataSource, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row, index) => {\n          const labelId = `enhanced-table-checkbox-${index}`\n          return (\n            <StyledTableRow\n              hover\n              onClick={(event) => handleClick(event, row)}\n              role=\"checkbox\"\n              tabIndex={-1}\n              key={`row_${labelId}`}\n            >\n              {content(row, index, labelId)}\n            </StyledTableRow>\n          )\n        })\n    }\n    if (dataSource && dataSource.length && !pagination) {\n      return stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n        const labelId = `enhanced-table-checkbox-${index}`\n        return (\n          <StyledTableRow\n            hover\n            onClick={(event) => handleClick(event, row)}\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={`row_${labelId}`}\n          >\n            {content(row, index, labelId)}\n          </StyledTableRow>\n        )\n      })\n    }\n    return (\n      <StyledTableRow>\n        <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n          No data\n        </StyledTableCell>\n      </StyledTableRow>\n    )\n  }, [columns.length, content, dataSource, handleClick, order, orderBy, page, pages, pagination, rowsPerPage])\n  return (\n    <BoxWrapper>\n      <TableContainer>\n        <Table sx={{ minWidth: 1400 }} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            columns={columns}\n            isMyPage={isMyPage}\n          />\n          <TableBody>\n            {dataSourceDom()}\n            {/* {dataSource && dataSource.length && pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <StyledTableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.ticker)}\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.ticker}\n                    >\n                      {content(row, index, labelId)}\n                    </StyledTableRow>\n                  )\n                })\n            ) : dataSource && dataSource.length && !pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`\n                return (\n                  <StyledTableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.ticker)}\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.ticker}\n                  >\n                    {content(row, index, labelId)}\n                  </StyledTableRow>\n                )\n              })\n            ) : (\n              <StyledTableRow>\n                <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n                  No data\n                </StyledTableCell>\n              </StyledTableRow>\n            )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {pagination ? (\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={pages || (dataSource && dataSource.length) || 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      ) : null}\n    </BoxWrapper>\n  )\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { withRouter } from 'react-router'\n\nexport interface StyledTabProps {\n  label: string\n  style?: any\n}\n\nexport interface StyledTabsProps {\n  children?: React.ReactNode\n  value: number\n  onChange: (event: React.SyntheticEvent, newValue: number) => void\n  style?: any\n}\n\nexport const AntTabs = styled((props: StyledTabsProps) => (\n  <Tabs {...props} TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }} />\n))({\n  margin: '40px auto 20px',\n  '& .MuiTabs-indicator': {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 4,\n    backgroundColor: 'transparent',\n  },\n  '& .MuiTabs-indicatorSpan': {\n    maxWidth: 20,\n    width: '100%',\n    borderRadius: 5,\n    background: 'linear-gradient(270deg, #7AE9F0 0%, #61C3F7 100%);',\n  },\n})\n\nexport const AntTab = styled((props: StyledTabProps) => <Tab disableRipple {...props} />)(({ theme }) => ({\n  textTransform: 'none',\n  minWidth: 0,\n  [theme.breakpoints.up('sm')]: {\n    minWidth: 0,\n  },\n  fontFamily: 'Heebo Medium',\n  fontWeight: 500,\n  marginRight: theme.spacing(1),\n  color: 'rgba(0, 0, 0, 0.5)',\n  fontSize: '22px',\n  '&:hover': {\n    color: '#000000',\n    opacity: 1,\n  },\n  '&.Mui-selected': {\n    color: '#000000',\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: '#d1eaff',\n  },\n}))\n\nfunction CustomizedTabs(props) {\n  const { tab, tabsStyle, tabStyle, defaultTabsValue, history } = props\n  const [value, setValue] = React.useState(Number(defaultTabsValue) || 0)\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n\n    if (defaultTabsValue !== undefined) {\n      history.push(`/history/claimed/${newValue}`)\n    }\n  }\n\n  return (\n    <>\n      <AntTabs style={tabsStyle} value={value} onChange={handleChange}>\n        {tab.map((it) => (\n          <AntTab style={tabStyle} key={it.label} label={it.label} />\n        ))}\n      </AntTabs>\n      {tab.map((item, index) => index === value && <React.Fragment key={item.label}>{item.component}</React.Fragment>)}\n    </>\n  )\n}\nexport default withRouter(CustomizedTabs)\n"],"sourceRoot":""}