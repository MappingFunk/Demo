{"version":3,"sources":["components/Slide/index.tsx","components/SubTitle.tsx","views/Collateral/components/AddGuaranteeFromWallet.tsx","views/Collateral/components/AddCurrencyToAvatar.tsx","views/Collateral/components/BeforeMintAction.tsx","views/Collateral/components/WithdrawCollateral.tsx","views/Mint/components/NeutralizeComp.tsx","views/Collateral/components/AddGuaranteeFromAvatar.tsx","views/Collateral/components/ImproveGuaranteeDays.tsx","views/Collateral/components/ImproveCollateralRatio.tsx","views/Collateral/components/TradingThroughAvatar.tsx","views/Collateral/components/GeneralTransfer.tsx","views/Collateral/components/manage.tsx","views/Collateral/ManagerPage.tsx","hooks/useHashPowerToken.ts","components/Logo.tsx","hooks/usePanel.ts","components/DataWrapper/index.tsx","components/Methods/index.tsx","hooks/useApprove.ts","config/constants/thresholdValue.ts","hooks/usePosContract.ts","views/Collateral/components/Title.tsx"],"names":["PrettoSlider","styled","Slider","props","color","height","width","background","opacity","border","bottom","value","boxShadow","transform","position","left","zIndex","borderRadius","lineHeight","fontSize","padding","backgroundColor","transformOrigin","display","CustomizedSlider","_jsx","valueLabelDisplay","orientation","defaultValue","disabled","Content","_templateObject","_taggedTemplateLiteral","SubTitle","children","AddGuaranteeFromWallet","walletTokenBalance","approveStatus","onApprove","transferVal","setTransferVal","useState","isDisabled","setDisabled","toastSuccess","toastError","toastInfo","useToast","approveBtnStatus","setApproveBtnStatus","currentPosition","collateralIndex","usePositionInfo","onUpdatePrepaidInterest","newDisplayCollateralRatio","newDisplayPrepaidInterestCoverage","useComputedIndexAction","handleUpdatePosition","onAddPrepaidInterest","usePositionAction","changeTransferVal","useCallback","e","type","numberVal","Number","target","WBTC","_transferAmount","toSmallUnits","TokenUtils","formatTokenAmount","tokens","decimals","isZero","onSubmit","async","ToastTitle","failed","txInfo","submited","TransactionSubmittedInfo","content","txHash","hash","wait","success","TransactionSuccessInfo","_jsxs","_Fragment","Methods","SelectIcon","Wallet","options","poolData","rightOptions","rightBalance","prepaidInterest","leftBalance","rightSymbol","mintTokenInfo","settlementCurrency","symbol","selectedSymbol","RightIcon","src","Assets","PrepaidInterest","style","alt","leftInputValue","rightInputValue","selectInput","onMax","DataWrapper","data","DataIndexName","CollateralRatio","displayRatio","PrepaidInterestCoverage","displayCoverage","Approve","onClick","state","AddCurrencyToAvatar","account","chainId","submitStatus","setSubmitStatus","currentPositionTokenInfo","onUpdateCollateralValue","transfer","useTransfer","tradingList","useMemo","allowedTokens","Array","from","Object","values","map","item","token","icon","Logo","imgprops","marginRight","logo","balance","rightOptionList","toLargeUnits","balances","selectIndex","setSelectIndex","leftSelectedToken","length","rightSelectedToken","onTransfer","tx","address","positionAddress","transactionHash","console","dir","reason","leftSelectValue","rightSelectValue","_ref","log","_transferVal","leftChange","selected","_index","findIndex","AvatarIcon","TipWrap","IconWrap","BeforeMintAction","useHashPowerToken","expanded","handleChange","usePanel","active","useWeb3React","Wrapper","Title","Accordion","id","onChange","AccordionSummary","Typography","AccordionDetails","ActionUser","contracts","ActionUserInterface","utils","Interface","abi","WidrawFromPrepaidInterestToWallet","actionDisable","setActionDisable","trading","setTrading","transferAmount","setTransferAmount","signer","useSystemParams","newPrepaidInterestCoverage","newCollateralRatio","minCollateralValue","onGuaranteeCurrencyToWallet","encodeFunctionData","toString","positionContract","ethers","Contract","PositionABI","delegateCall","useEffect","val","concat","isNaN","pimin","positionStatus","estimatedDailyDebt","toNumber","pi","GuaranteeIcon","rightSelectedValue","selectValue","selectedBalance","WidrawFromCollateralToWallet","tokenPools","setLeftSelectedToken","SupportedTokens","setRightSelectedToken","transferAmountVal","withdrawAssetParams","keys","current","activeToken","find","it","unitPrice","getSwapQuote","minCollateralValueTokenPrice","WithdrawCollateral","SelectGroup","Tip","_templateObject2","Func","_templateObject3","NeutralizeButton","Button","_templateObject4","SelectTypeWrap","_templateObject5","TipInfo","_templateObject6","RED","NeutralizeType","fbtc20mint","NeutralizeComp","setRefresh","setApproveStatus","disabledAction","setDisabledAction","neutralizeAmount","setNeutralizeAmount","posContract","usePosContract","neutralizeType","setNeutralizeType","currentMintToken","onUpdateNeutralizeValue","newNeutralizeFee","newEstimatedDailyDebt","handleApprove","useApprove","onCheckApprove","useCheckApprove","info","message","settlementCurrencyValues","formatFourDecimals","checkApprove","isEnable","_hex","onChangeNeutralizeAmount","_decimals","formattedValue","actionVal","debt","isValueWithinBounds","isWalletValueValid","isCollateralValueValid","isValueValid","transferValue","isFinalValueValid","onNeutralize","Select","groupStyle","actionValue","isGroup","ButtonBase","Math","min","className","onKeyUp","tabIndex","role","WalletIcon","Avatar","cellSpacing","cellPadding","colSpan","viewBox","fill","xmlns","d","fillRule","clipRule","AddGuaranteeFromAvatar","_currentPositionToken3","_currentPositionToken","_currentPositionToken2","error","CustomizedAccordions","ImproveCollateralRatio","NetralizeComp","AddBtn","ActionMulticall","ActionMulticallInterface","TradingThrough","columns","setColumns","isSubmitStatus","setIsSubmit","onUpdateTotalCollateralValue","tokenList","tokenPrice","list","filter","addMethods","uuid","input","output","inputToken","outputToken","includes","getContract","_params","inputAmount","String","outputAmount","tokenAddressPath","findPath","to","dataMulti","transaction","FlexWrap","flexDirection","wordBreak","onChangeInputAmount","MAX_SAFE_INTEGER","res","actionValSum","reduce","acc","curr","next","prototype","hasOwnProperty","call","indexOf","slice","onChangeToken","onExchange","record","index","i","push","poolPath","fromDecimals","toDecimals","inputValue","outputValue","total","forEach","price","DragDropContext","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","copiedItems","Droppable","provided","droppableProps","ref","innerRef","Draggable","draggableId","isDragDisabled","provideds","amountOut","unitAmountOut","priceStr","draggableProps","dragHandleProps","alignItems","userSelect","margin","paddingRight","isExchange","leftDisableStatus","rightDisableStatus","rightChange","leftSymbol","right","IconButton","cursor","marginTop","marginLeft","DeleteIcon","DroppableIcon","placeholder","AddIcon","POSITIVE_INFINITY","MethodsWrap","AccountType","accountCategoryList","MyWallet","Settlement","Standard","getTokenDecimals","key","valueToKeyMap","commonTokens","GeneralTransfer","gDisStatus","setGDisStatus","actionData","setActionData","accountType","tokenType","tokenSelectDisabled","avatarAssetList","isTransfer","transferTransactions","transferData","recviceTarget","tokenSymbol","transferDecimals","tokenAddress","chainConfigs","handleAllSettled","results","_result$reason","_result$reason2","status","submitTransaction","_data","handleResult","handleError","Promise","allSettled","then","catch","onChangeVal","_ref2","send","recive","onChangeAccount","__index","nextState","settlement","shortBalanceValue","collateralValue","tokenTypeDecimals","collateralAssets","maxActionTotalAssets","maxCollateralTransfer","amountOutPrice","otherTokenWbtc","sub","actionCurrentMaxValue","amountInCurrentMaxValue","maxTransterCurrentToken","floor","maxPrepaidInterest","maxActionPrepaidInterest","transferAmout","interestGuaranteed","gt","avatarAssetBalance","walletAssetBalance","selectDisabled","Input","onInput","hidden","justifyContent","ExchangeArrow","list1","list2","reverse","ele","Box","CardWrap","Card","TipPanel","CollateralInfoWrap","getValueColor","withRouter","oBox","React","useRef","handleChangeCurrentPosition","toastWarning","callback","approveTransactionInfo","err","collateralRatio","prepaidInterestCoverage","obligation","epochDebt","estimatedObligationToday","setTimeout","panel","document","querySelector","scrollIntoView","allowedAssets","currentTokenPrice","currentAllowedTokens","currentAllowedTokenBalance","usdt","WBTCToUSD","tokenInfo","_currentTokenPrice$to","formatCurrencyTwoDecimals","mintTokens","isSupportedChainId","_tokens","mintTokenChainConfigs","marginBottom","Grid","container","spacing","xs","ScrollWrapper","title","LiquidationThresholdValue","ratio","Slide","days","ImproveGuaranteeDays","TradingThroughAvatar","Collateral","CopyToClipboard","toCopy","Fbtc20Icon","CollateralManage","Link","ArrowLine","ManagerPage","Manage","hashPowerToken","useContext","HashPowerTokenContext","undefined","Error","_props$imgprops","useAppSelector","collateralManage","dispatch","useAppDispatch","event","newExpanded","toggleStatus","setExpanded","SelectWrap","GroupWrap","Index","rightSelectInput","rightNumberIsShow","leftDesc","rightDesc","currentSelected","setVal","rightList","setRightList","rightVal","setRightVal","displayValues","_rightBalance","_leftBalance","orignalBalance","allDisabled","inputDisabled","RoundArrow","spender","contract","ERC20","allowance","owner","library","getSigner","approve","constants","MaxUint256","ShortThresholdValue","setContract","currentCpt","currentCPT","_contract"],"mappings":"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","file":"static/js/13.56dc31ac.chunk.js","sourcesContent":["import * as React from 'react'\nimport Slider from '@mui/material/Slider'\nimport { styled } from '@mui/material/styles'\n\nconst PrettoSlider = styled(Slider)((props) => {\n  return () => ({\n    color: '#52af77',\n    height: 320,\n    width: 6,\n    '& .MuiSlider-rail': {\n      background: 'linear-gradient(180deg, #1DCADA, #FFCC04 40%, #FF6308)',\n      opacity: '1',\n    },\n    '& .MuiSlider-track': {\n      border: 'none',\n      background: 'transparent',\n      // background:'linear-gradient(90deg, #FF4D00 0%, #FF730D 31.52%, #FFBD12 44.08%, #FFD900 97.25%)',\n    },\n    '& .MuiSlider-thumb': {\n      // eslint-disable-next-line no-nested-ternary\n      bottom: props.value === 0 ? '2px !important' : props.value > 100 ? 'calc(100% - 2px) !important' : '',\n      height: 6,\n      width: 6,\n      boxShadow: '0px 8px 10px rgba(0, 0, 0, 0.25)',\n      background: '#fff',\n      transform: 'translate(-24px,50%)',\n      // background:'linear-gradient(90deg, #FF4D00 0%, #FF730D 31.52%, #FFBD12 44.08%, #FFD900 97.25%)',\n      border: '2px solid #000',\n      '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n        boxShadow: 'inherit',\n      },\n      '&:before': {\n        position: 'absolute',\n        left: 2,\n        zIndex: -1,\n        width: 20,\n        height: 2,\n        background: '#000',\n        borderRadius: 1,\n      },\n    },\n    '& .MuiSlider-valueLabel': {\n      lineHeight: 1.2,\n      fontSize: 12,\n      background: 'unset',\n      padding: 0,\n      width: 32,\n      height: 32,\n      borderRadius: '50% 50% 50% 0',\n      backgroundColor: '#52af77',\n      transformOrigin: 'left',\n      transform: 'translate(50%, -100%) rotate(-90deg) scale(0)',\n      '&:before': { display: 'none' },\n      '&.MuiSlider-valueLabelOpen': {\n        display: 'none',\n        transform: 'translate(50%, -100%) rotate(-90deg) scale(1)',\n      },\n      '& > *': {\n        transform: 'rotate(45deg)',\n      },\n    },\n  })\n})\n\nexport default function CustomizedSlider(props) {\n  return (\n    <PrettoSlider\n      valueLabelDisplay=\"auto\"\n      aria-label=\"pretto slider\"\n      orientation=\"vertical\"\n      defaultValue={90}\n      disabled\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nconst Content = styled('p')`\n  font-family: 'Heebo Regular', serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  color: rgba(0, 0, 0, 0.5);\n`\nfunction SubTitle(props) {\n  const { children } = props\n  return <Content {...props}>{children}</Content>\n}\n\nexport default SubTitle\n","import React, { useCallback, useState } from 'react'\nimport Methods from 'components/Methods'\nimport { Approve } from 'components/CommonComponent'\nimport tokens, { poolData } from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport Assets from 'assets'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport DataWrapper from 'components/DataWrapper'\nimport { TokenUtils, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo, usePositionAction } from 'hooks/news/usePoistion'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\n\nfunction AddGuaranteeFromWallet(props) {\n  const { walletTokenBalance, approveStatus, onApprove } = props\n  const [transferVal, setTransferVal] = useState<number>(0)\n  const [isDisabled, setDisabled] = useState(false)\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { currentPosition, collateralIndex } = usePositionInfo()\n  const { onUpdatePrepaidInterest, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage } =\n    useComputedIndexAction()\n  const { handleUpdatePosition, onAddPrepaidInterest } = usePositionAction()\n\n  const changeTransferVal = useCallback(\n    (e, type) => {\n      const numberVal = type === 0 ? Number(e.target.value) : walletTokenBalance.WBTC\n      const _transferAmount = toSmallUnits(\n        TokenUtils.formatTokenAmount(numberVal, tokens.WBTC.decimals),\n        tokens.WBTC.decimals,\n      )\n      if (numberVal > walletTokenBalance.WBTC || numberVal <= 0 || _transferAmount.isZero()) {\n        setDisabled(true)\n      } else {\n        setDisabled(false)\n      }\n      onUpdatePrepaidInterest(numberVal)\n      setTransferVal(type === 0 ? e.target.value : numberVal)\n    },\n    [onUpdatePrepaidInterest, walletTokenBalance.WBTC],\n  )\n\n  const onSubmit = useCallback(async () => {\n    try {\n      if (!transferVal || (transferVal <= 0 && transferVal > walletTokenBalance.WBTC)) {\n        toastError(ToastTitle.failed, 'Please enter a valid amount')\n        return\n      }\n      setDisabled(true)\n      const txInfo = await onAddPrepaidInterest(transferVal)\n      toastInfo(\n        ToastTitle.submited,\n        <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n      )\n      const result = await txInfo.wait()\n      if (result) {\n        toastSuccess(\n          ToastTitle.success,\n          <TransactionSuccessInfo content=\"Settlement added successfully\" txHash={txInfo.hash} />,\n        )\n        setDisabled(false)\n        setTransferVal(0)\n        onUpdatePrepaidInterest(0)\n        await handleUpdatePosition()\n      }\n    } catch (e: any) {\n      setDisabled(false)\n    }\n  }, [\n    transferVal,\n    walletTokenBalance,\n    onAddPrepaidInterest,\n    toastError,\n    toastInfo,\n    toastSuccess,\n    onUpdatePrepaidInterest,\n    handleUpdatePosition,\n  ])\n\n  return (\n    <>\n      <Methods\n        SelectIcon={Wallet}\n        options={poolData}\n        rightOptions={poolData}\n        rightBalance={collateralIndex.prepaidInterest}\n        leftBalance={walletTokenBalance ? walletTokenBalance.WBTC : 0}\n        rightSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        selectedSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        RightIcon={() => <img src={Assets.PrepaidInterest} style={{ width: 20 }} alt=\"\" />}\n        leftInputValue={transferVal}\n        rightInputValue={transferVal}\n        selectInput={(e) => {\n          changeTransferVal(e, 0)\n        }}\n        onMax={() => {\n          changeTransferVal({}, 1)\n        }}\n      />\n      <DataWrapper\n        data={[\n          [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n          [DataIndexName.PrepaidInterestCoverage, collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={isDisabled || transferVal <= 0} onClick={onSubmit}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nexport default AddGuaranteeFromWallet\n","import React, { useCallback, useMemo, useState } from 'react'\nimport tokens from 'config/constants/tokens'\nimport Methods from 'components/Methods'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport { AvatarIcon } from 'components/uikit'\nimport { Approve, IconWrap, TipWrap } from 'components/CommonComponent'\nimport { useTransfer } from 'hooks/useManager'\nimport DataWrapper from 'components/DataWrapper'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { useComputedIndexAction, usePositionInfo, usePositionAction } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { tokenKey } from 'config/constants/tokenConfig'\nimport useToast from 'hooks/useToast'\nimport { TransactionSuccessInfo } from 'components/TransactionInfo'\n\nfunction AddCurrencyToAvatar(props) {\n  const { onApprove, approveStatus, account, chainId, walletTokenBalance } = props\n\n  const [transferVal, setTransferVal] = useState(0)\n  const [submitStatus, setSubmitStatus] = useState(true)\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { toastError, toastSuccess } = useToast()\n  const { currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const { onUpdateCollateralValue, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage } =\n    useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n  const transfer = useTransfer()\n\n  const tradingList = useMemo(() => {\n    const { allowedTokens } = currentPositionTokenInfo\n    const tokenList = Array.from(Object.values(allowedTokens.tokens)).map((item) => {\n      return {\n        ...item,\n        token: item.symbol,\n        icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={item.logo} symbol={item.symbol} />,\n        balance: walletTokenBalance[item.symbol],\n        rightOptionList: [\n          {\n            ...item,\n            token: item.symbol,\n            icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={item.logo} symbol={item.symbol} />,\n            balance: toLargeUnits(allowedTokens.balances[item.symbol], item.decimals),\n          },\n        ],\n      }\n    })\n    return tokenList\n  }, [currentPositionTokenInfo, walletTokenBalance])\n  const [selectIndex, setSelectIndex] = useState<number>(0)\n\n  const leftSelectedToken = useMemo(() => {\n    return (\n      (tradingList.length && tradingList[selectIndex]) || {\n        ...currentPosition.mintTokenInfo.settlementCurrency,\n        balance: walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n      }\n    )\n  }, [currentPosition.mintTokenInfo.settlementCurrency, selectIndex, tradingList, walletTokenBalance])\n  const rightSelectedToken = useMemo(() => {\n    return (\n      (tradingList.length && tradingList[selectIndex].rightOptionList[0]) || {\n        ...currentPosition.mintTokenInfo.settlementCurrency,\n        balance: toLargeUnits(\n          currentPositionTokenInfo.allowedTokens.balances[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n          currentPosition.mintTokenInfo.settlementCurrency.decimals,\n        ),\n      }\n    )\n  }, [\n    currentPosition?.mintTokenInfo.settlementCurrency,\n    currentPositionTokenInfo?.allowedTokens.balances,\n    selectIndex,\n    tradingList,\n  ])\n  const onTransfer = useCallback(async () => {\n    try {\n      setSubmitStatus(true)\n      const tx = await transfer(\n        account,\n        tokens[leftSelectedToken.symbol].address[chainId],\n        currentPosition?.positionAddress,\n        toSmallUnits(\n          TokenUtils.formatTokenAmount(transferVal, tokens[leftSelectedToken.symbol].decimals),\n          tokens[leftSelectedToken.symbol].decimals,\n        ),\n      )\n      if (tx) {\n        setSubmitStatus(false)\n        setTransferVal(0)\n        toastSuccess(ToastTitle.success, <TransactionSuccessInfo content='Collateral added successfully.' txHash={tx.transactionHash} />)\n        onUpdateCollateralValue({\n          symbol: leftSelectedToken.symbol as tokenKey,\n          value: 0,\n        })\n        await handleUpdatePosition()\n      }\n    } catch (e: any) {\n      console.dir(e)\n      toastError(ToastTitle.failed, e?.reason)\n      setSubmitStatus(false)\n    }\n  }, [\n    transfer,\n    account,\n    leftSelectedToken,\n    chainId,\n    currentPosition,\n    transferVal,\n    toastSuccess,\n    onUpdateCollateralValue,\n    handleUpdatePosition,\n    toastError,\n  ])\n  return (\n    <>\n      <Methods\n        options={tradingList}\n        rightOptions={tradingList}\n        leftInputValue={transferVal}\n        leftBalance={leftSelectedToken.balance}\n        leftSelectValue={leftSelectedToken.symbol}\n        rightInputValue={transferVal}\n        rightBalance={rightSelectedToken.balance}\n        rightSelectValue={rightSelectedToken.symbol}\n        SelectIcon={Wallet}\n        selectInput={({ target }) => {\n          setTransferVal(target.value)\n          console.log('target.value :>> ', target.value, leftSelectedToken.balance);\n          if (target.value > 0 && target.value <= leftSelectedToken.balance) {\n            const _transferVal = toSmallUnits(\n              TokenUtils.formatTokenAmount(target.value, leftSelectedToken.decimals),\n              leftSelectedToken.decimals,\n            )\n            console.log('_transferVal :>> ', _transferVal);\n            setSubmitStatus(_transferVal.isZero())\n          } else {\n            setSubmitStatus(true)\n          }\n\n          onUpdateCollateralValue({\n            symbol: leftSelectedToken.symbol as tokenKey,\n            value: target.value,\n          })\n        }}\n        leftChange={(selected) => {\n          const _index = tradingList.findIndex((item) => item.symbol === selected.symbol)\n          setSelectIndex(_index)\n          setTransferVal(0)\n          onUpdateCollateralValue({\n            symbol: selected.symbol,\n            value: 0,\n          })\n        }}\n        onMax={() => {\n          if (walletTokenBalance) {\n            if (leftSelectedToken.balance) {\n              setTransferVal(leftSelectedToken.balance)\n              onUpdateCollateralValue({\n                symbol: leftSelectedToken.symbol as tokenKey,\n                value: leftSelectedToken.balance,\n              })\n              if (leftSelectedToken.balance > 0) {\n                setSubmitStatus(false)\n              }\n            }\n          }\n        }}\n        RightIcon={AvatarIcon}\n      />\n      <DataWrapper\n        data={[\n          [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n          [DataIndexName.PrepaidInterestCoverage, collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      <TipWrap>\n        <IconWrap style={{ background: '#FF7D00', color: '#fff' }}>!</IconWrap>\n        <p>\n          Add asset to Collateral won’t effect the Prepaid Interest Coverage, so you might need to add the specific\n          asset in method 1 first.\n        </p>\n      </TipWrap>\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={submitStatus || transferVal <= 0} onClick={onTransfer}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nexport default AddCurrencyToAvatar\n","import React from 'react'\nimport { Typography } from '@mui/material/'\nimport { useWeb3React } from 'web3-react-core'\nimport usePanel from 'hooks/usePanel'\n\nimport { Wrapper, Title, Accordion, AccordionSummary, AccordionDetails } from 'components/CommonComponent'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport AddGuaranteeFromWallet from './AddGuaranteeFromWallet'\nimport AddCurrencyToAvatar from './AddCurrencyToAvatar'\n\nexport default function BeforeMintAction(props) {\n  const { approveStatus, onApprove } = props\n  const { walletTokenBalance } = useHashPowerToken()\n  const { expanded, handleChange } = usePanel()\n  const { active, chainId, account } = useWeb3React()\n\n  return (\n    <Wrapper>\n      <Title>Add collateral before mint</Title>\n      <Accordion id=\"panel1\" expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Add asset from my wallet to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel1' && (\n            <AddGuaranteeFromWallet\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel2\" expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Add asset from my wallet to Collateral</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel2' && (\n            <AddCurrencyToAvatar\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Typography } from '@mui/material/'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport Methods from 'components/Methods'\nimport { useWeb3React } from 'web3-react-core'\nimport { AvatarIcon, GuaranteeIcon } from 'components/uikit'\nimport DataWrapper from 'components/DataWrapper'\nimport {\n  Wrapper,\n  Title,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Approve,\n} from 'components/CommonComponent'\nimport usePanel from 'hooks/usePanel'\nimport tokens from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport contracts from 'config/constants/contracts'\nimport { ethers, utils } from 'ethers'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useSystemParams from 'hooks/useSystemParams'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport PositionABI from 'config/abi/Position.json'\nimport Logo from 'components/Logo'\nimport { SupportedTokens, TokenConfig } from 'config/constants/tokenConfig'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { getSwapQuote } from 'config/constants/pool'\n\n\nconst { ActionUser } = contracts\nconst ActionUserInterface = new utils.Interface(ActionUser.abi)\nconst WidrawFromPrepaidInterestToWallet = (props: { approveStatus: boolean; onApprove: any }) => {\n  const { approveStatus, onApprove } = props\n  const [actionDisable, setActionDisable] = useState(true)\n  const { chainId, account } = useWeb3React()\n  const { currentPosition, collateralIndex } = usePositionInfo()\n  const [trading, setTrading] = useState(false)\n  const [transferAmount, setTransferAmount] = useState<number>(0)\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const { walletTokenBalance } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n  const {\n    onUpdatePrepaidInterest,\n    newDisplayCollateralRatio,\n    newPrepaidInterestCoverage,\n    newCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n    minCollateralValue,\n  } = useComputedIndexAction()\n\n  const { handleUpdatePosition } = usePositionAction()\n  const onGuaranteeCurrencyToWallet = useCallback(async () => {\n    try {\n      setTrading(true)\n      const data = ActionUserInterface.encodeFunctionData('moveGuarantee', [\n        account,\n        toSmallUnits(transferAmount.toString(), tokens.WBTC.decimals),\n      ])\n      const positionContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n      const txInfo = await positionContract.delegateCall(ActionUser.address[chainId], data)\n      if (txInfo) {\n        setTransferAmount(0)\n        toastInfo(ToastTitle.submited, <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />)\n        const result = await txInfo.wait()\n        if (result) {\n          setTrading(false)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSubmittedInfo content=\"The transactions was successful\" txHash={txInfo.hash} />,\n          )\n          await handleUpdatePosition()\n        }\n      }\n    } catch (e: any) {\n      setTrading(false)\n      toastError(ToastTitle.failed, e?.reason)\n    }\n  }, [\n    account,\n    chainId,\n    currentPosition.positionAddress,\n    handleUpdatePosition,\n    signer,\n    toastError,\n    toastInfo,\n    toastSuccess,\n    transferAmount,\n  ])\n\n  const onInput = (e) => {\n    setTransferAmount(e.target.value)\n  }\n  useEffect(() => {\n    if (\n      newCollateralRatio < 120 ||\n      newPrepaidInterestCoverage < 20 ||\n      transferAmount <= 0 ||\n      transferAmount > (collateralIndex.prepaidInterest as number) ||\n      trading\n    ) {\n      setActionDisable(true)\n    } else {\n      setActionDisable(false)\n    }\n  }, [collateralIndex.prepaidInterest, newCollateralRatio, newPrepaidInterestCoverage, trading, transferAmount])\n\n  useEffect(() => {\n    if (transferAmount >= 0) {\n      const val = transferAmount >= 0 ? Number(`-${transferAmount}`) : 0\n      onUpdatePrepaidInterest(Number.isNaN(val) ? 0 : val)\n    } else {\n      onUpdatePrepaidInterest(0)\n    }\n  }, [onUpdatePrepaidInterest, transferAmount])\n\n  const tradingList = useMemo(() => {\n    return [\n      {\n        decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n        token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n        balance: collateralIndex.prepaidInterest,\n        icon: () => (\n          <Logo\n            imgprops={{ style: { marginRight: 10 } }}\n            token={currentPosition.mintTokenInfo.settlementCurrency.logo}\n            symbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n          />\n        ),\n        rightOptionList: [\n          {\n            decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n            balance: walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n            icon: () => (\n              <Logo\n                imgprops={{ style: { marginRight: 10 } }}\n                token={currentPosition.mintTokenInfo.settlementCurrency.logo}\n                symbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n              />\n            ),\n          },\n        ],\n      },\n    ]\n  }, [collateralIndex, currentPosition, walletTokenBalance])\n\n  return (\n    <>\n      <Methods\n        selectInput={onInput}\n        onMax={() => {\n          const pimin = 20 * currentPosition.positionStatus.estimatedDailyDebt.toNumber()\n          const pi =\n            Number(collateralIndex.prepaidInterest) -\n            (toLargeUnits(pimin, currentPosition.mintTokenInfo.settlementCurrency.decimals, true) as number)\n          if (pi > 0 && minCollateralValue >= 0) {\n            if (pi > minCollateralValue) {\n              setTransferAmount(minCollateralValue)\n            } else {\n              setTransferAmount(pi)\n            }\n          }else {\n            setTransferAmount(0)\n          }\n\n        }}\n        SelectIcon={GuaranteeIcon}\n        options={tradingList}\n        leftBalance={collateralIndex.prepaidInterest}\n        rightBalance={walletTokenBalance && walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]}\n        rightSelectedValue={42}\n        rightSymbol=\"WBTC\"\n        selectValue={42}\n        selectedBalance={100}\n        selectedSymbol=\"WBTC\"\n        leftInputValue={transferAmount}\n        rightInputValue={transferAmount}\n        RightIcon={Wallet}\n      />\n      <DataWrapper\n        data={[\n          ['Collateral Ratio', collateralIndex.displayRatio, newDisplayCollateralRatio],\n          ['Prepaid Interest Coverage', collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={actionDisable} onClick={onGuaranteeCurrencyToWallet}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nconst WidrawFromCollateralToWallet: React.FC<{\n  approveStatus: boolean\n  onApprove: (callback: (state: boolean) => void) => void\n}> = (props) => {\n  const { chainId, account } = useWeb3React()\n  const { approveStatus, onApprove } = props\n  const { signer } = useSystemParams()\n  const { walletTokenBalance } = useHashPowerToken()\n  const [transferAmount, setTransferAmount] = useState<number>(0)\n  const { tokenPools } = useSystemParams()\n\n  const [leftSelectedToken, setLeftSelectedToken] = useState<\n    { balance: number; token: SupportedTokens } & Omit<TokenConfig, 'logo'>\n  >({\n    balance: 0,\n    token: SupportedTokens.WBTC,\n    decimals: 8,\n    address: '',\n    symbol: SupportedTokens.WBTC,\n  })\n  const [rightSelectedToken, setRightSelectedToken] = useState<\n    { balance: number; token: SupportedTokens } & Omit<TokenConfig, 'logo'>\n  >({\n    balance: 0,\n    token: SupportedTokens.WBTC,\n    decimals: 8,\n    address: '',\n    symbol: SupportedTokens.WBTC,\n  })\n  const [actionDisable, setActionDisable] = useState(true)\n\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const {\n    onUpdateCollateralValue,\n    newDisplayCollateralRatio,\n    newCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n    minCollateralValue,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const [trading, setTrading] = useState(false)\n\n  useEffect(() => {\n    if (leftSelectedToken) {\n      const val = toSmallUnits(\n        TokenUtils.formatTokenAmount(transferAmount, leftSelectedToken.decimals),\n        leftSelectedToken.decimals,\n      )\n      if (!val.isZero() && transferAmount <= leftSelectedToken.balance && !trading) {\n        setActionDisable(false)\n      } else {\n        setActionDisable(true)\n      }\n      if (newCollateralRatio <= 120) {\n        setActionDisable(true)\n      }\n    }\n  }, [leftSelectedToken, transferAmount, trading, newCollateralRatio])\n\n  useEffect(() => {\n    const transferAmountVal = Number(`-${transferAmount}`)\n    onUpdateCollateralValue({\n      symbol: leftSelectedToken.token as any,\n      value: Number.isNaN(transferAmountVal) ? 0 : transferAmountVal,\n    })\n  }, [leftSelectedToken, onUpdateCollateralValue, transferAmount])\n\n  const onTransfer = useCallback(async () => {\n    setTrading(true)\n    setActionDisable(true)\n    if (transferAmount <= 0) {\n      setTrading(false)\n      toastError(ToastTitle.failed, 'Please enter a valid amount')\n      return\n    }\n    const withdrawAssetParams = ActionUserInterface.encodeFunctionData('withdrawAsset', [\n      tokens[leftSelectedToken.token].address[chainId],\n      account,\n      toSmallUnits(\n        TokenUtils.formatTokenAmount(transferAmount, leftSelectedToken.decimals),\n        leftSelectedToken.decimals,\n      ),\n    ])\n    try {\n      const positionContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n      const txInfo = await positionContract.delegateCall(ActionUser.address[chainId], withdrawAssetParams)\n      if (txInfo.hash) {\n        toastInfo(\n          ToastTitle.submited,\n          <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n        )\n        const result = await txInfo.wait()\n        if (result) {\n          setTrading(false)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSubmittedInfo content=\"The transactions was successful\" txHash={txInfo.hash} />,\n          )\n          setTransferAmount(0)\n          await handleUpdatePosition()\n        }\n      }\n    } catch (e: any) {\n      setTrading(false)\n      toastError(ToastTitle.failed, e?.reason)\n    }\n  }, [\n    leftSelectedToken,\n    chainId,\n    account,\n    transferAmount,\n    currentPosition.positionAddress,\n    signer,\n    toastInfo,\n    toastSuccess,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  const onMax = (type) => {\n    const { settlementCurrency } = currentPosition.mintTokenInfo\n    if (type === 1) {\n      if (leftSelectedToken.token === settlementCurrency.symbol) {\n        if (minCollateralValue < leftSelectedToken.balance) {\n          setTransferAmount(minCollateralValue)\n        } else {\n          setTransferAmount(leftSelectedToken.balance)\n        }\n      } else {\n        const unitPrice = getSwapQuote(\n          chainId,\n          leftSelectedToken.token,\n          settlementCurrency.symbol,\n          toSmallUnits(\n            TokenUtils.formatTokenAmount(minCollateralValue, settlementCurrency.decimals),\n            settlementCurrency.decimals,\n          ),\n          tokenPools,\n        )\n        const minCollateralValueTokenPrice = toLargeUnits(unitPrice, leftSelectedToken.decimals, true) as number\n        if (minCollateralValueTokenPrice < leftSelectedToken.balance) {\n          setTransferAmount(\n            Number(TokenUtils.formatTokenAmount(minCollateralValueTokenPrice, leftSelectedToken.decimals)),\n          )\n        } else {\n          setTransferAmount(leftSelectedToken.balance)\n        }\n      }\n    }\n  }\n\n\n  const tradingList = useMemo(() => {\n    const { allowedTokens } = currentPositionTokenInfo\n    if (allowedTokens.tokens) {\n      return Object.keys(allowedTokens.tokens).map((item) => {\n        const token = allowedTokens.tokens[item as SupportedTokens]\n        const current = {\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={token.logo} symbol={token.symbol} />,\n          token: token.symbol,\n          balance: toLargeUnits(allowedTokens.balances[item as SupportedTokens], token.decimals, true) as number,\n          decimals: token.decimals,\n          address: token.address,\n        }\n        return {\n          ...current,\n          rightOptionList: [\n            {\n              ...current,\n              balance: walletTokenBalance[item as SupportedTokens] as number,\n            },\n          ],\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo, walletTokenBalance])\n\n  useEffect(() => {\n    const activeToken =\n      (tradingList.find((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol) as any) ||\n      (tradingList[0] as any)\n    setLeftSelectedToken(activeToken)\n    setRightSelectedToken(activeToken)\n  }, [currentPosition.mintTokenInfo.settlementCurrency.symbol, tradingList])\n\n\n  return (\n    <>\n      <Methods\n        rightOptions={[rightSelectedToken]}\n        SelectIcon={AvatarIcon}\n        options={tradingList}\n        leftSelectValue={leftSelectedToken ? leftSelectedToken.token : ''}\n        rightSelectValue={rightSelectedToken ? rightSelectedToken.token : ''}\n        rightBalance={rightSelectedToken.balance}\n        leftInputValue={transferAmount}\n        rightInputValue={transferAmount}\n        leftChange={(selected) => {\n          setLeftSelectedToken(selected)\n          setRightSelectedToken(selected.rightOptionList[0])\n        }}\n        selectInput={(e) => {\n          setTransferAmount(e.target.value)\n          if (e.target.value > 0 && e.target.value <= leftSelectedToken.balance) {\n            setActionDisable(false)\n          } else {\n            setActionDisable(true)\n          }\n        }}\n        onMax={() => {\n          onMax(1)\n        }}\n        RightIcon={Wallet}\n      />\n      <DataWrapper\n        data={[\n          [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n          [\n            DataIndexName.PrepaidInterestCoverage,\n            collateralIndex.displayCoverage,\n            newDisplayPrepaidInterestCoverage,\n          ],\n        ]}\n      />\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={actionDisable} onClick={onTransfer}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nexport default function WithdrawCollateral(props) {\n\n  const { expanded, handleChange } = usePanel()\n  return (\n    <Wrapper>\n      <Title>Withdraw Collateral</Title>\n      <Accordion id=\"panel13\" expanded={expanded === 'panel13'} onChange={handleChange('panel13')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Withdraw asset from Collateral to my wallet</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n            expanded === 'panel13' &&\n            <WidrawFromCollateralToWallet {...props} />\n          }\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel14\" expanded={expanded === 'panel14'} onChange={handleChange('panel14')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Withdraw asset from Prepaid Interest to my wallet</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n            expanded === 'panel14' &&\n            <WidrawFromPrepaidInterestToWallet {...props} />\n          }\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { useWeb3React } from 'web3-react-core'\nimport { ButtonBase } from '@mui/material'\nimport { utils } from 'ethers'\nimport Select from 'components/Select'\nimport WalletIcon from 'components/Menu/icons/Wallet'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport useSystemParams from 'hooks/useSystemParams'\nimport usePosContract from 'hooks/usePosContract'\nimport useToast from 'hooks/useToast'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport contracts from 'config/constants/contracts'\nimport { AvatarIcon, Button } from 'components/uikit'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { TransactionSuccessInfo } from 'components/TransactionInfo'\n\nconst SelectGroup = styled('div')`\n  button.MuiSelectUnstyled-root {\n    width: 200px;\n  }\n\n  div.MuiInput-root {\n    width: calc(100% - 200px) !important;\n  }\n\n  div.topFunc {\n    display: flex;\n    align-items: center;\n    padding: 5px 10px;\n\n    span {\n      margin-left: 10px;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n`\nconst Tip = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 18px;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 17px;\n  color: rgba(0, 0, 0, 0.5);\n  background: #def1ff;\n  border-radius: 14px;\n  padding: 16px 19px 11px;\n  p span:first-of-type {\n    margin-right: 10px;\n  }\n\n  & + p {\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 17px;\n    color: #000000;\n    margin-bottom: 30px;\n  }\n\n  .info_panel {\n    width: 100%;\n    text-align: right;\n    .footer {\n      border-top: 0.5px solid rgba(0, 0, 0, 0.12);\n    }\n    td {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-weight: 400;\n      font-size: 12px;\n      padding: 5px 0;\n    }\n    .label {\n      text-align: left;\n      width: 30%;\n    }\n    .from,\n    .to {\n      width: 35%;\n      line-height: 17px;\n    }\n    .to {\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 500;\n      color: #000;\n    }\n  }\n`\nconst Func = styled('div')`\n  padding: 10px 20px 5px;\n\n  button {\n    color: #2aa1ff;\n  }\n`\n\nconst NeutralizeButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px !important;\n  box-shadow: none !important;\n  line-height: 46px !important;\n  height: 46px !important;\n  display: block !important;\n  margin: 30px auto 0 !important;\n  width: 30% !important;\n  color: #000;\n`\n\nconst SelectTypeWrap = styled('div')`\n  h3 {\n    font-size: 16px;\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-bottom: 16px;\n  }\n  .content {\n    display: flex;\n  }\n  .item_wrap {\n    min-width: 200px;\n    padding: 1px;\n    border-radius: 14px;\n    overflow: hidden;\n    margin-right: 16px;\n    background: #e3e8ed;\n    cursor: pointer;\n    user-select: none;\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      color: rgba(0, 0, 0, 0.5);\n      font-size: 12px;\n      line-height: 17px;\n      &:first-of-type {\n        margin-right: 30px;\n      }\n    }\n    &.active {\n      padding: 2px;\n      background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n      span {\n        color: #000;\n      }\n    }\n  }\n  .item {\n    border-radius: 12px;\n    //border: 2px solid #E3E8ED;\n    //border-image: linear-gradient(#7AE9F0 , #61C3F7) 30 30;\n    padding: 14px 14px 9px 10px;\n    background: #fff;\n    width: 100%;\n    height: 100%;\n    //box-sizing: border-box;\n    h4 {\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n      display: flex;\n      align-items: center;\n      line-height: 20px;\n      font-size: 14px;\n      margin-bottom: 22px;\n      svg {\n        margin-right: 8.5px;\n      }\n    }\n    p {\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n`\n\nconst TipInfo = styled('div')`\n  display: flex;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  padding: 16px 20px;\n  p {\n    line-height: 20px;\n    font-size: 14px;\n    font-family: PingFangSC-Regular, sans-serif;\n    margin-left: 16px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nconst RED = 'red'\n\nenum NeutralizeType {\n  Wallet = 'wallet',\n  Avatar = 'avatar',\n}\n\nconst { ActionUser: fbtc20mint } = contracts\nfunction NeutralizeComp() {\n  const { setRefresh, walletTokenBalance } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const { active, chainId, account } = useWeb3React()\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [disabledAction, setDisabledAction] = useState(true)\n  const [neutralizeAmount, setNeutralizeAmount] = useState(0)\n  const posContract = usePosContract(active, signer)\n  const [neutralizeType, setNeutralizeType] = useState<NeutralizeType>(NeutralizeType.Wallet)\n\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const { currentMintToken, currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const { onUpdateNeutralizeValue, newNeutralizeFee, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage, newEstimatedDailyDebt } =\n    useComputedIndexAction()\n\n  const { handleUpdatePosition } = usePositionAction()\n\n  const { handleApprove } = useApprove(account, currentPosition?.mintTokenInfo.address)\n  const { onCheckApprove } = useCheckApprove()\n\n  const onApprove = useCallback(async () => {\n    try {\n      const info = await handleApprove(currentPosition?.positionAddress)\n      setApproveStatus(true)\n      if (info.hash) {\n        toastInfo(\n          ToastTitle.submited,\n          <TransactionSuccessInfo txHash={info.hash} content=\"The approve has been submitted\" />,\n        )\n        const result = await info.wait()\n        \n        if (result) {\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSuccessInfo txHash={info.hash} content=\"The approve has been successfully\" />,\n          )\n        }\n      }\n    } catch ({ message }: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${message}`)\n    }\n  }, [handleApprove, currentPosition?.positionAddress, toastInfo, toastSuccess, toastError])\n\n  const settlementCurrencyValues = useMemo(() => {\n    const settlementCurrency = currentPosition?.mintTokenInfo.settlementCurrency\n    if (currentPositionTokenInfo?.allowedTokens) {\n      return {\n        [settlementCurrency.symbol]: Number(\n          TokenUtils.formatFourDecimals(\n            Number(\n              toLargeUnits(\n                currentPositionTokenInfo.allowedTokens.balances[settlementCurrency.symbol],\n                settlementCurrency.decimals,\n              ),\n            ),\n          ),\n        ),\n        [currentMintToken]: Number(\n          TokenUtils.formatFourDecimals(\n            Number(\n              toLargeUnits(\n                currentPositionTokenInfo.allowedTokens.balances[currentPosition.mintTokenInfo.symbol],\n                currentPosition.mintTokenInfo.decimals,\n              ),\n            ),\n          ),\n        ),\n      }\n    }\n    return {\n      [settlementCurrency.symbol]: 0,\n      [currentMintToken]: 0,\n    }\n  }, [currentMintToken, currentPosition, currentPositionTokenInfo])\n\n  const checkApprove = useCallback(async () => {\n    if (currentPosition.isEnable) {\n      const txInfo = await onCheckApprove(\n        account,\n        currentPosition.mintTokenInfo.address,\n        currentPosition.positionAddress,\n      )\n      setApproveStatus(txInfo && txInfo._hex > 0)\n    }\n  }, [account, currentPosition, onCheckApprove])\n\n  const onChangeNeutralizeAmount = useCallback(\n    ({ target }) => {\n      const { value } = target;\n      const { mintTokenInfo, balance } = currentPosition;\n      const _decimals = mintTokenInfo.decimals;\n  \n      setNeutralizeAmount(value);\n  \n      const formattedValue = value ? Number(`-${value}`) : 0;\n      const actionVal = Number(TokenUtils.formatTokenAmount(formattedValue, _decimals));\n      onUpdateNeutralizeValue(actionVal);\n  \n      const debt = toLargeUnits(balance, _decimals);\n      const isValueWithinBounds = value > 0 && value <= debt;\n  \n      const isWalletValueValid = isValueWithinBounds && value <= walletTokenBalance[currentMintToken];\n      const isCollateralValueValid = isValueWithinBounds && value <= settlementCurrencyValues[currentMintToken];\n  \n  \n      const isValueValid = neutralizeType === NeutralizeType.Wallet\n        ? isWalletValueValid\n        : isCollateralValueValid;\n  \n      setDisabledAction(!isValueValid);\n  \n      if (value > 0) {\n        const transferValue = toSmallUnits(\n          TokenUtils.formatTokenAmount(value, _decimals),\n          _decimals\n        );\n  \n        const isFinalValueValid = isValueValid && !transferValue.isZero();\n        setDisabledAction(!isFinalValueValid);\n      }\n    },\n    [\n      onUpdateNeutralizeValue,\n      settlementCurrencyValues,\n      currentMintToken,\n      walletTokenBalance,\n      neutralizeType,\n      currentPosition,\n    ]\n  );\n  \n\n  const onNeutralize = useCallback(async () => {\n    if (!disabledAction) {\n      const interf = new utils.Interface(fbtc20mint.abi)\n      const data = interf.encodeFunctionData('neutralizetBalance', [\n        toSmallUnits(TokenUtils.formatTokenAmount(neutralizeAmount, currentPosition.mintTokenInfo.decimals), currentPosition.mintTokenInfo.decimals),\n        neutralizeType === NeutralizeType.Wallet,\n      ])\n      if (posContract) {\n        try {\n          const info = await posContract.delegateCall(fbtc20mint.address[chainId], data)\n          if (info) {\n            setDisabledAction(true)\n            setNeutralizeAmount(0)\n            toastInfo(\n              ToastTitle.success,\n              <TransactionSuccessInfo txHash={info.hash} content=\"Waiting for confirmation\" />,\n            )\n            const result = await info.wait()\n            if (result) {\n              setRefresh((state) => !state)\n              toastSuccess(\n                ToastTitle.success,\n                <TransactionSuccessInfo txHash={info.hash} content=\"The transaction has been successfully\" />,\n              )\n              setDisabledAction(false)\n              onUpdateNeutralizeValue(0)\n              await handleUpdatePosition()\n            }\n          }\n        } catch (e: any) {\n          toastError(ToastTitle.failed, e?.reason || e?.message)\n        }\n      }\n    }\n  }, [\n    disabledAction,\n    neutralizeAmount,\n    currentPosition.mintTokenInfo.decimals,\n    neutralizeType,\n    posContract,\n    chainId,\n    toastInfo,\n    setRefresh,\n    toastSuccess,\n    onUpdateNeutralizeValue,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  useEffect(() => {\n    checkApprove()\n  }, [checkApprove])\n\n  return (\n    <>\n      <SelectGroup>\n        <Select\n          selectValue={currentMintToken}\n          groupStyle={{ width: '100%' }}\n          options={[\n            {\n              ...currentPosition?.mintTokenInfo,\n              token: currentPosition.mintTokenInfo.symbol,\n            },\n          ]}\n          actionValue={neutralizeAmount}\n          selectInput={onChangeNeutralizeAmount}\n          isGroup\n        />\n        <Func dir=\"rtl\">\n          <ButtonBase\n            onClick={() => {\n              const debt = toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)\n              if (neutralizeType === NeutralizeType.Wallet) {\n                const value = Math.min(Number(walletTokenBalance[currentMintToken]), Number(debt))\n                onChangeNeutralizeAmount({ target: { value } })\n              } else {\n                const value = Math.min(Number(settlementCurrencyValues[currentMintToken]), Number(debt))\n                onChangeNeutralizeAmount({ target: { value } })\n              }\n            }}\n          >\n            Max\n          </ButtonBase>\n        </Func>\n        <SelectTypeWrap>\n          <h3>Neutralize the asset from</h3>\n          <div className=\"content\">\n            <div\n              className={`item_wrap ${neutralizeType === NeutralizeType.Wallet ? 'active' : ''}`}\n              onClick={() => {\n                setNeutralizeType(NeutralizeType.Wallet)\n                if (neutralizeAmount > 0) {\n                  setDisabledAction(\n                    newNeutralizeFee > walletTokenBalance.WBTC ||\n                      neutralizeAmount > walletTokenBalance[currentMintToken],\n                  )\n                }\n              }}\n              onKeyUp={() => null}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <div className=\"item wallet\">\n                <h4>\n                  <WalletIcon /> My Wallet\n                </h4>\n                <p>\n                  <span>{currentMintToken}</span>\n                  <span\n                    style={{\n                      color:\n                        (neutralizeType === NeutralizeType.Wallet &&\n                          walletTokenBalance &&\n                          neutralizeAmount > walletTokenBalance[currentMintToken] &&\n                          RED) ||\n                        '',\n                    }}\n                  >\n                    {(walletTokenBalance && TokenUtils.formatFourDecimals(walletTokenBalance[currentMintToken])) || 0}\n                  </span>\n                </p>\n                <p>\n                  <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                  <span\n                    style={{\n                      color:\n                        neutralizeType === NeutralizeType.Wallet &&\n                        walletTokenBalance &&\n                        newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n                          ? RED\n                          : '',\n                    }}\n                  >\n                    {(walletTokenBalance && TokenUtils.formatFourDecimals(walletTokenBalance.WBTC)) || 0}\n                  </span>\n                </p>\n              </div>\n            </div>\n\n            <div\n              className={`item_wrap ${neutralizeType === NeutralizeType.Avatar ? 'active' : ''}`}\n              onClick={() => {\n                setNeutralizeType(NeutralizeType.Avatar)\n                if (neutralizeAmount > 0) {\n                  setDisabledAction(\n                    neutralizeAmount > settlementCurrencyValues[currentMintToken] ||\n                      newNeutralizeFee >\n                        settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n                  )\n                }\n              }}\n              onKeyUp={() => null}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <div className=\"item avatar\">\n                <h4>\n                  <AvatarIcon />\n                  Collateral\n                </h4>\n                <p>\n                  <span>{currentMintToken}</span>\n                  <span\n                    style={{\n                      color:\n                        (neutralizeType === NeutralizeType.Avatar &&\n                          neutralizeAmount > settlementCurrencyValues[currentMintToken] &&\n                          RED) ||\n                        '',\n                    }}\n                  >\n                    {settlementCurrencyValues[currentPosition.mintTokenInfo.symbol]}\n                  </span>\n                </p>\n                <p>\n                  <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                  <span\n                    style={{\n                      color:\n                        (neutralizeType === NeutralizeType.Avatar &&\n                          newNeutralizeFee >\n                            settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol] &&\n                          RED) ||\n                        '',\n                    }}\n                  >\n                    {settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol]}\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </SelectTypeWrap>\n      </SelectGroup>\n      <Tip>\n        <table className=\"info_panel\" cellSpacing={20} cellPadding={20}>\n          <thead>\n            <tr>\n              <td className=\"from\" colSpan={2}>\n                From\n              </td>\n              <td className=\"to\">To</td>\n            </tr>\n            <tr>\n              <td className=\"label\">Outstanding Debt</td>\n              <td className=\"from\">\n                {TokenUtils.formatFourDecimals(\n                  Number(toLargeUnits(currentPosition?.balance, currentPosition?.mintTokenInfo.decimals)),\n                )}\n              </td>\n              <td className=\"to\">\n                {TokenUtils.formatFourDecimals(\n                  Number(toLargeUnits(currentPosition?.balance, currentPosition?.mintTokenInfo.decimals)) -\n                    neutralizeAmount,\n                )}\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"label\">{DataIndexName.CollateralRatio}</td>\n              <td className=\"from\">{collateralIndex.displayRatio}</td>\n              <td className=\"to\">{newDisplayCollateralRatio}</td>\n            </tr>\n            <tr>\n              <td className=\"label\">{DataIndexName.PrepaidInterestCoverage}</td>\n              <td className=\"from\">{collateralIndex.displayCoverage}</td>\n\n              <td className=\"to\">{newDisplayPrepaidInterestCoverage}</td>\n            </tr>\n            <tr className=\"footer\">\n              <td className=\"label\">Estimate neutralize fee</td>\n              <td\n                className=\"to\"\n                colSpan={2}\n                style={{\n                  color:\n                    (neutralizeType === NeutralizeType.Wallet &&\n                      walletTokenBalance &&\n                      newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ||\n                    (neutralizeType === NeutralizeType.Avatar &&\n                      newNeutralizeFee >\n                        settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol])\n                      ? RED\n                      : '',\n                }}\n              >\n                {!newNeutralizeFee ? 0 : `≈ ${TokenUtils.formatTokenAmount(newNeutralizeFee, currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`} \n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Tip>\n      <TipInfo>\n        {(neutralizeType === NeutralizeType.Wallet &&\n          walletTokenBalance &&\n          newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ||\n        (neutralizeType === NeutralizeType.Avatar &&\n          newNeutralizeFee > settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ? (\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n              fill=\"#FF2E00\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M8.57852 10.156C8.82398 10.156 9.02296 10.355 9.02296 10.6004V11.756C9.02296 12.0015 8.82398 12.2004 8.57852 12.2004H7.42296C7.1775 12.2004 6.97852 12.0015 6.97852 11.756V10.6004C6.97852 10.355 7.1775 10.156 7.42296 10.156H8.57852ZM8.57852 3.62842C8.82398 3.62842 9.02296 3.8274 9.02296 4.07286V8.74859C9.02296 8.99405 8.82398 9.19303 8.57852 9.19303H7.42296C7.1775 9.19303 6.97852 8.99405 6.97852 8.74859V4.07286C6.97852 3.8274 7.1775 3.62842 7.42296 3.62842H8.57852Z\"\n              fill=\"white\"\n            />\n          </svg>\n        ) : (\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n              fill=\"#73797C\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M7.42295 5.6736C7.17749 5.6736 6.9785 5.47461 6.9785 5.22915V4.0736C6.9785 3.82814 7.17749 3.62915 7.42295 3.62915H8.5785C8.82396 3.62915 9.02295 3.82814 9.02295 4.0736L9.02295 5.22915C9.02295 5.47461 8.82396 5.6736 8.5785 5.6736H7.42295ZM7.42295 12.2012C7.17749 12.2012 6.9785 12.0022 6.9785 11.7567V7.081C6.9785 6.83554 7.17749 6.63656 7.42295 6.63656H8.5785C8.82396 6.63656 9.02295 6.83554 9.02295 7.081V11.7567C9.02295 12.0022 8.82396 12.2012 8.5785 12.2012H7.42295Z\"\n              fill=\"white\"\n            />\n          </svg>\n        )}\n\n        <p\n          style={{\n            color:\n              (neutralizeType === NeutralizeType.Wallet &&\n                walletTokenBalance &&\n                newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ||\n              (neutralizeType === NeutralizeType.Avatar &&\n                newNeutralizeFee > settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol])\n                ? RED\n                : '',\n          }}\n        >\n          A 1.0% fee of the token value will be levied after the position is neutralized.\n        </p>\n      </TipInfo>\n      {neutralizeType === NeutralizeType.Avatar ? (\n        <NeutralizeButton disabled={disabledAction} onClick={onNeutralize}>\n          Neutralize\n        </NeutralizeButton>\n      ) : (\n        <>\n          {approveStatus ? (\n            <NeutralizeButton disabled={disabledAction} onClick={onNeutralize}>\n              Neutralize\n            </NeutralizeButton>\n          ) : (\n            <NeutralizeButton disabled={approveStatus} onClick={onApprove}>\n              Approve\n            </NeutralizeButton>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default NeutralizeComp\n","import React, { useCallback, useMemo, useState } from 'react'\nimport Methods from 'components/Methods'\n\nimport { Approve } from 'components/CommonComponent'\nimport tokens, { poolData } from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport DataWrapper from 'components/DataWrapper'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo, usePositionAction } from 'hooks/news/usePoistion'\nimport { AvatarIcon, GuaranteeIcon } from 'components/uikit'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\n\n\nfunction AddGuaranteeFromAvatar(props) {\n  const { approveStatus, onApprove } = props\n  const [transferVal, setTransferVal] = useState<number>(0)\n  const [isDisabled, setDisabled] = useState(false)\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const { collateralIndex, currentPosition, currentPositionTokenInfo } = usePositionInfo()\n  const { onUpdatePrepaidInterest, newDisplayPrepaidInterestCoverage } = useComputedIndexAction()\n  const { handleUpdatePosition, onAddPrepaidInterest } = usePositionAction()\n  const leftBalance = useMemo(() => {\n    return toLargeUnits(\n      currentPositionTokenInfo.allowedTokens?.balances[currentPosition.mintTokenInfo.settlementCurrency.symbol] ?? 0,\n      currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      true,\n    ) as number\n  }, [currentPosition.mintTokenInfo.settlementCurrency, currentPositionTokenInfo.allowedTokens?.balances])\n\n  const changeTransferVal = useCallback(\n    (e, type) => {\n      const numberVal = type === 0 ? Number(e.target.value) : leftBalance\n      const _transferAmount = toSmallUnits(\n        TokenUtils.formatTokenAmount(numberVal, tokens.WBTC.decimals),\n        tokens.WBTC.decimals,\n      )\n      if (numberVal > leftBalance || numberVal <= 0 || _transferAmount.isZero()) {\n        setDisabled(true)\n      } else {\n        setDisabled(false)\n      }\n      setTransferVal(type === 0 ? e.target.value : numberVal)\n      onUpdatePrepaidInterest(numberVal)\n    },\n    [leftBalance, onUpdatePrepaidInterest],\n  )\n  const onSubmit = useCallback(async () => {\n    try {\n      if (!transferVal || (transferVal > leftBalance && transferVal <= 0)) {\n        toastError(ToastTitle.failed, 'Please enter a valid amount')\n        return\n      }\n      setDisabled(true)\n      const txInfo = await onAddPrepaidInterest(transferVal)\n      toastInfo(\n        ToastTitle.submited,\n        <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n      )\n      const result = await txInfo.wait()\n      if (result) {\n        toastSuccess(\n          ToastTitle.success,\n          <TransactionSuccessInfo content=\"Settlement added successfully\" txHash={txInfo.hash} />,\n        )\n        setDisabled(false)\n        setTransferVal(0)\n        onUpdatePrepaidInterest(0)\n        await handleUpdatePosition()\n      }\n    } catch (error) {\n      setDisabled(false)\n    }\n  }, [\n    transferVal,\n    leftBalance,\n    onAddPrepaidInterest,\n    toastInfo,\n    toastSuccess,\n    handleUpdatePosition,\n    onUpdatePrepaidInterest,\n    toastError,\n  ])\n\n  return (\n    <>\n      <Methods\n        SelectIcon={AvatarIcon}\n        options={poolData}\n        rightBalance={collateralIndex.prepaidInterest}\n        rightOptions={poolData}\n        leftBalance={leftBalance}\n        rightSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        selectedSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        RightIcon={GuaranteeIcon}\n        leftInputValue={transferVal}\n        rightInputValue={transferVal}\n        selectInput={(e) => {\n          changeTransferVal(e, 0)\n        }}\n        onMax={() => {\n          changeTransferVal({}, 1)\n        }}\n      />\n      <DataWrapper\n        data={[\n          // The Collateral Ratio has not changed\n          [DataIndexName.CollateralRatio, collateralIndex.displayRatio, collateralIndex.displayRatio],\n\n          [DataIndexName.PrepaidInterestCoverage, collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      <Approve\n        style={{ boxShadow: 'none' }}\n        disabled={!approveStatus || isDisabled || !(transferVal > 0)}\n        onClick={approveStatus ? onSubmit : onApprove}\n      >\n        {approveStatus ? 'Submit' : 'Approve'}\n      </Approve>\n    </>\n  )\n}\n\nexport default AddGuaranteeFromAvatar\n","import React from 'react'\nimport { Typography } from '@mui/material/'\nimport { Wrapper, Title, Accordion, AccordionSummary, AccordionDetails } from 'components/CommonComponent'\nimport usePanel from 'hooks/usePanel'\nimport NeutralizeComp from 'views/Mint/components/NeutralizeComp'\nimport { useWeb3React } from 'web3-react-core'\nimport AddGuaranteeFromWallet from './AddGuaranteeFromWallet'\nimport AddGuaranteeFromAvatar from './AddGuaranteeFromAvatar'\nimport useHashPowerToken from '../../../hooks/useHashPowerToken'\n\nexport default function CustomizedAccordions(props) {\n  const { approveStatus, onApprove } = props\n  const { active, chainId, account } = useWeb3React()\n  const { walletTokenBalance } = useHashPowerToken()\n  const { expanded, handleChange } = usePanel()\n  return (\n    <Wrapper>\n      <Title>Improve Prepaid Interest Coverage</Title>\n      <Accordion id=\"panel3\" expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Add asset from my wallet to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel3' && (\n            <AddGuaranteeFromWallet\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel4\" expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Transfer asset from Collateral to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel4' && (\n            <AddGuaranteeFromAvatar\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel5\" expanded={expanded === 'panel5'} onChange={handleChange('panel5')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 3. Neutralize outstanding debt</Typography>\n        </AccordionSummary>\n        <AccordionDetails>{expanded === 'panel5' && <NeutralizeComp />}</AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { Typography } from '@mui/material/'\nimport { Wrapper, Title, Accordion, AccordionSummary, AccordionDetails } from 'components/CommonComponent'\nimport { useWeb3React } from 'web3-react-core'\nimport usePanel from 'hooks/usePanel'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport AddGuaranteeFromWallet from './AddGuaranteeFromWallet'\nimport AddCurrencyToAvatar from './AddCurrencyToAvatar'\nimport NetralizeComp from '../../Mint/components/NeutralizeComp'\n\nexport default function ImproveCollateralRatio(props) {\n  const { expanded, handleChange } = usePanel()\n  const { approveStatus, onApprove } = props\n  const { walletTokenBalance } = useHashPowerToken()\n  const { active, chainId, account } = useWeb3React()\n  return (\n    <Wrapper>\n      <Title>Improve Collateral Ratio</Title>\n      <Accordion id=\"panel7\" expanded={expanded === 'panel7'} onChange={handleChange('panel7')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Add asset from my wallet to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel7' && (\n            <AddGuaranteeFromWallet\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel8\" expanded={expanded === 'panel8'} onChange={handleChange('panel8')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Add asset from my wallet to Collateral</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel8' && (\n            <AddCurrencyToAvatar\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel9\" expanded={expanded === 'panel9'} onChange={handleChange('panel9')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 3. Neutralize outstanding debt</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel9' && <NetralizeComp />}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { IconButton, Typography } from '@mui/material/'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport AddIcon from '@mui/icons-material/Add'\nimport uuid from 'uuid/dist/v4'\nimport Methods from 'components/Methods'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Approve,\n  FlexWrap,\n  Title,\n  Wrapper,\n} from 'components/CommonComponent'\nimport DataWrapper from 'components/DataWrapper'\nimport usePanel from 'hooks/usePanel'\nimport { useWeb3React } from 'web3-react-core'\nimport { styled } from '@mui/material/styles'\nimport PositionABI from 'config/abi/Position.json'\nimport { AvatarIcon, Button, DeleteIcon, DroppableIcon } from 'components/uikit'\nimport { getContract } from 'utils/web3React'\nimport { utils } from 'ethers'\nimport useSystemParams from 'hooks/useSystemParams'\nimport contracts from 'config/constants/contracts'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useToast from 'hooks/useToast'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { findPath, getSwapQuote } from 'config/constants/pool'\nimport { SupportedTokens } from 'config/constants/tokenConfig'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\n\nconst AddBtn = styled(Button)`\n  box-shadow: none !important;\n  width: 34px !important;\n  height: 28px !important;\n  padding: 0 !important;\n  background: linear-gradient(90deg, #62c3f7 0%, #7ae9f1 100%) !important;\n  border-radius: 6px !important;\n  svg {\n    color: #000;\n    width: 16px;\n  }\n`\n\nconst { ActionUser, ActionMulticall } = contracts\nconst ActionUserInterface = new utils.Interface(ActionUser.abi)\nconst ActionMulticallInterface = new utils.Interface(ActionMulticall.abi)\nconst onDragEnd = (result, columns, setColumns, setIsSubmit) => {\n  if (!result.destination) return\n  const { source, destination } = result\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId]\n    const destColumn = columns[destination.droppableId]\n    const sourceItems = [...sourceColumn.items]\n    const destItems = [...destColumn.items]\n    const [removed] = sourceItems.splice(source.index, 1)\n    destItems.splice(destination.index, 0, removed)\n    setColumns([...destColumn, destItems])\n  } else {\n    const copiedItems = [...columns]\n    const [removed] = copiedItems.splice(source.index, 1)\n    copiedItems.splice(destination.index, 0, removed)\n    if (copiedItems.map((it) => it.input > 0).includes(false)) {\n      setIsSubmit(true)\n    } else {\n      setIsSubmit(false)\n    }\n    setColumns(copiedItems)\n  }\n}\n\n\nconst TradingThrough: React.FC<{\n  onApprove: (callback: (state: boolean)=> void) => void\n  approveStatus: boolean\n}> = (props) => {\n  const { onApprove, approveStatus } = props\n  const { chainId } = useWeb3React()\n  const { toastInfo, toastError, toastSuccess } = useToast()\n  const { signer, tokenPools } = useSystemParams()\n  const [columns, setColumns] = useState<\n    {\n      id: string\n      input: number\n      output: number\n      inputToken: {\n        token: SupportedTokens\n        balance: number\n        decimals: number\n        icon: React.FC<JSX.Element>\n        rightOptionList: {\n          token: SupportedTokens\n          balance: number\n          decimals: number\n          icon: React.FC<JSX.Element>\n        }[]\n      }\n      outputToken: { token: SupportedTokens; balance: number; decimals: number; icon: React.FC<JSX.Element> }\n    }[]\n  >([])\n  const [isSubmitStatus, setIsSubmit] = useState(true)\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n  const {\n    onUpdateTotalCollateralValue,\n    newDisplayCollateralRatio,\n    newCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n  const { currentPositionTokenInfo, collateralIndex, currentPosition } = usePositionInfo()\n\n  const tokenList = useMemo<\n    {\n      token: SupportedTokens\n      balance: number\n      decimals: number\n      icon: React.FC<JSX.Element>\n      rightOptionList: {\n        token: SupportedTokens\n        balance: number\n        decimals: number\n        icon: React.FC<JSX.Element>\n      }[]\n    }[]\n  >(() => {\n    if (currentPositionTokenInfo?.tokenPrice) {\n      const { allowedTokens } = currentPositionTokenInfo\n      const list = Object.values(allowedTokens.tokens).map((it) => {\n        const balance =\n          (allowedTokens?.balances &&\n            (toLargeUnits(allowedTokens?.balances[it.symbol] || 0, it.decimals, true) as number)) ||\n          0\n        return {\n          decimals: it.decimals,\n          token: it.symbol,\n          balance,\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={it.logo} symbol={it.symbol} />,\n          rightOptionList: [],\n        }\n      })\n      return list.map((item) => {\n        return {\n          ...item,\n          rightOptionList: list.filter((it) => it.token !== item.token),\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo])\n  const addMethods = useCallback(() => {\n    setColumns((state) => {\n      const data = [\n        ...state,\n        {\n          id: uuid(),\n          input: 0,\n          output: 0,\n          inputToken: tokenList[0],\n          outputToken: tokenList[0].rightOptionList[0],\n        },\n      ]\n      if (data.map((it) => it.input > 0).includes(false)) {\n        setIsSubmit(true)\n      } else {\n        setIsSubmit(false)\n      }\n      return data\n    })\n  }, [tokenList])\n\n  const onSubmit = useCallback(async () => {\n    const posContract = getContract(signer, PositionABI, currentPosition.positionAddress)\n    try {\n      if (posContract) {\n        const isSubmit = columns.filter((it) => it.input <= 0)\n        if (isSubmit.length) {\n          toastError(ToastTitle.failed, 'Please enter a valid amount')\n          return\n        }\n\n        setIsSubmit(true)\n        const _params = columns.map((it) => {\n          const inputAmount = toSmallUnits(String(it.input), it.inputToken.decimals)\n          const outputAmount = toSmallUnits(String(it.output), it.outputToken.decimals)\n          const { tokenAddressPath } = findPath({\n            chainId,\n            from: it.inputToken.token,\n            to: it.outputToken.token,\n          })\n\n          console.log(it.inputToken.token, it.outputToken.token, [\n            inputAmount,\n            '0',\n            tokenAddressPath,\n            '999999999999999',\n          ])\n          return [\n            ActionUser.address[chainId],\n            ActionUserInterface.encodeFunctionData('swapExactTokensForTokens', [\n              inputAmount,\n              outputAmount,\n              tokenAddressPath,\n              '999999999999999',\n            ]),\n          ]\n        })\n        const dataMulti = ActionMulticallInterface.encodeFunctionData('multicall', [_params])\n        const transaction = await posContract.delegateCall(ActionMulticall.address[chainId], dataMulti)\n        if (transaction.hash) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={transaction.hash} />,\n          )\n        }\n        const result = await transaction.wait()\n        if (result) {\n          setIsSubmit(true)\n          onUpdateTotalCollateralValue(0)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSuccessInfo content=\"The transaction has been successfully.\" txHash={transaction.hash} />,\n          )\n          try {\n            await handleUpdatePosition()\n          } catch (error) {\n            console.error('handleUpdatePosition>>>>', error)\n          }\n        }\n      }\n    } catch (error: any) {\n      setIsSubmit(false)\n      toastError(\n        'Failed',\n        <FlexWrap style={{ flexDirection: 'column' }}>\n          <p\n            style={{\n              wordBreak: 'break-all',\n            }}\n          >\n            {error.reason}\n          </p>\n        </FlexWrap>,\n      )\n    }\n  }, [\n    signer,\n    currentPosition.positionAddress,\n    columns,\n    chainId,\n    toastInfo,\n    onUpdateTotalCollateralValue,\n    toastSuccess,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  useEffect(() => {\n    if (tokenList.length) {\n      setColumns(() => {\n        return [\n          {\n            id: uuid(),\n            input: 0,\n            output: 0,\n            inputToken: tokenList[0],\n            outputToken: tokenList[0].rightOptionList[0],\n          },\n        ]\n      })\n      console.log('1 :>> ', 1);\n    }\n  }, [tokenList])\n  const onChangeInputAmount = useCallback(\n    (\n      e,\n      item: {\n        id: string\n        input: number\n        output: number\n        inputToken: {\n          token: SupportedTokens\n          balance: number\n          decimals: number\n          icon: React.FC<JSX.Element>\n          rightOptionList: {\n            token: SupportedTokens\n            balance: number\n            decimals: number\n            icon: React.FC<JSX.Element>\n          }[]\n        }\n        outputToken: { token: SupportedTokens; balance: number; decimals: number; icon: React.FC<JSX.Element> }\n      },\n    ) => {\n      const value = TokenUtils.formatTokenAmount(Number(e.target.value), item.inputToken.decimals)\n      if (Number(value) > Number.MAX_SAFE_INTEGER) {\n        setIsSubmit(true)\n        return\n      }\n      const res =\n        getSwapQuote(\n          chainId,\n          item.inputToken.token,\n          item.outputToken.token,\n          toSmallUnits(value, item.inputToken.decimals),\n          tokenPools,\n        ) || 0\n      setColumns((state) => {\n        const data = state.map((it) => {\n          const _item = {\n            ...it,\n            input: it.id === item.id ? e.target.value : it.input,\n            output: it.id === item.id ? (toLargeUnits(res, item.outputToken.decimals, true) as number) : it.output,\n          }\n          return _item\n        })\n\n        const actionValSum = data.reduce((acc, curr) => {\n          const next = { ...acc }\n          if (Object.prototype.hasOwnProperty.call(next, curr.inputToken.token)) {\n            next[curr.inputToken.token] += Number(curr.input)\n          } else {\n            next[curr.inputToken.token] = Number(curr.input)\n          }\n          return next\n        }, {} as Record<SupportedTokens, number>)\n\n        if (data.map((it) => it.input > 0 && it.output > 0 && it.input <= it.inputToken.balance).includes(false)) {\n          setIsSubmit(true)\n        } else if (\n          value.indexOf('.') !== -1 &&\n          String(value).slice(value.indexOf('.') + 1).length > item.inputToken.decimals\n        ) {\n          setIsSubmit(true)\n        } else {\n          setIsSubmit(false)\n        }\n\n        if (data.map((it) => it.input > 0).includes(false)) {\n          setIsSubmit(true)\n        } else if (actionValSum[item.inputToken.token] > item.inputToken.balance) {\n          setIsSubmit(true)\n        } else {\n          setIsSubmit(false)\n        }\n        return data\n      })\n    },\n    [chainId, tokenPools],\n  )\n  const onChangeToken = useCallback(\n    (selected, id, type) => {\n      setColumns((state) => {\n        return state.map((item) => {\n          if (item.id === id) {\n            const data = { ...item, [type]: selected }\n            if (data.input) {\n              const res = getSwapQuote(\n                chainId,\n                data.inputToken.token,\n                data.outputToken.token,\n                toSmallUnits(\n                  TokenUtils.formatTokenAmount(data.input, data.inputToken.decimals),\n                  data.inputToken.decimals,\n                ),\n                tokenPools,\n              )\n              data.output = toLargeUnits(res, data.outputToken.decimals, true) as number\n            }\n            return data\n          }\n          return item\n        })\n      })\n    },\n    [chainId, tokenPools],\n  )\n  const onExchange = useCallback((record, index) => {\n    setColumns((state) => {\n      return state.map((item, i) => {\n        if (i === index) {\n          const data: {\n            token: SupportedTokens\n            balance: number\n            decimals: number\n            icon: React.FC<JSX.Element>\n            rightOptionList: {\n              token: SupportedTokens\n              balance: number\n              decimals: number\n              icon: React.FC<JSX.Element>\n            }[]\n          } = {\n            ...item.outputToken,\n            rightOptionList: [],\n          }\n          data.rightOptionList = [...item.inputToken.rightOptionList]\n          data.rightOptionList.push(item.inputToken)\n          data.rightOptionList = data.rightOptionList.filter((it) => it.token !== item.outputToken.token)\n          const target = {\n            ...item,\n            outputToken: item.inputToken,\n            inputToken: { ...data, balance: item.outputToken.balance },\n            input: 0,\n            output: 0,\n          }\n          return { ...target }\n        }\n        return item\n      })\n    })\n  }, [])\n\n  useEffect(() => {\n    const { tokenPrice } = currentPositionTokenInfo\n    if (tokenPrice) {\n      const poolPath = columns.map((it) => ({\n        from: it.inputToken.token,\n        to: it.outputToken.token,\n        fromDecimals: it.inputToken.decimals,\n        toDecimals: it.outputToken.decimals,\n        inputValue: Number(it.input),\n        outputValue: Number(it.output),\n      }))\n      let total = 0\n      poolPath.forEach((item) => {\n        total -=\n          item.inputValue *\n          (toLargeUnits(\n            tokenPrice[item.from].price,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            true,\n          ) as number)\n        total +=\n          item.outputValue *\n          (toLargeUnits(\n            tokenPrice[item.to].price,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            true,\n          ) as number)\n      })\n      onUpdateTotalCollateralValue(total)\n    }\n  }, [\n    columns,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPositionTokenInfo,\n    onUpdateTotalCollateralValue,\n  ])\n  return <>\n    <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns, setIsSubmit)}>\n      <Droppable droppableId=\"droppableId\">\n        {(provided) => {\n          return (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {columns.map((item, index) => {\n                return (\n                  <Draggable key={item.id} draggableId={item.id} index={index} isDragDisabled={index === 0}>\n                    {(provideds) => {\n                      console.log('---------- ', String(item.input || '1'));\n                      const amountOut =\n                        (tokenPools.length &&\n                          getSwapQuote(\n                            chainId,\n                            item.inputToken.token,\n                            item.outputToken.token,\n                            toSmallUnits(String(item.input || '1'), item.inputToken.decimals),\n                            tokenPools,\n                          )) ||\n                        0\n                      console.log('amountOut :>> ', amountOut);\n                      const price = toLargeUnits(amountOut, item.outputToken.decimals, true) as number\n                      const unitAmountOut = price / (item.input || 1)\n                      console.log('price :>> ', unitAmountOut);\n\n                      const priceStr = TokenUtils.formatFourDecimals(unitAmountOut)\n                      return (\n                        <div\n                          ref={provideds.innerRef}\n                          {...provideds.draggableProps}\n                          {...provideds.dragHandleProps}\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            userSelect: 'none',\n                            margin: '0 0 8px 0',\n                            ...provideds.draggableProps.style,\n                            position: 'static',\n                          }}\n                        >\n                          <div style={{ width: '100%', position: 'relative', paddingRight: index <= 0 ? 58 : 0 }}>\n                            <Methods\n                              SelectIcon={AvatarIcon}\n                              leftInputValue={item.input}\n                              rightInputValue={item.output}\n                              isExchange\n                              onExchange={() => {\n                                onExchange(item, index)\n                              }}\n                              options={tokenList}\n                              leftSelectValue={item.inputToken.token}\n                              leftBalance={item.inputToken.balance}\n                              rightSelectValue={item.outputToken.token}\n                              rightBalance={item.outputToken.balance}\n                              rightOptions={item.inputToken.rightOptionList}\n                              selectedBalance={100}\n                              leftDisableStatus={[false, false]}\n                              RightIcon={AvatarIcon}\n                              rightDisableStatus={[false, true]}\n                              selectInput={(e) => {\n                                onChangeInputAmount(e, item)\n                              }}\n                              leftChange={(selected) => {\n                                onChangeToken(selected, item.id, 'inputToken')\n                              }}\n                              rightChange={(selected) => {\n                                onChangeToken(selected, item.id, 'outputToken')\n                              }}\n                              onMax={() => {\n                                onChangeInputAmount({ target: { value: item.inputToken.balance } }, item)\n                              }}\n                              leftSymbol={item.inputToken.token}\n                              rightSymbol={item.outputToken.token}\n                            />\n                            <p\n                              style={{\n                                position: 'absolute',\n                                bottom: 0,\n                                right: index <= 0 ? 73 : 15,\n                                color: 'rgba(0, 0, 0, 0.5)',\n                                fontSize: 12,\n                              }}\n                            >\n                              {`${1} ${item.inputToken.token}`} ≈ {`${priceStr} ${item.outputToken.token}`}\n                            </p>\n                          </div>\n                          {index > 0 ? (\n                            <>\n                              <IconButton\n                                onClick={() => {\n                                  const data = [...columns]\n                                  data.splice(index, 1)\n                                  if (data.map((it) => it.input > 0).includes(false)) {\n                                    setIsSubmit(true)\n                                  } else {\n                                    setIsSubmit(false)\n                                  }\n                                  setColumns(data)\n                                }}\n                                style={{ cursor: 'pointer', marginTop: 8, marginLeft: 10, padding: 0 }}\n                              >\n                                <DeleteIcon />\n                              </IconButton>\n                              <IconButton style={{ marginTop: 8, marginLeft: 8, padding: 0 }}>\n                                <DroppableIcon style={{ fill: 'none' }} />\n                              </IconButton>\n                            </>\n                          ) : null}\n                        </div>\n                      )\n                    }}\n                  </Draggable>\n                )\n              })}\n              {provided.placeholder}\n            </div>\n          )\n        }}\n      </Droppable>\n    </DragDropContext>\n    <AddBtn onClick={addMethods}>\n      <AddIcon />\n    </AddBtn>\n    <DataWrapper\n      data={[\n        [\n          DataIndexName.CollateralRatio,\n          collateralIndex.displayRatio,\n          `${!(newCollateralRatio === 0 || newCollateralRatio === Number.POSITIVE_INFINITY) ? '≈' : ''\n          } ${newDisplayCollateralRatio}`,\n        ],\n\n        [\n          DataIndexName.PrepaidInterestCoverage,\n          collateralIndex.displayCoverage,\n          newDisplayPrepaidInterestCoverage,\n        ],\n      ]}\n    />\n    {approveStatus ? (\n      <Approve style={{ boxShadow: 'none' }} disabled={isSubmitStatus} onClick={onSubmit}>\n        Submit\n      </Approve>\n    ) : (\n      <Approve\n        style={{ boxShadow: 'none' }}\n        disabled={approveBtnStatus}\n        onClick={() => {\n          onApprove((state) => {\n            setApproveBtnStatus(state)\n          })\n        }}\n      >\n        Approve\n      </Approve>\n    )}\n  </>\n}\n\nexport default function CustomizedAccordions(props) {\n  const { onApprove, approveStatus } = props\n  const { expanded, handleChange } = usePanel()\n  return (\n    <Wrapper>\n      <Title>Trading through Collateral</Title>\n      <Accordion id=\"panel12\" expanded={expanded === 'panel12'} onChange={handleChange('panel12')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Trading through Collateral</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n            expanded === 'panel12' &&\n            <TradingThrough onApprove={onApprove} approveStatus={approveStatus} />\n          }\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Typography, Input } from '@mui/material/'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport {\n  Wrapper,\n  Title,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Approve,\n} from 'components/CommonComponent'\nimport usePanel from 'hooks/usePanel'\nimport { styled } from '@mui/material/styles'\nimport { AvatarIcon, ExchangeArrow, GuaranteeIcon } from 'components/uikit'\nimport { useWeb3React } from 'web3-react-core'\nimport Select from 'components/Select'\nimport DataWrapper from 'components/DataWrapper'\nimport useSystemParams from 'hooks/useSystemParams'\nimport usePosContract from 'hooks/usePosContract'\nimport contracts from 'config/constants/contracts'\nimport { useTransfer } from 'hooks/useManager'\nimport useToast from 'hooks/useToast'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { chainConfigs, commonTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { getSwapQuote } from 'config/constants/pool'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { ethers } from 'ethers'\n\nconst MethodsWrap = styled('div')`\n  .balance_info {\n    display: flex;\n    align-content: center;\n    padding: 0 12px;\n    margin-bottom: 6px;\n    .label {\n      color: #000;\n      font-size: 14px;\n      font-family: PingFangSC-Medium, sans-serif;\n    }\n    span {\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 400;\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n      margin-left: 7px;\n    }\n  }\n  .content {\n    display: flex;\n    height: 50px;\n    background: rgba(255, 255, 255, 0.4);\n    border: 1px solid rgba(207, 216, 226, 0.5);\n    box-sizing: border-box;\n    border-radius: 11px;\n    padding: 0 12px;\n    .select_custom {\n      margin: 0;\n      padding: 0;\n      border: none;\n      background: unset;\n      width: 200px;\n      flex-shrink: 0;\n    }\n    .select_custom:nth-of-type(2) {\n      width: 130px;\n    }\n    .MuiInput-root,\n    .MuiInput-input {\n      text-align: right;\n      width: 100%;\n      border: none;\n      &:before,\n      &:after {\n        display: none;\n      }\n    }\n    .MuiInput-input {\n      padding: 0 8px;\n      border-left: 1px solid rgba(207, 216, 226, 0.5) !important;\n\n      &::-webkit-inner-spin-button {\n        display: none;\n      }\n    }\n  }\n  .func {\n    font-size: 12px;\n    line-height: 17px;\n    color: #6ed6f3;\n    text-align: right;\n    padding: 0 20px;\n    margin-top: 3px;\n    cursor: pointer;\n    user-select: none;\n  }\n`\n\nenum AccountType {\n  'MyWallet' = 'My Wallet',\n  'Standard' = 'Collateral',\n  'Settlement' = 'Prepaid Interest',\n}\n\nconst accountCategoryList = [\n  {\n    type: AccountType.MyWallet,\n    token: 'My Wallet',\n    id: 'd04155c3-eb41-4c44-b28d-67bb2d515904',\n    icon: Wallet,\n  },\n  {\n    type: AccountType.Settlement,\n    token: 'Prepaid Interest',\n    icon: GuaranteeIcon,\n    id: 'edebd20e-18a1-4bc8-a869-9b44537d810c',\n  },\n  {\n    type: AccountType.Standard,\n    token: 'Collateral',\n    icon: AvatarIcon,\n    id: '763c1484-3fd3-4044-b8b5-3c261947f414',\n  },\n]\n\nconst { ActionUser } = contracts\n\nconst ActionUserInterface = new ethers.utils.Interface(ActionUser.abi)\nconst getTokenDecimals = (symbol: string) => {\n  const key = valueToKeyMap[symbol]\n  return commonTokens[key].decimals\n}\n\nexport default function GeneralTransfer(props) {\n  const { approveStatus, onApprove } = props\n  const [gDisStatus, setGDisStatus] = useState(true)\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { signer, tokenPools } = useSystemParams()\n  const { walletTokenBalance, setRefresh } = useHashPowerToken()\n  const [trading, setTrading] = useState(false)\n  const { toastInfo, toastSuccess, toastError } = useToast()\n\n  const { currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const {\n    onUpdateCollateralValue,\n    onUpdatePrepaidInterest,\n    newDisplayCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n    newCollateralRatio,\n    newPrepaidInterestCoverage,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n\n  const [actionData, setActionData] = useState([\n    {\n      accountType: AccountType.MyWallet,\n      tokenType: currentPosition.mintTokenInfo.symbol,\n      transferVal: 0,\n      id: '1fee1a14-b8b3-4b73-b2be-1817a6d228ec',\n      tokenSelectDisabled: false,\n      list: [...accountCategoryList],\n      token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n      decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    },\n    {\n      accountType: AccountType.Standard,\n      tokenType: currentPosition.mintTokenInfo.symbol,\n      transferVal: 0,\n      id: '25897dcf-e843-4630-a5e1-309dc10cb1e5',\n      tokenSelectDisabled: true,\n      list: [...accountCategoryList],\n      token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n      decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    },\n  ])\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {})\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const tokenList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(tokens).map((key) => {\n        return {\n          token: key,\n          decimals: tokens[key].decimals,\n          address: tokens[key].address,\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={tokens[key].logo} symbol={key} />,\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const transfer = useTransfer()\n  const { expanded, handleChange } = usePanel()\n  const { active, chainId, account } = useWeb3React()\n  const posContract = usePosContract(active, signer)\n\n  const onSubmit = useCallback(async () => {\n    if (!posContract) return\n\n    setTrading(true)\n\n    let data = null\n    let isTransfer = false\n    const transferTransactions = []\n    const [transferData, recviceTarget] = actionData\n    const { tokenType: tokenSymbol, accountType, transferVal } = transferData\n    const transferDecimals = getTokenDecimals(tokenSymbol)\n    const transferAmount = toSmallUnits(TokenUtils.formatTokenAmount(transferVal, transferDecimals), transferDecimals)\n    const tokenAddress = chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address\n    if (transferAmount.isZero()) {\n      return\n    }\n\n    const handleResult = async (txInfo) => {\n      const result = await txInfo.wait()\n      if (result) {\n        toastSuccess(\n          ToastTitle.success,\n          <TransactionSuccessInfo content=\"The transaction has been successfully.\" txHash={result.hash} />,\n        )\n        setTrading(false)\n        setGDisStatus(true)\n        await handleUpdatePosition()\n      }\n    }\n\n    const handleError = ({ message, reason }) => {\n      toastError('Failed', `${reason || message}`)\n      setTrading(false)\n    }\n\n    const handleAllSettled = (results) => {\n      console.log('results :>> ', results);\n      setTrading(false)\n      results.forEach((result) => {\n        if (result.status === 'rejected') {\n          toastError(ToastTitle.failed, result.reason?.reason || result.reason?.message)\n        } else {\n          toastSuccess(ToastTitle.success, <TransactionSuccessInfo content=\"The transaction has been successfully.\" txHash={result.value.transactionHash} />)\n          setRefresh((state) => !state)\n        }\n      })\n    }\n\n    const submitTransaction = async (_data: string) => {\n      try {\n        const txInfo = await posContract.delegateCall(ActionUser.address[chainId], _data)\n        if (txInfo) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n          )\n          await handleResult(txInfo)\n        }\n      } catch (error) {\n        handleError(error as any)\n      }\n    }\n\n    if (accountType === AccountType.MyWallet) {\n      if (recviceTarget.accountType === AccountType.Settlement) {\n        data = ActionUserInterface.encodeFunctionData('addGuarantee', [transferAmount, false])\n      } else if (recviceTarget.accountType === AccountType.Standard) {\n        transferTransactions.push(transfer(account, tokenAddress, currentPosition.positionAddress, transferAmount))\n        isTransfer = true\n      }\n    } else if (accountType === AccountType.Standard) {\n      if (recviceTarget.accountType === AccountType.MyWallet) {\n        data = ActionUserInterface.encodeFunctionData('withdrawAsset', [tokenAddress, account, transferAmount])\n      } else if (recviceTarget.accountType === AccountType.Settlement) {\n        data = ActionUserInterface.encodeFunctionData('addGuarantee', [transferAmount, true])\n      }\n    } else if (accountType === AccountType.Settlement) {\n      if (recviceTarget.accountType === AccountType.MyWallet) {\n        data = ActionUserInterface.encodeFunctionData('moveGuarantee', [account, transferAmount])\n      } else if (recviceTarget.accountType === AccountType.Standard) {\n        data = ActionUserInterface.encodeFunctionData('moveGuarantee', [currentPosition.positionAddress, transferAmount])\n      }\n    }\n\n    if (!isTransfer && data) {\n      await submitTransaction(data)\n    } else {\n      Promise.allSettled(transferTransactions)\n        .then(handleAllSettled)\n        .catch((e) => {\n          console.log('e :>> ', e);\n          toastError(ToastTitle.failed, e.reason)\n          setTrading(false)\n        })\n    }\n  }, [\n    posContract,\n    actionData,\n    chainId,\n    toastSuccess,\n    handleUpdatePosition,\n    toastError,\n    setRefresh,\n    toastInfo,\n    transfer,\n    account,\n    currentPosition.positionAddress,\n  ])\n\n  const onChangeVal = useCallback(({ target }, record) => {\n    const { value } = target\n    setActionData((state) => {\n      const data = state.map((item) => ({ ...item, transferVal: value }))\n      return data\n    })\n  }, [])\n\n  useEffect(() => {\n    const [send, recive] = actionData\n    switch (send.accountType) {\n      case AccountType.MyWallet:\n        if (recive.accountType === AccountType.Settlement) {\n          onUpdatePrepaidInterest(send.transferVal)\n        } else {\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: Number(send.transferVal),\n          })\n        }\n        break\n      case AccountType.Standard:\n        if (recive.accountType === AccountType.MyWallet) {\n          const value = Number(send.transferVal)\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: value ? Number(`-${value}`) : value,\n          })\n        } else {\n          const value = Number(send.transferVal)\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: value ? Number(`-${value}`) : value,\n          })\n          onUpdatePrepaidInterest(send.transferVal)\n        }\n        break\n      case AccountType.Settlement:\n        if (recive.accountType === AccountType.MyWallet) {\n          const value = Number(send.transferVal)\n          onUpdatePrepaidInterest(value ? Number(`-${value}`) : value)\n        } else {\n          const value = Number(send.transferVal)\n          onUpdatePrepaidInterest(value ? Number(`-${value}`) : value)\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: Number(send.transferVal),\n          })\n        }\n        break\n      default:\n        console.log(1)\n    }\n  }, [actionData, onUpdateCollateralValue, onUpdatePrepaidInterest])\n\n  const onChangeAccount = useCallback(\n    (val, record, i) => {\n      setActionData((state) => {\n        const data = state.map((item) => ({\n          ...item,\n          accountType: item.id === record.id ? val : item.accountType,\n          tokenType:\n            val === AccountType.Settlement ? currentPosition.mintTokenInfo.settlementCurrency.symbol : item.tokenType,\n          transferVal: Number(),\n        }))\n        if (i === 0) {\n          data[1].list = accountCategoryList.filter((it) => it.type !== data[0].accountType)\n          data[0].tokenSelectDisabled = data[0].accountType === AccountType.Settlement\n        }\n        return data\n      })\n    },\n    [currentPosition.mintTokenInfo.settlementCurrency.symbol],\n  )\n\n  const onChangeToken = useCallback(\n    (val, __index) => {\n      setActionData((state) => {\n        const nextState = state.map((it) => ({ ...it, tokenType: val, transferVal: Number() }))\n\n        if (val !== currentPosition.mintTokenInfo.settlementCurrency.symbol) {\n          nextState[1].list = nextState[1].list.filter((it) => it.type !== AccountType.Settlement)\n        } else {\n          const settlement = accountCategoryList.find((it) => it.type === AccountType.Settlement)\n          const _index = nextState[1].list.findIndex((it) => it.type === AccountType.Settlement)\n          if (!(_index > -1)) {\n            nextState[1].list.push(settlement)\n          }\n        }\n        return nextState\n      })\n    },\n    [currentPosition.mintTokenInfo.settlementCurrency.symbol],\n  )\n\n  const onMax = useCallback(\n    (record) => {\n      setActionData((state) => {\n        const data = [...state]\n        /* \n          1. wallet send to collateral //// add collateral（transfer）   Total assets increase, prepaid interest remains unchanged, margin ratio increases, and the number of days covered by prepaid interest remains the same.\n          2. wallet send to prepaid interest       // addGuarantee｜    Total assets increase, prepaid interest increases, margin ratio increases, and the number of days covered by prepaid interest remains the same.\n          3. collateral send to wallet //           withdrawAsset｜     Total assets decrease, prepaid interest remains unchanged, margin ratio decreases, and the number of days covered by prepaid interest remains the same.\n          4. collateral send to prepaid interest // addGuarantee |      Total assets remain unchanged, prepaid interest increases, margin ratio remains unchanged, and the number of days covered by prepaid interest increases.\n          5. prepaid interest send to wallet /// moveGuarantee |        Total assets decrease, prepaid interest decreases, margin ratio decreases, and the number of days covered by prepaid interest decreases.\n          6. prepaid interest send to collateral /// add collateral ||  Total assets remain unchanged, prepaid interest decreases, margin ratio remains unchanged, and the number of days covered by prepaid interest decreases.\n          */\n        const { settlementCurrency } = currentPosition.mintTokenInfo\n        const { shortBalanceValue, estimatedDailyDebt, collateralValue } = currentPosition.positionStatus\n        const tokenTypeDecimals = getTokenDecimals(record.tokenType)\n        if (record.accountType === AccountType.MyWallet) {\n          const balance = walletTokenBalance[record.tokenType] || 0\n          data[0].transferVal = balance\n        } else if (record.accountType === AccountType.Standard) {\n          const collateralAssets = avatarAssetList[record.tokenType] || 0\n          const maxActionTotalAssets = Number(\n            TokenUtils.formatTokenAmount(1.2 * Number(toLargeUnits(shortBalanceValue, settlementCurrency.decimals)), 0),\n          )\n          if (collateralAssets > 0) {\n            if (maxActionTotalAssets === 0) {\n              data[0].transferVal = collateralAssets\n              data[1].transferVal = collateralAssets\n              return data\n            }\n            const maxCollateralTransfer = maxActionTotalAssets - collateralIndex.prepaidInterest\n            if (data[1].accountType === AccountType.Settlement) {\n              // If the calculated maximum value exceeds the asset value, use the asset value instead.\n              if (maxCollateralTransfer > collateralAssets) {\n                data[0].transferVal = collateralAssets\n                data[1].transferVal = collateralAssets\n              } else {\n                data[0].transferVal = maxCollateralTransfer\n                data[1].transferVal = maxCollateralTransfer\n              }\n            }\n            if (data[1].accountType === AccountType.MyWallet) {\n              const amountOutPrice = getSwapQuote(\n                chainId,\n                record.tokenType,\n                settlementCurrency.symbol,\n                toSmallUnits(collateralAssets, tokenTypeDecimals),\n                tokenPools,\n              )\n              const otherTokenWbtc = collateralValue.sub(amountOutPrice)\n              const actionCurrentMaxValue =\n                maxCollateralTransfer - Number(toLargeUnits(otherTokenWbtc, settlementCurrency.decimals))\n\n              const amountInCurrentMaxValue = getSwapQuote(\n                chainId,\n                settlementCurrency.symbol,\n                record.tokenType,\n                toSmallUnits(\n                  TokenUtils.formatTokenAmount(actionCurrentMaxValue, settlementCurrency.decimals),\n                  settlementCurrency.decimals,\n                ),\n                tokenPools,\n              )\n              // Calculate the maximum operable value for the current cryptocurrency.\n              const maxTransterCurrentToken = toLargeUnits(amountInCurrentMaxValue, tokenTypeDecimals, true) as number\n              // If the calculated maximum value exceeds the asset value, use the asset value.\n              if (maxTransterCurrentToken > collateralAssets) {\n                data[0].transferVal = collateralAssets\n                data[1].transferVal = collateralAssets\n              } else if (maxTransterCurrentToken > 0) {\n                data[0].transferVal = Math.floor(collateralAssets - maxTransterCurrentToken)\n                data[1].transferVal = Math.floor(collateralAssets - maxTransterCurrentToken)\n              } else {\n                data[0].transferVal = collateralAssets\n                data[1].transferVal = collateralAssets\n              }\n            }\n          }\n        } else if (record.accountType === AccountType.Settlement) {\n          if (data[1].accountType === AccountType.MyWallet) {\n            const maxPrepaidInterest =\n              20 * Number(toLargeUnits(estimatedDailyDebt.toNumber(), settlementCurrency.decimals))\n            const maxActionPrepaidInterest = collateralIndex.prepaidInterest - maxPrepaidInterest\n\n            if (maxActionPrepaidInterest > 0) {\n              data[0].transferVal = Number(\n                TokenUtils.formatTokenAmount(maxActionPrepaidInterest, settlementCurrency.decimals),\n              )\n            }\n          }\n          if (data[1].accountType === AccountType.Standard) {\n            const maxPrepaidInterest =\n              20 * Number(toLargeUnits(estimatedDailyDebt.toNumber(), settlementCurrency.decimals))\n            const maxActionPrepaidInterest = collateralIndex.prepaidInterest - maxPrepaidInterest\n            if (maxActionPrepaidInterest > 0) {\n              data[0].transferVal = maxActionPrepaidInterest\n            }\n          }\n        }\n        return data\n      })\n    },\n    [\n      avatarAssetList,\n      chainId,\n      collateralIndex,\n      currentPosition.mintTokenInfo,\n      currentPosition.positionStatus,\n      tokenPools,\n      walletTokenBalance,\n    ],\n  )\n\n  useEffect(() => {\n    setActionData((state) => {\n      return [\n        state[0],\n        {\n          ...state[1],\n          list: accountCategoryList.filter((it) => it.type !== state[0].accountType),\n        },\n      ]\n    })\n  }, [])\n\n  useEffect(() => {\n    if (trading) {\n      setGDisStatus(true)\n      return\n    }\n    const [left] = actionData\n    const { decimals } = left\n    if (!left || !decimals) return\n    let leftBalance = 0\n    const { transferVal } = left\n    const transferAmout = toSmallUnits(\n      TokenUtils.formatTokenAmount(transferVal, commonTokens[valueToKeyMap[left.tokenType]].decimals),\n      commonTokens[valueToKeyMap[left.tokenType]].decimals,\n    )\n    if (transferAmout.isZero()) {\n      setGDisStatus(true)\n      return\n    }\n    if (left.accountType === AccountType.MyWallet) {\n      leftBalance = walletTokenBalance[left.tokenType] || 0\n    }\n    if (left.accountType === AccountType.Settlement || left.accountType === AccountType.Standard) {\n      if (left.accountType === AccountType.Settlement) {\n        // if ()\n        const { interestGuaranteed } = currentPosition.positionStatus\n        if (transferAmout.gt(interestGuaranteed)) {\n          setGDisStatus(true)\n          return\n        }\n      }\n      if (left.accountType === AccountType.Standard) {\n        const val = avatarAssetList[left.tokenType] || 0\n        if (transferVal > val) {\n          setGDisStatus(true)\n          return\n        }\n      }\n      if (newCollateralRatio < 120 || newPrepaidInterestCoverage < 20) {\n        setGDisStatus(true)\n      } else {\n        setGDisStatus(false)\n      }\n      return\n    }\n\n    if (left.transferVal <= 0 || left.transferVal > leftBalance || trading) {\n      setGDisStatus(true)\n    } else {\n      setGDisStatus(false)\n    }\n  }, [\n    actionData,\n    avatarAssetList,\n    currentPosition.positionStatus,\n    newCollateralRatio,\n    newPrepaidInterestCoverage,\n    trading,\n    walletTokenBalance,\n  ])\n\n  return (\n    <Wrapper>\n      <Title>General Transfer</Title>\n      <Accordion id=\"panel15\" expanded={expanded === 'panel15'} onChange={handleChange('panel15')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Freestyle Transfer</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {actionData.map((item, index) => {\n            let avatarAssetBalance = (avatarAssetList && avatarAssetList[item.tokenType]) || 0\n            let walletAssetBalance = (walletTokenBalance && walletTokenBalance[item.tokenType]) || 0\n            if (String(avatarAssetBalance).includes('.')) {\n              avatarAssetBalance = TokenUtils.formatFourDecimals(avatarAssetBalance)\n            }\n\n            if (String(walletAssetBalance).includes('.')) {\n              walletAssetBalance = TokenUtils.formatFourDecimals(walletAssetBalance)\n            }\n\n            return (\n              <div key={item.id}>\n                <MethodsWrap>\n                  <div className=\"balance_info\">\n                    <span className=\"label\">Balance: </span>\n                    {item.accountType === AccountType.Standard && (\n                      <span>\n                        {avatarAssetBalance} {item.tokenType}\n                      </span>\n                    )}\n                    {item.accountType === AccountType.MyWallet && (\n                      <span>\n                        {walletAssetBalance} {item.tokenType}\n                      </span>\n                    )}\n                    {item.accountType === AccountType.Settlement && (\n                      <span>{TokenUtils.formatFourDecimals(collateralIndex.prepaidInterest)} {currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                    )}\n                  </div>\n                  <div className=\"content\">\n                    <Select\n                      options={item.list}\n                      onChange={(val) => {\n                        onChangeAccount(val, item, index)\n                      }}\n                      selectValue={item.accountType}\n                    />\n                    <Select\n                      options={tokenList}\n                      onChange={(val) => {\n                        onChangeToken(val, index)\n                      }}\n                      selectValue={item.tokenType}\n                      selectDisabled={index === 1 ? true : item.tokenSelectDisabled}\n                    />\n                    <Input\n                      value={item.transferVal}\n                      type=\"number\"\n                      onInput={(e) => {\n                        onChangeVal(e, item)\n                      }}\n                      disabled={index === 1}\n                    />\n                  </div>\n\n                  <div hidden={index === 1} className=\"func\">\n                    <span\n                      onClick={() => {\n                        onMax(item)\n                      }}\n                      onKeyUp={() => null}\n                      tabIndex={0}\n                      role=\"button\"\n                    >\n                      Max\n                    </span>\n                  </div>\n                </MethodsWrap>\n\n                {index === 0 ? (\n                  <div style={{ display: 'flex', alignItems: 'center', height: 30, justifyContent: 'center' }}>\n                    <ExchangeArrow\n                      onClick={() => {\n                        setActionData((state) => {\n                          const list1 = state[0]\n                          const list2 = state[1]\n                          const data = state.reverse()\n                          return data.map((it, i) => ({\n                            ...it,\n                            list:\n                              i === 0\n                                ? list1.list\n                                : accountCategoryList.filter((ele) => ele.type !== list2.accountType),\n                            tokenSelectDisabled: i === 0 ? list1.tokenSelectDisabled : list2.tokenSelectDisabled,\n                          }))\n                        })\n                      }}\n                      style={{ fill: 'none', transform: 'rotate(90deg)', cursor: 'pointer', width: 22 }}\n                    />\n                  </div>\n                ) : null}\n              </div>\n            )\n          })}\n          <DataWrapper\n            data={[\n              [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n              [\n                DataIndexName.PrepaidInterestCoverage,\n                collateralIndex.displayCoverage,\n                newDisplayPrepaidInterestCoverage,\n              ],\n            ]}\n          />\n          {approveStatus ? (\n            <Approve style={{ boxShadow: 'none' }} disabled={gDisStatus} onClick={onSubmit}>\n              Submit\n            </Approve>\n          ) : (\n            <Approve\n              style={{ boxShadow: 'none' }}\n              disabled={approveBtnStatus}\n              onClick={() => {\n                onApprove((state) => {\n                  setApproveBtnStatus(state)\n                })\n              }}\n            >\n              Approve\n            </Approve>\n          )}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { MutableRefObject, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useWeb3React } from 'web3-react-core'\nimport { Link, withRouter } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport { Grid } from '@mui/material'\nimport Slide from 'components/Slide'\nimport Select from 'components/Select'\nimport Card from 'components/Card'\nimport { ArrowLine, Fbtc20Icon } from 'components/uikit'\nimport { FlexWrap, ScrollWrapper } from 'components/CommonComponent'\nimport CopyToClipboard from 'components/uikit/components/WalletModal/CopyToClipboard'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport useToast from 'hooks/useToast'\nimport Assets from 'assets'\nimport SubTitle from 'components/SubTitle'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { isSupportedChainId } from 'utils/web3React'\nimport { ToastTitle } from 'config/constants/contants'\nimport { TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { LiquidationThresholdValue } from '../../../config/constants/thresholdValue'\nimport Title from './Title'\nimport BeforeMintAction from './BeforeMintAction'\nimport WithdrawCollateral from './WithdrawCollateral'\nimport ImproveGuaranteeDays from './ImproveGuaranteeDays'\nimport ImproveCollateralRatio from './ImproveCollateralRatio'\nimport TradingThroughAvatar from './TradingThroughAvatar'\nimport GeneralTransfer from './GeneralTransfer'\nimport usePanel from '../../../hooks/usePanel'\n\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 18px;\n  padding-right: 44px;\n  overflow: auto;\n\n  & > .MuiGrid-root {\n    min-width: 1024px;\n  }\n\n  .account_panel {\n    height: calc(100vh - 189px);\n    padding-bottom: 100px;\n    overflow: auto;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .asset_info {\n    padding: 0;\n    margin-top: 26px;\n  }\n`\nconst CardWrap = styled(Card)`\n  position: relative;\n  padding: 23px 0;\n  display: flex;\n  margin-bottom: 20px;\n\n  .avatar_info {\n    .avatar {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-size: 12px;\n      line-height: 17px;\n      color: #000000;\n\n      & + svg {\n        margin-left: 10px;\n      }\n    }\n  }\n\n  .token_item {\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 0;\n\n    svg {\n      margin-right: 10px;\n\n      & + span {\n        margin-top: 5px;\n      }\n    }\n\n    .balance {\n      font-family: PingFangSC-Regular, sans-serif;\n\n      span:first-of-type {\n        font-size: 14px;\n        line-height: 20px;\n      }\n\n      span:last-of-type {\n        font-size: 12px;\n        line-height: 17px;\n        color: #747879;\n      }\n    }\n  }\n`\nconst TipPanel = styled('div')`\n  width: 50%;\n  padding: 0 30px 0 40px;\n  display: flex;\n  justify-content: space-between;\n\n  font-family: PingFangSC-Semibold, sans-serif;\n\n  > div {\n    width: calc(100% - 50px);\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 0.2px;\n    height: 70%;\n    background-color: #2da3ff;\n  }\n\n  h2 {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-weight: 550;\n    font-size: 1rem;\n    line-height: 22px;\n    color: #000000;\n  }\n\n  .num {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-weight: 550;\n    font-size: 50px;\n    line-height: 1;\n    color: #6ed6f3;\n    display: flex;\n    align-items: flex-end;\n    margin-bottom: 20px;\n    margin-top: 15px;\n    width: 100%;\n\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      display: block;\n      max-width: 80%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    sub {\n      margin-bottom: 5px;\n      font-size: 20px;\n      font-weight: 500;\n    }\n  }\n\n  .tip {\n    font-size: 12px;\n    line-height: 17px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n\n  .num.guarantee {\n    color: #efd71e;\n  }\n`\nconst TipWrap = styled(CardWrap)`\n  padding: 23px 0 !important;\n`\n\nconst CollateralInfoWrap = styled('div')`\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.4);\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  margin-bottom: 20px;\n  .m_title {\n    font-size: 22px;\n    line-height: 31px;\n    font-weight: 500;\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-bottom: 13px;\n  }\n  .list {\n    background: rgba(42, 161, 255, 0.07);\n    border-radius: 8px;\n    padding: 16px 16px 0;\n    margin-bottom: 18px;\n  }\n  .item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    svg {\n      margin-right: 10px;\n    }\n    .item_title {\n      font-size: 18px;\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n      line-height: 25px;\n      display: flex;\n      align-items: center;\n      margin-bottom: 20px;\n      img {\n        width: 24px;\n        margin-right: 10px;\n      }\n    }\n    .icon_symbol {\n      display: flex;\n      align-items: center;\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 500;\n      font-size: 14px;\n    }\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-size: 14px;\n    }\n    &.currency {\n      padding: 22px 0;\n      border-top: 0.5px solid rgba(0, 0, 0, 0.13);\n    }\n    &.item_head {\n      padding-bottom: 14px;\n      span {\n        font-family: PingFangSC-Medium, sans-serif;\n        font-weight: 500;\n        font-size: 12px;\n        line-height: 17px;\n        color: rgba(0, 0, 0, 0.6);\n      }\n    }\n    .balance span {\n      line-height: 20px;\n      &:last-of-type {\n        opacity: 0.5;\n      }\n    }\n  }\n  .avatar .currency {\n    padding: 15px 0;\n  }\n  .avatar_address {\n    display: flex;\n    align-items: center;\n    padding-left: 16px;\n    line-height: 17px;\n    * {\n      font-size: 12px;\n      font-weight: normal !important;\n      color: #000 !important;\n      font-family: PingFangSC-Regular, sans-serif !important;\n    }\n  }\n\n  .asset_list_title {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    font-size: 22px;\n    line-height: 22px;\n    color: #000000;\n    margin-bottom: 22px;\n  }\n  .outstandingDebt {\n    span {\n      font-size: 14px;\n    }\n    div {\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 500;\n      margin-bottom: 5px;\n      svg {\n        margin-right: 10px;\n      }\n    }\n    span:last-of-type {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-weight: 400;\n    }\n  }\n`\nconst getValueColor = (value: number) =>\n  value * 1 >= 400 ? 'rgb(29, 202, 218)' : value * 1 > 200 ? 'rgb(255, 204, 4)' : 'rgb(255, 99, 8)'\n\nfunction Manage() {\n  const oBox: MutableRefObject<any> = React.useRef()\n  const { expanded } = usePanel()\n  const [approveStatus, setApproveStatus] = useState(false)\n\n  const { currentPosition, currentPositionTokenInfo, currentMintToken } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n  const { account, chainId } = useWeb3React()\n  const { toastSuccess, toastError, toastWarning } = useToast()\n  // change manager\n  const onChange = useCallback(\n    (val) => {\n      handleChangeCurrentPosition(val)\n    },\n    [handleChangeCurrentPosition],\n  )\n  const { handleApprove } = useApprove(account, currentPosition?.mintTokenInfo.settlementCurrency.address)\n  const { onCheckApprove } = useCheckApprove()\n  const checkApprove = useCallback(async () => {\n    if (currentPosition && currentPosition.isEnable) {\n      const txInfo = await onCheckApprove(\n        account,\n        currentPosition.mintTokenInfo.settlementCurrency.address,\n        currentPosition.positionAddress,\n      )\n      if (txInfo && txInfo._hex > 0) {\n        setApproveStatus(true)\n      } else {\n        setApproveStatus(false)\n      }\n      return txInfo\n    }\n    return 0\n  }, [account, currentPosition, onCheckApprove])\n\n  const onApprove = useCallback(\n    async (callback?) => {\n      if (currentPosition && currentPosition.isEnable) {\n        try {\n          if (callback) {\n            callback(true)\n          }\n          const info = await handleApprove(currentPosition.positionAddress)\n          if (info.hash) {\n            const result = await info.wait()\n            if (result) {\n              checkApprove().then((approveTransactionInfo) => {\n                if (callback) {\n                  callback(false)\n                }\n                if (approveTransactionInfo._hex > 0) {\n                  setApproveStatus(true)\n                  toastSuccess(\n                    ToastTitle.success,\n                    <TransactionSuccessInfo txHash={result.transactionHash} content=\"The approve has been successfully\" />,\n                  )\n                } else {\n                  setApproveStatus(false)\n                  toastWarning('Approve Warning', 'Approval is zero. You will not be able to perform any transactions.')\n                }\n              })\n            }\n          }\n        } catch (err: any) {\n          if (callback) {\n            callback(false)\n          }\n          toastError(ToastTitle.failed, `${err.reason}`)\n        }\n      }\n    },\n    [currentPosition, handleApprove, checkApprove, toastSuccess, toastWarning, toastError],\n  )\n\n  const collateralRatio = useMemo(() => {\n    if (currentPosition && currentPosition.collateralRatio) {\n      if (currentPosition.collateralRatio === Number.POSITIVE_INFINITY) {\n        return '+∞'\n      }\n      return TokenUtils.formatTokenAmount(currentPosition.collateralRatio, 2)\n    }\n    return '0'\n  }, [currentPosition])\n  const prepaidInterestCoverage = useMemo(() => {\n    if (currentPosition && currentPosition.prepaidInterestCoverage) {\n      if (currentPosition.prepaidInterestCoverage === Number.POSITIVE_INFINITY) {\n        return '+∞'\n      }\n      return TokenUtils.formatTokenAmount(currentPosition.prepaidInterestCoverage, 0)\n    }\n    return '0'\n  }, [currentPosition])\n  const prepaidInterest = useMemo(() => {\n    if (currentPosition) {\n      const pi = toLargeUnits(\n        currentPosition.positionStatus.interestGuaranteed\n          .sub(currentPosition.positionStatus.obligation)\n          .sub(currentPosition.positionStatus.epochDebt)\n          .sub(currentPosition.positionStatus.estimatedObligationToday),\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n      return TokenUtils.formatTokenAmount(Number(pi), 4)\n    }\n    return 0\n  }, [currentPosition])\n\n  useEffect(() => {\n    checkApprove()\n    if (expanded && Number(expanded) !== -1) {\n      if (oBox && expanded !== 'panel1' && expanded !== 'panel2') {\n        setTimeout(() => {\n          const panel = document.querySelector(`#${expanded}`)\n\n          if (panel) {\n            panel.scrollIntoView()\n          }\n        }, 500)\n      }\n    }\n  }, [checkApprove, currentPosition, expanded])\n\n  const allowedAssets = useMemo(() => {\n    if (!currentPositionTokenInfo) {\n      return null\n    }\n    const currentTokenPrice = currentPositionTokenInfo.tokenPrice\n    const currentAllowedTokens = currentPositionTokenInfo.allowedTokens\n    const currentAllowedTokenBalance = currentPositionTokenInfo.allowedTokens?.balances\n    const usdt = currentPositionTokenInfo.WBTCToUSD\n    return Object.values(currentAllowedTokens.tokens).map((tokenInfo) => (\n      <div className=\"item currency\" key={tokenInfo.symbol}>\n        <div className=\"icon_symbol\">\n          <Logo\n            token={tokenInfo.logo}\n            symbol={tokenInfo.symbol}\n            imgprops={{\n              style: {\n                marginRight: 10,\n              },\n            }}\n          />\n          {tokenInfo.symbol}\n        </div>\n        <FlexWrap className=\"balance\" style={{ flexDirection: 'column', alignItems: 'flex-end' }}>\n          <span>\n            {(currentAllowedTokenBalance &&\n              toLargeUnits(currentAllowedTokenBalance[tokenInfo.symbol], tokenInfo.decimals)) ||\n              0}\n          </span>\n          <span>\n            ≈{' '}\n            {(currentAllowedTokenBalance &&\n              TokenUtils.formatCurrencyTwoDecimals(\n                (currentAllowedTokenBalance[tokenInfo.symbol].toNumber() *\n                  currentTokenPrice[tokenInfo.symbol]?.price.toNumber() *\n                  usdt) /\n                  10 ** 6,\n              )) ||\n              0}\n          </span>\n        </FlexWrap>\n      </div>\n    ))\n  }, [currentPositionTokenInfo])\n\n  const mintTokens = useMemo(() => {\n    if (isSupportedChainId(chainId)) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      return Object.keys(mintTokenChainConfigs[chainId as SupportedChainId].tokens).map((key) => {\n        return {\n          token: _tokens[key as MintTokenKey].symbol,\n          address: _tokens[key as MintTokenKey].address,\n          decimals: _tokens[key as MintTokenKey].decimals,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={_tokens[key as MintTokenKey].logo}\n              symbol={_tokens[key as MintTokenKey].symbol}\n            />\n          ),\n        }\n      })\n    }\n    return []\n  }, [chainId])\n\n  return (\n    <>\n      <Title style={{ marginBottom: 4 }}>Collateral Management</Title>\n      <SubTitle>\n        Make sure the collateral ratio is higher than the Liquidation Ratio, and the Prepaid Interest Coverage is higher\n        than the Liquidation Threshold.\n      </SubTitle>\n      <Select isGroup={false} options={mintTokens} selectValue={currentMintToken} onChange={onChange} />\n      <Box>\n        {!currentPosition?.isEnable ? (\n          <Link to=\"/collateral\" style={{ color: '#2AA1FF' }}>\n            Please enable the collateral first\n            <ArrowLine />{' '}\n          </Link>\n        ) : (\n          <Grid container spacing={2.5}>\n            <Grid item xs={8}>\n              <ScrollWrapper ref={oBox}>\n                <TipWrap>\n                  <TipPanel>\n                    <div title={`Collateral Ratio: ${collateralRatio}`}>\n                      <h2>Collateral Ratio</h2>\n                      {!currentPosition.collateralRatio ? (\n                        <p className=\"tip\" style={{ lineHeight: '85px' }}>\n                          Add collateral before mint\n                        </p>\n                      ) : (\n                        <p className=\"num\">\n                          {currentPosition.collateralRatio ? (\n                            <>\n                              <span\n                                style={{\n                                  color: getValueColor(currentPosition?.collateralRatio),\n                                }}\n                              >\n                                {collateralRatio}\n                              </span>\n                              {currentPosition?.collateralRatio === Number.POSITIVE_INFINITY ? null : (\n                                <sub\n                                  style={{\n                                    color: getValueColor(currentPosition?.collateralRatio),\n                                  }}\n                                >\n                                  %\n                                </sub>\n                              )}\n                            </>\n                          ) : (\n                            <span\n                              style={{\n                                color: 'rgb(255, 99, 8)',\n                              }}\n                            >\n                              0\n                            </span>\n                          )}\n                        </p>\n                      )}\n                      <p className=\"tip\">Liquidation Ratio：{LiquidationThresholdValue.ratio}%</p>\n                    </div>\n                    <Slide\n                      style={{ height: '100%' }}\n                      value={\n                        currentPosition.isEnable && collateralRatio !== '0'\n                          ? (currentPosition?.collateralRatio - 100) / 5\n                          : 0\n                      }\n                    />\n                  </TipPanel>\n                  <TipPanel>\n                    <div title={`Prepaid Interest Coverage: ${prepaidInterestCoverage} days`}>\n                      <h2>Prepaid Interest Coverage</h2>\n                      {!currentPosition.prepaidInterestCoverage ? (\n                        <p className=\"tip\" style={{ lineHeight: '85px' }}>\n                          Add collateral before mint\n                        </p>\n                      ) : (\n                        <p className=\"num guarantee\">\n                          {currentPosition.prepaidInterestCoverage ? (\n                            <>\n                              <sub\n                                style={{\n                                  color: getValueColor(currentPosition.prepaidInterestCoverage),\n                                }}\n                              >\n                                ≈\n                              </sub>\n                              <span\n                                style={{\n                                  color: getValueColor(currentPosition.prepaidInterestCoverage),\n                                }}\n                              >\n                                {prepaidInterestCoverage}\n                              </span>\n                              {currentPosition.prepaidInterestCoverage === Number.POSITIVE_INFINITY ? null : (\n                                <sub\n                                  style={{\n                                    color: getValueColor(currentPosition.prepaidInterestCoverage),\n                                  }}\n                                >\n                                  days\n                                </sub>\n                              )}\n                            </>\n                          ) : (\n                            <span\n                              style={{\n                                color: 'rgb(255, 99, 8)',\n                              }}\n                            >\n                              0\n                            </span>\n                          )}\n                        </p>\n                      )}\n                      <p className=\"tip\">Liquidation Threshold: {LiquidationThresholdValue.days} days</p>\n                      {/*   <p className='tip'>Min. Mint Guarantee days: {Constants.minMintGDays} days</p>\n                       */}{' '}\n                    </div>\n                    <Slide style={{ height: '100%' }} value={currentPosition.prepaidInterestCoverage / 5} />\n                  </TipPanel>\n                </TipWrap>\n                {/* collateral info */}\n                <BeforeMintAction onApprove={onApprove} approveStatus={approveStatus} />\n                <ImproveGuaranteeDays onApprove={onApprove} approveStatus={approveStatus} />\n                <ImproveCollateralRatio onApprove={onApprove} approveStatus={approveStatus} />\n                <TradingThroughAvatar onApprove={onApprove} approveStatus={approveStatus} />\n                <WithdrawCollateral onApprove={onApprove} approveStatus={approveStatus} />\n                <GeneralTransfer onApprove={onApprove} approveStatus={approveStatus} />\n                {/*\n                <ImproveCollateralRatio/>\n                <WithdrawCollateral managerInfo={managerData} guaranteeBalance={guaranteeBalance}/>\n                */}\n              </ScrollWrapper>\n            </Grid>\n            <Grid item xs={4} className=\"account_panel\">\n              <CollateralInfoWrap>\n                <h3 className=\"m_title\">Total Collateral</h3>\n                <div className=\"list guarantee\">\n                  <div className=\"item\">\n                    <h4 className=\"item_title\">\n                      <img src={Assets.PrepaidInterest} alt=\"\" />\n                      Prepaid Interest\n                    </h4>\n                  </div>\n                  <div className=\"item currency\">\n                    <span className=\"icon_symbol\">\n                      <Logo\n                        token={currentPosition?.mintTokenInfo.settlementCurrency.logo}\n                        symbol={currentPosition?.mintTokenInfo.settlementCurrency.symbol}\n                      />\n                      <span\n                        style={{\n                          marginLeft: '10px',\n                        }}\n                      >\n                        {currentPosition?.mintTokenInfo.settlementCurrency.symbol}\n                      </span>\n                    </span>\n                    <span>{prepaidInterest}</span>\n                  </div>\n                </div>\n                <div className=\"list avatar\" style={{ marginBottom: 12 }}>\n                  <div className=\"item\">\n                    <h4 className=\"item_title\">\n                      <img src={Assets.Collateral} alt=\"\" />\n                      Collateral\n                    </h4>\n                  </div>\n                  <div className=\"item item_head\">\n                    <span>Ticker</span>\n                    <span>Holdings - In Collateral</span>\n                  </div>\n                  {allowedAssets}\n                </div>\n                <div className=\"avatar_address\">\n                  <span>Collateral Account Address: &nbsp;&nbsp;</span>{' '}\n                  <CopyToClipboard toCopy={currentPosition?.positionAddress || ''}>\n                    {currentPosition\n                      ? `${currentPosition?.positionAddress.slice(0, 6)}...${currentPosition?.positionAddress.slice(\n                          -6,\n                        )}`\n                      : ''}\n                  </CopyToClipboard>\n                </div>\n              </CollateralInfoWrap>\n              <CollateralInfoWrap>\n                <h3 className=\"asset_list_title\">My Outstanding Debt</h3>\n                <FlexWrap className=\"outstandingDebt\" style={{ alignItems: 'center', justifyContent: 'space-between' }}>\n                  <FlexWrap style={{ alignItems: 'center' }}>\n                    <Fbtc20Icon className=\"icon\" />\n                    {currentPosition?.mintTokenInfo.symbol}\n                  </FlexWrap>\n                  <span>\n                    {TokenUtils.formatFourDecimals(\n                      Number(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)),\n                    )}\n                  </span>\n                </FlexWrap>\n              </CollateralInfoWrap>\n              <CollateralInfoWrap style={{ padding: 30 }}>\n                <img src={Assets.CollateralManage} style={{ width: '100%' }} alt=\"\" />\n              </CollateralInfoWrap>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default withRouter(Manage)\n","import React from 'react';\nimport Manage from \"./components/manage\";\n\nfunction ManagerPage() {\n  return (\n    <Manage/>\n  );\n}\n\nexport default ManagerPage;\n","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react'\n\nexport default function Logo(props: { token: string; symbol: string; imgprops?: React.ImgHTMLAttributes<HTMLImageElement> }) {\n  return <img {...props.imgprops} style={{width: 22, height: 22, ...props.imgprops?.style}} src={props.token} alt={props.symbol}  />\n}\n","import React from \"react\";\nimport {useAppDispatch, useAppSelector} from \"../state\";\nimport {toggleStatus} from \"../state/CollateralManage/actions\";\n\nexport default function usePanel(){\n  const expanded = useAppSelector((state)=> state.collateralManage.expanded)\n  const dispatch = useAppDispatch()\n  const handleChange = (panel: string):(event: React.SyntheticEvent, newExpanded: boolean)=>void => {\n    return (event: React.SyntheticEvent, newExpanded: boolean) => {\n      dispatch(toggleStatus({expanded:newExpanded ? panel : '-1'}))\n    }\n  }\n  const setExpanded = (panel?: string) => {\n    dispatch(toggleStatus({expanded:panel || '-1'}))\n  }\n  return {expanded,handleChange,setExpanded}\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nconst Wrapper = styled('div')`\n  background: #def1ff;\n  border-radius: 14px;\n  padding: 13px 22px;\n  margin: 20px 0;\n\n  table {\n    width: 100%;\n  }\n\n  td {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-weight: 400;\n    font-size: 12px;\n    padding: 5px 0;\n  }\n\n  .label {\n    text-align: left;\n    width: 30%;\n  }\n\n  .from,\n  .to {\n    width: 35%;\n    line-height: 17px;\n    text-align: right;\n  }\n\n  .to {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    color: #000;\n  }\n\n  .borderTop {\n    border-top: 0.5px solid rgba(0, 0, 0, 0.12);\n  }\n`\n\n/*\n\nconst data = [\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n]\n\n*/\n\nfunction DataWrapper(props) {\n  const { data } = props\n  return (\n    <Wrapper>\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"from\" colSpan={2}>\n              From\n            </td>\n            <td className=\"to\">To</td>\n          </tr>\n          {data.map((item) => (\n            <tr className={item[3] ? 'borderTop' : ''} key={item[0]}>\n              <td className=\"label\">{item[0]}</td>\n              <td className=\"from\">{item[1]}</td>\n              <td className=\"to\">{item[2]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Wrapper>\n  )\n}\n\nexport default DataWrapper\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { PoolProps } from 'config/constants/types'\nimport { TokenUtils } from 'utils/transformHelper'\nimport Select from '../Select'\nimport { ExchangeArrow, RoundArrow } from '../uikit'\nimport { FlexWrap } from '../CommonComponent'\n\nconst SelectWrap = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: static !important;\n`\n\nconst GroupWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% / 2 - 25px);\n\n  p {\n    height: 28px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 15px;\n    box-sizing: border-box;\n\n    span {\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  .maxBtn {\n    height: 21px;\n    align-items: flex-end;\n  }\n`\n\nexport const IconWrap = styled('strong')`\n  display: block;\n  width: 20px;\n  height: 20px;\n  background: #c4c4c4;\n  line-height: 20px;\n  text-align: center;\n  border-radius: 50%;\n`\n\nexport interface MethodsProps {\n  options: PoolProps[] // selectIcon\n  selectValue: number // current selected\n  onMax?: (arg1: PoolProps) => void // to max action\n  selectedSymbol: string // selected symbol\n  SelectIcon: React.FC // leftTop icon\n  RightIcon: React.FC // right icon\n  leftInputValue?: number | null // left input value\n  rightInputValue?: number // right input value\n  rightBalance: number // right balance\n  rightSymbol: string // right symbol\n  rightOptions: PoolProps[] // options list\n  selectInput?: (arg1: React.SyntheticEvent) => void\n  leftBalance?: any\n}\n\nexport default function Index(props) {\n  const {\n    options,\n    leftBalance,\n    isExchange,\n    onExchange,\n    onMax,\n    selectInput,\n    rightSelectInput,\n    SelectIcon,\n    RightIcon,\n    leftInputValue,\n    rightInputValue,\n    rightBalance,\n    rightDisableStatus,\n    leftChange,\n    rightChange,\n    leftDisableStatus = [false, false],\n    leftSelectValue,\n    rightSelectValue,\n    rightOptions,\n    leftSymbol,\n    rightSymbol,\n    rightNumberIsShow = true,\n    leftDesc,\n    rightDesc,\n  } = props\n  // rightDisableStatus[1] true selectDisabled\n  // rightDisableStatus[2] true inputDisabled\n\n  const [currentSelected, setVal] = useState(options && options.length ? options[0] : {})\n  const [rightList, setRightList] = useState(options && options.length ? options[0].rightOptionList : [])\n  const [rightVal, setRightVal] = useState(rightList ? rightList[0] : {})\n\n\n  useEffect(() => {\n    if (options && options.length && leftSelectValue && rightSelectValue) {\n      setVal(options.filter((it) => it.token === leftSelectValue)[0] || options[0])\n      setRightList(options[0].rightOptionList)\n      setRightVal(options[0].rightOptionList.filter((it) => it.token === rightSelectValue)[0] || options[0].rightOptionList[0])\n    }\n  }, [leftSelectValue, options, rightSelectValue])\n\n  const displayValues = useMemo(() => {\n    const _rightBalance = rightBalance || rightVal && rightVal.balance || 0;\n    const _leftBalance = leftBalance || currentSelected.balance || 0;\n    return {\n      right: {\n        orignalBalance: _rightBalance,\n        balance: TokenUtils.formatFourDecimals(_rightBalance),\n        symbol: rightSymbol || (rightVal && Object.keys(rightVal) ? rightVal.token : 'WBTC'),\n      },\n      left: {\n        orignalBalance: _leftBalance,\n        balance: TokenUtils.formatFourDecimals(_leftBalance),\n        symbol: leftSymbol || currentSelected.token || 'WBTC',\n      },\n    }\n  }, [currentSelected, leftBalance, leftSymbol, rightBalance, rightSymbol, rightVal])\n  return (\n    <>\n      <SelectWrap>\n        <GroupWrap>\n          <p title={`${displayValues.left.symbol} Balance: ${displayValues.left.orignalBalance}`}>\n            <SelectIcon />\n            <span className=\"balance\">\n              {displayValues.left.balance} {displayValues.left.symbol}\n            </span>\n          </p>\n          <Select\n            key={1}\n            selectValue={leftSelectValue || currentSelected.token}\n            allDisabled={!leftDisableStatus || (leftDisableStatus[0] && leftDisableStatus[1])}\n            inputDisabled={!leftDisableStatus || leftDisableStatus[1]}\n            selectDisabled={!leftDisableStatus || leftDisableStatus[0]}\n            onChange={(val) => {\n              const selected = options.filter((it) => it.token === val)[0]\n              setRightList(selected.rightOptionList)\n              setRightVal(selected.rightOptionList[0])\n              setVal(selected)\n              if (leftChange) {\n                leftChange(selected)\n              }\n            }}\n            selectInput={selectInput}\n            actionValue={leftInputValue}\n            options={options}\n            groupStyle={{ width: '100%' }}\n            isGroup\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {leftDesc && leftDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\">\n              <span\n                onClick={() => {\n                  if (onMax) {\n                    onMax(currentSelected)\n                  }\n                }}\n                onKeyUp={() => null}\n                tabIndex={0}\n                role=\"button\"\n                style={{ cursor: 'pointer', color: '#6ED6F3', fontSize: '0.75rem', userSelect: 'none' }}\n              >\n                Max\n              </span>\n            </p>\n          </FlexWrap>\n        </GroupWrap>\n        {isExchange ? (\n          <ExchangeArrow onClick={onExchange} style={{ fill: 'none', cursor: 'pointer', width: 22, marginTop: 8 }} />\n        ) : (\n          <RoundArrow style={{ fill: 'none', width: 22, marginTop: 8 }} />\n        )}\n\n        <GroupWrap>\n          <p title={rightNumberIsShow ? `${displayValues.right.symbol} Balance: ${displayValues.right.orignalBalance}` : ''}>\n            <RightIcon />\n            {rightNumberIsShow ? (\n              <span className=\"balance\">\n                {displayValues.right.balance}{\" \"}\n                {displayValues.right.symbol}\n              </span>\n            ) : null}\n          </p>\n          <Select\n            key={2}\n            selectValue={rightSelectValue || (rightVal ? rightVal.token : 'WBTC')}\n            options={rightOptions || rightList}\n            actionValue={rightInputValue}\n            groupStyle={{ width: '100%' }}\n            isGroup\n            allDisabled={!rightDisableStatus || (rightDisableStatus[0] && rightDisableStatus[1])}\n            inputDisabled={!rightDisableStatus || rightDisableStatus[1]}\n            selectDisabled={!rightDisableStatus || rightDisableStatus[0]}\n            selectInput={rightSelectInput}\n            onChange={(val) => {\n              if (currentSelected) {\n                const selected = currentSelected.rightOptionList.filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              } else {\n                const selected = options[0].filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              }\n            }}\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {rightDesc && rightDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\" />\n          </FlexWrap>\n        </GroupWrap>\n      </SelectWrap>\n    </>\n  )\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","export const MintThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n\nexport const LiquidationThresholdValue = {\n  days: 10,\n  ratio: 110,\n}\n\nexport const ShortThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n","import {useEffect, useState} from \"react\";\nimport {getContract} from \"utils/web3React\";\nimport PositionABI from 'config/abi/Position.json';\nimport {useAppSelector} from \"../state\";\n\nexport default function usePosContract(active,signer) {\n  const [contract,setContract] = useState(null);\n  const currentCpt = useAppSelector(state=> state.collateralManage.currentCPT)\n\n  useEffect(()=>{\n    if (active && signer && currentCpt && Number(currentCpt.position)) {\n      const _contract = getContract(signer, PositionABI, currentCpt.position);\n      setContract(_contract)\n    }\n  }, [active, currentCpt, signer])\n\n  return contract\n}\n","import { styled } from '@mui/material/styles'\n\nconst Title = styled('h1')`\n  font-family: 'Heebo Medium';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 47px;\n  margin-bottom: 14px;\n  color: #000000;\n`\n\nexport default Title\n"],"sourceRoot":""}