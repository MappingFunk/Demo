{"version":3,"sources":["views/ShortNeutralize/components/StyleCommon.ts","views/ShortNeutralize/components/CustomizedSlider.tsx","views/ShortNeutralize/components/DashboardContent.tsx","views/ShortNeutralize/components/Table.tsx","views/ShortNeutralize/components/TradeSettings.tsx","views/ShortNeutralize/components/ShortEstimatedDashBoard.tsx","views/ShortNeutralize/components/ShortTransactionPanel.tsx","views/ShortNeutralize/components/ShortPannel.tsx","assets/svg/neutralize.svg","views/ShortNeutralize/components/NeutralizeEstimatedDashBoard.tsx","views/ShortNeutralize/components/icon/WarnRedIcon.tsx","views/ShortNeutralize/components/icon/WarnGrayIcon.tsx","views/ShortNeutralize/components/NeutralizeRight.tsx","views/ShortNeutralize/components/NeutralizeImg.tsx","views/ShortNeutralize/index.tsx","components/Logo.tsx","state/Short/hooks.ts","hooks/useApprove.ts","config/constants/thresholdValue.ts"],"names":["ActionButton","styled","Button","_templateObject","_taggedTemplateLiteral","SliderWrapper","_templateObject2","SlidtRangeWrapper","_templateObject3","props","value","concat","PrettoSlider","Slider","_templateObject4","PrettoSlidertwo","_templateObject5","MarkSlider","_templateObject6","waistyle","display","justifyContent","alignItems","BtleftCard","Card","_templateObject7","BtrightCard","_templateObject8","InputBox","_templateObject9","pendingStyle","tableHeader","fontSize","fontWeight","color","tableHeadCell","pl","pr","pb","tableBody","borderBottom","tableBodyRow","border","transition","backgroundColor","tableBodyCell","height","cursor","clearAll","textTransform","borderRadius","ShortPageWraperStyle","box","width","overflow","overflowX","topBox","ActionPanelStyle","addAdnRemoveBtn","background","backgroundSize","TipInfo","_templateObject10","SelectTypeWrap","_templateObject11","CustomizedSlider","rateInfo","setRateInfo","useState","rate","coverage","useEffect","marks1","length","defaultvalue","computedValueRatio","useCallback","val","_value","Infinity","Number","toString","indexOf","replace","computedValueCoverage","useMemo","showInfo","_coverage","_coverage1","_coverage2","_ratio","_ratio1","_jsx","_Fragment","children","_jsxs","className","valueLabelDisplay","marks","max","disabled","defaultValue","sx","TopCard","CtOne","CtTwo","CtLabel","CtLabeltwo","CtValue","PtCt","PtLabel","PtValue","DashboardContent","linevalue","setLine","label","linevaluep","setLinep","currentPosition","currentPositionTokenInfo","usePositionInfo","newCollateralRatio","newPrepaidInterestCoverage","onUpdateNeutralizeValue","onUpdateCollateralValue","newNeutralizeFee","useComputedIndexAction","shortAmount","neutralizeAmount","useShortPendingAction","activeInfo","useShortActiveAction","neutralizeType","useShortInfo","load","setLoad","activeTab","TokenUtils","formatTokenAmount","showValue","markPrice","_currentPositionToken","tokenPrice","toLargeUnits","mintTokenInfo","symbol","price","settlementCurrency","decimals","tokenType","TokenType","NEUTRALIZE","amount","console","log","formatFourDecimals","balance","style","marginTop","LinearIndeterminate","BalanceDisplay","_ref","state","token","clearActive","setActionInfo","setActiveAmount","Box","p","onClick","SUPPLY","WithDraw","CloseIcon","Typography","mt","textOverflow","whiteSpace","textAlign","ActionPanel","_ref2","_pendingTokenTypes$ge","_pendingTokenTypes$ge2","pendingTokenTypes","tokenAmount","walletTokenBalance","useHashPowerToken","disabeldAction","get","includes","IconButton","AddIcon","CollateralList","pendingActionList","_map","Map","forEach","item","_tokenType","push","set","allowedAssets","allowedTokens","tokens","balances","Object","keys","map","key","_tokens","_tokens2","_tokens5","_tokens6","address","icon","_tokens3","_tokens4","Logo","imgprops","marginRight","logo","toWbtc","rowVa","TableContainer","component","Paper","boxShadow","Table","TableHead","TableRow","TableCell","align","TableBody","row","marginLeft","TradeSettings","handleClose","anchorEl","open","deadline","maxSlippageValue","setMaxSlippageValue","setDeadlineValue","focusFlag","setFocusFlag","chageFlag","setChangeFlag","chageDedFlag","setChangeDedFlag","Menu","id","onClose","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","PaperProps","mb","gap","ml","flex","TextField","placeholder","multiline","maxRows","size","onBlur","onFocus","onChange","e","formattedValue","cleanedValue","target","_parts$","parts","split","slice","join","parseFloat","variant","fullWidth","InputProps","disableUnderline","padding","endAdornment","InputAdornment","position","mr","_parts$2","ShortEstimatedDashBoard","chainId","useWeb3React","tokenPools","useSystemParams","supplyAllAmount","collateralIndex","newOutStandingDebt","newEstimatedDailyDebt","newDisplayCollateralRatio","displayDatas","current","next","prepaidInterestNewVal","ShortThresholdValue","days","displayIndex","POSITIVE_INFINITY","prepaidInterestCoverage","collateralRatio","walletData","displayRatio","title","DataIndexName","CollateralRatio","type","upVal","downVal","PrepaidInterestCoverage","displayCoverage","PrepaidInterest","prepaidInterest","positionStatus","estimatedDailyDebt","colorValue","redss","ratio","SHORT","bgcolor","flexDirection","SubdirectoryArrowRightIcon","AvailableText","AvailableBox","getFullNum","num","decimal","isNaN","str","test","toFixed","ActionList","hoveredRow","setHoveredRow","clearAllPendingAction","deletePendingAction","setActionIndex","currentMintToken","handleMouseLeave","index","onMouseEnter","handleMouseEnter","onMouseLeave","Badge","overlap","badgeContent","ActionType","ADD","RemoveIcon","minWidth","minHeight","bottom","right","borderWidth","borderColor","borderStyle","commonTokens","valueToKeyMap","stopPropagation","opacity","ClearIcon","ShortTransactionPanel","_localStorage$getItem","_activeInfo$token2","setAnchorEl","localStorage","getItem","approveFlag","setApproveFlag","mintSellHelpContract","signer","toastError","toastSuccess","toastInfo","useToast","onApprove","approveStatus","checkApproveLoading","useShortActiveTokenApprove","addPendingAction","updatePendingAction","onChangeCollateralIndex","handleUpdatePosition","usePositionAction","_tokenList","filter","chainConfigs","_tokenAmounts","toSmallUnits","_shortAmount","action","amountOut","getSwapQuote","String","Boolean","computedRate","async","previewPositionInfoAfterShort","targetCollateralRatio","result","positionAddress","toNumber","submitShort","inter","utils","Interface","contracts","actionMintSell","abi","data","encodeFunctionData","Date","now","posContract","ethers","Contract","PositionABI","txInfo","delegateCall","undefined","hash","ToastTitle","submited","TransactionSubmittedInfo","content","txHash","wait","confirmations","success","error","failed","reason","disabledAddAction","_balance","condition1","condition2","disabledSubmit","isUpdate","activeIndex","availableShowFlag","setAvailableShowFlag","handleAction","amountInDecimals","amountIn","BigNumber","from","tx","receipt","status","TransactionSuccessInfo","transactionHash","err","event","currentTarget","SetIcon","setItem","readOnly","paddingLeft","onMax","_activeInfo$token","disableElevation","ShortPannel","NeutralizeEstimatedDashBoard","newDisplayPrepaidInterestCoverage","avatarAssetList","reduce","acc","downValColor","walletWbtc","avatarWbtc","colors","WarnRedIcon","viewBox","fill","xmlns","d","fillRule","clipRule","WarnGrayIcon","TableBox","setNeutralizeType","deleteNeutralizePendingAction","Assets","Wallet","AvatarIcon","ActionUser","ActionUserInterface","NeutralizeRightBox","_activeInfo$amount","setRefresh","dispatch","useDispatch","updateNeutralizePendingAction","setActiveTab","neutralizeLoading","setNeutralizeLoading","setDisabledAction","maxValue","disableFlag","submitDisable","haveTokenFlag","some","onNeutralize","resData","info","estimateNeutralizeFeeWarningFlag","tokenAmountBalanceWarningFlag","walletNeutralizeFeeWarningFlag","onChangeNeutralizeType","actionVal","neutralize","find","it","onKeyUp","tabIndex","role","ImgBox","OrderWrap","Text","CustomButton","NeutralizetBox","src","NeutralizeImg","alt","Link","to","Wrapper","Tip","DashboardPage","useAppSelector","short","_shortInfo","pageActiveTab","setPageActiveTab","handleChangeCurrentPosition","mintTokens","isSupportedChainId","mintTokenChainConfigs","BTitle","Select","selectValue","options","isGroup","isEnable","ArrowLine","NeutralizeBox","memo","_props$imgprops","account","onCheckApprove","useCheckApprove","handleApprove","useApprove","setApproveStatus","setCheckApproveLoading","then","res","_hex","catch","finally","useAppDispatch","activeAmount","arguments","updateActionInfo","_index","findIndex","updateActiveActionIndex","updateActiveTab","updateActiveAmount","_activeInfo","updateShortRateInfo","pendingActions","_pendingActions","_actions","setShortPendingAction","actions","_nextList","splice","i","Array","values","flat","_obg","_amount","supplyAmount","items","active","spender","contract","getContract","ERC20","allowance","owner","library","getSigner","approve","constants","MaxUint256","LiquidationThresholdValue"],"mappings":"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","file":"static/js/19.5ff8113f.chunk.js","sourcesContent":["import { Button, Slider, styled } from '@mui/material'\nimport Card from 'components/Card'\n\nexport const ActionButton = styled(Button)`\n  height: 32px;\n  padding: 0 16px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 32px;\n  border-radius: 20px;\n  text-transform: none;\n  color: rgba(0, 0, 0, 1);\n  background: linear-gradient(90deg, rgba(97, 194, 247, 1) 0%, rgba(122, 233, 240, 1) 100%);\n`\n\n// wrapper for slider\nexport const SliderWrapper = styled('div')`\n  .MuiSlider-markLabel {\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='1'] {\n      transform: translateX(-100%) !important;\n    }\n    &[data-index='2'] {\n      font-weight: bold;\n      transform: translateX(0) !important;\n    }\n  }\n`\nexport const SlidtRangeWrapper = styled('div')<{ value: string | number }>`\n  position: relative;\n  width: 100%;\n\n  .custom_range_flag {\n    font-size: 12px;\n    transform: translateX(-50%);\n    position: absolute;\n    top: 6px;\n    left: ${(props) =>\n      (props.value as number) > 300 || props.value === '+∞'\n        ? 'calc(100% - 5%)'\n        : `calc((100% - 5%) / 300 * ${props.value})`};\n    height: 24px;\n    width: fit-content;\n    box-shadow: 0 4px 15px 1px rgba(0, 0, 0, 0.07);\n    background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n\n    box-shadow: 0 4px 4px rgba(42, 161, 255, 0.25);\n    border-radius: 23px;\n    padding: 0 5px;\n    line-height: 24px;\n    &::before {\n      position: absolute;\n      content: '';\n      left: 2px;\n      top: 2px;\n      right: 2px;\n      bottom: 2px;\n      background-color: #fff;\n      border-radius: 20px;\n    }\n    .range_val {\n      position: relative;\n      z-index: 1;\n    }\n  }\n  &.feature_item {\n    .custom_range_flag {\n      top: -26px;\n    }\n  }\n`\nexport const PrettoSlider = styled(Slider)`\n  height: 10px;\n  width: 95%;\n\n  .MuiSlider-valueLabel:before {\n    display: none;\n  }\n  .MuiSlider-valueLabel {\n    height: 24px;\n    width: 36px;\n    font-size: 12px;\n    background-color: #fff;\n    border-radius: 20px;\n    border: 2px solid #61c2f7;\n    color: #000;\n    transform: translate(0, 10px) !important;\n  }\n  .MuiSlider-rail {\n    background: rgba(212, 230, 242, 1);\n  }\n\n  .MuiSlider-track {\n    border: none;\n    background: linear-gradient(-90deg, #8cdb65, #ffcc04 40%, #ff6308);\n  }\n\n  .MuiSlider-thumb {\n    display: none;\n    height: 24px;\n    width: 24px;\n    box-shadow: 0 4px 15px 1px rgba(0, 0, 0, 0.07);\n    background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n\n    &:focus,\n    &:hover,\n    &.Mui-active,\n    &.Mui-focusVisible {\n      box-shadow: inherit;\n    }\n\n    &::before {\n      background-color: #fff;\n      width: 20px;\n      height: 20px;\n      left: calc(50% - 10px);\n      top: calc(50% - 10px);\n    }\n    &::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background: #2aa1ff;\n      box-shadow: 0 4px 4px rgba(42, 161, 255, 0.25);\n    }\n  }\n\n  .MuiSlider-mark {\n    &[data-index='0'] {\n      opacity: 0;\n    }\n    &[data-index='3'] {\n      display: none !important;\n    }\n\n    top: 5px;\n    height: 7.5px;\n    background-color: #969696;\n  }\n\n  .MuiSlider-markLabel {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='0'] {\n      left: 10px !important;\n    }\n    &[data-index='2'] {\n      font-weight: bold;\n      transform: translateX(0) !important;\n    }\n    &[data-index='1'] {\n      transform: translateX(-100%) !important;\n    }\n  }\n`\nexport const PrettoSlidertwo = styled(Slider)`\n  height: 10px;\n  width: 95%;\n  margin-top: -30px;\n  transition: all 0.3s ease;\n  .css-1kz0hui-MuiSlider-valueLabel:before {\n    display: none;\n  }\n  .css-1kz0hui-MuiSlider-valueLabel {\n    height: 24px;\n    width: 36px;\n    font-size: 12px;\n    background-color: #fff;\n    border-radius: 20px;\n    border: 2px solid #61c2f7;\n    color: #000;\n    transform: translate(0, 10px);\n  }\n  .MuiSlider-rail {\n    background: rgba(212, 230, 242, 1);\n  }\n\n  .MuiSlider-track {\n    border: none;\n    background: linear-gradient(-90deg, #8cdb65, #ffcc04 40%, #ff6308);\n  }\n\n  .MuiSlider-thumb {\n    display: none;\n    height: 24px;\n    width: 24px;\n    box-shadow: 0 4px 15px 1px rgba(0, 0, 0, 0.07);\n    background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n\n    &:focus,\n    &:hover,\n    &.Mui-active,\n    &.Mui-focusVisible {\n      box-shadow: inherit;\n    }\n\n    &::before {\n      background-color: #fff;\n      width: 20px;\n      height: 20px;\n      left: calc(50% - 10px);\n      top: calc(50% - 10px);\n    }\n\n    &::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background: #2aa1ff;\n      box-shadow: 0 4px 4px rgba(42, 161, 255, 0.25);\n    }\n  }\n  .MuiSlider-mark {\n    display: none !important;\n  }\n  .MuiSlider-markLabel {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='0'] {\n      left: 10px !important;\n    }\n    &[data-index='2'] {\n      font-weight: bold;\n      transform: translateX(0) !important;\n      color: rgba(0, 0, 0, 1) !important;\n    }\n    &[data-index='1'] {\n      transform: translateX(-100%) !important;\n    }\n  }\n`\nexport const MarkSlider = styled(Slider)`\n  padding-bottom: 20px;\n  padding-top: 10px;\n  margin-top: -20px;\n  height: 0;\n  width: 95%;\n\n  .MuiSlider-rail {\n    display: none;\n  }\n\n  .MuiSlider-track {\n    display: none;\n  }\n\n  .MuiSlider-thumb {\n    display: none;\n  }\n\n  .MuiSlider-mark {\n    display: none;\n  }\n  .MuiSlider-markLabel {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='2'] {\n      font-weight: bold;\n      color: rgba(0, 0, 0, 1) !important;\n    }\n  }\n`\n\nexport const waistyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'start',\n}\nexport const BtleftCard = styled(Card)`\n  margin-bottom: 20px;\n  display: block;\n  width: 58%;\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  backdrop-filter: unset;\n`\nexport const BtrightCard = styled(Card)`\n  margin-bottom: 20px;\n  display: flex;\n  width: 40%;\n  /* opacity */\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  backdrop-filter: unset;\n`\n\nexport const InputBox = styled('div')`\n  width: 100%;\n  input {\n    width: 100%;\n    border: unset;\n    outline: unset;\n    background-color: unset;\n    font-family: PingFang SC;\n    font-size: 24px;\n    font-weight: 600;\n    line-height: 33.6px;\n    text-align: left;\n    color: rgba(0, 0, 0, 1);\n  }\n  input::-webkit-inner-spin-button {\n    display: none;\n  }\n  input::placeholder {\n    color: rgba(0, 0, 0, 0.2);\n  }\n`\n\nexport const pendingStyle = {\n  tableHeader: { fontSize: 12, fontWeight: 500, color: 'rgba(0, 0, 0, 0.6)' },\n  tableHeadCell: { pl: 0, pr: 0, pb: 0 },\n  tableBody: { borderBottom: '1px solid rgba(47, 0, 0, 0.13)' },\n  tableBodyRow: {\n    '&:last-child td, &:last-child th': { border: 0 },\n    transition: 'all 0.3s',\n    ':hover': {\n      backgroundColor: 'rgba(110, 214, 243, 0.13)',\n    },\n  },\n  tableBodyCell: { display: 'flex', alignItems: 'center', pl: 1, pr: 0, height: 66, cursor: 'pointer' },\n\n  clearAll: {\n    textTransform: 'none',\n    borderRadius: 1.8,\n    color: 'rgba(110, 214, 243, 1)',\n  },\n}\n\nexport const ShortPageWraperStyle = {\n  box: {\n    width: '100%',\n    overflow: 'hidden',\n    overflowX: 'scroll',\n    '&::-webkit-scrollbar': {\n      height: '8px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#888',\n      borderRadius: '4px',\n    },\n    '&::-webkit-scrollbar-track:hover': {\n      backgroundColor: '#f1f1f1',\n    },\n    '&::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#555',\n    },\n  },\n  topBox: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    pb: 3,\n  },\n}\n\nexport const ActionPanelStyle = {\n  addAdnRemoveBtn: {\n    color: '#000',\n    width: 32,\n    height: 32,\n    background: `linear-gradient(90deg, #29A0FF 0%, #7AE8F1 100%)`,\n    backgroundSize: '100% 100%',\n  },\n}\n\nexport const TipInfo = styled('div')`\n  display: flex;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  padding: 16px 20px;\n  margin-top: 10px;\n  p {\n    line-height: 20px;\n    font-size: 14px;\n    font-family: PingFangSC-Regular, sans-serif;\n    margin-left: 16px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nexport const SelectTypeWrap = styled('div')`\n  margin-top: 34px;\n  .title-neutralize {\n    font-size: 16px;\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-bottom: 16px;\n    font-size: 500;\n  }\n  .content {\n    display: flex;\n  }\n  .item_wrap {\n    min-width: 200px;\n    padding: 1px;\n    border-radius: 14px;\n    overflow: hidden;\n    margin-right: 16px;\n    background: #e3e8ed;\n    cursor: pointer;\n    user-select: none;\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      color: rgba(0, 0, 0, 0.5);\n      font-size: 12px;\n      line-height: 17px;\n      &:first-of-type {\n        margin-right: 30px;\n      }\n    }\n    &.active {\n      padding: 2px;\n      background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n      span {\n        color: #000;\n      }\n    }\n  }\n  .item {\n    border-radius: 12px;\n    //border: 2px solid #E3E8ED;\n    //border-image: linear-gradient(#7AE9F0 , #61C3F7) 30 30;\n    padding: 14px 14px 9px 10px;\n    background: #fff;\n    width: 100%;\n    height: 100%;\n    //box-sizing: border-box;\n    h4 {\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n      display: flex;\n      align-items: center;\n      line-height: 20px;\n      font-size: 14px;\n      margin-bottom: 22px;\n      svg {\n        margin-right: 8.5px;\n      }\n    }\n    p {\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n`\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { MarkSlider, PrettoSlider, PrettoSlidertwo, SliderWrapper, SlidtRangeWrapper } from './StyleCommon'\n\nexport default function CustomizedSlider(props: { value: any }) {\n  const { value } = props\n\n  const [rateInfo, setRateInfo] = useState<{\n    rate: number | string\n    coverage: number | string\n  }>({\n    rate: 0,\n    coverage: 0,\n  })\n  useEffect(() => {\n    if (value) {\n      if (value?.marks1 && value?.marks1.length > 0) {\n        setRateInfo({\n          rate: value?.defaultvalue,\n          coverage: 0,\n        })\n      }else {\n        setRateInfo({\n          rate: 0,\n          coverage: value?.defaultvalue,\n        })\n      }\n    }\n  }, [value])\n  const computedValueRatio = useCallback((val: any) => {\n    let _value = val\n\n    if (_value === 'Infinity' || _value === Infinity || _value === '+∞') {\n      return '+∞'\n    }\n\n    _value = Number(_value)\n\n    if (_value === 0 || !_value) {\n      return 0\n    }\n\n    if (_value && _value.toString().indexOf('%') !== -1) {\n      return `${_value.replace(/%/g, '')}%`\n    }\n\n    return `${_value}%`\n  }, [])\n\n  const computedValueCoverage = useMemo(() => {\n    const _value = rateInfo.coverage\n    if (_value === 'Infinity' || _value === Infinity || _value === '+∞') {\n      return '+∞'\n    }\n\n    if (_value === 0 || !_value) {\n      return 0\n    }\n\n    return `${_value}`\n  }, [rateInfo.coverage])\n  const showInfo = useMemo(() => {\n    const _coverage =\n      (rateInfo.coverage as any) === 'Infinity' ||\n      (rateInfo.coverage as any) === 'N/A' ||\n      (rateInfo.coverage as any) === Infinity ||\n      rateInfo.coverage === '+∞' ||\n      (rateInfo.coverage as any).toString() === 'NAN' ||\n      Number(rateInfo.coverage) > 300\n        ? 300\n        : Number(rateInfo.coverage)\n\n    const _coverage1 = _coverage > 0 ? _coverage : 0\n\n    const _coverage2 = _coverage1 <= 10 ? _coverage1 * 11 : (_coverage1 - 10) * 6 + 100\n\n    const _ratio =\n      (rateInfo.rate as any) === 'Infinity' ||\n      (rateInfo.rate as any) === Infinity ||\n      rateInfo.rate === '+∞' ||\n      (rateInfo.rate as any).toString() === 'NAN' ||\n      Number(rateInfo.rate) > 300\n        ? 300\n        : rateInfo.rate\n    const _ratio1 = Number(_ratio) > 0 ? _ratio : 0\n    const _ratio2 = Number(_ratio1) <= 110 ? Number(_ratio1) : (Number(_ratio1) - 100) * 3 + 100\n    return {\n      rate: _ratio2,\n      coverage: _coverage2,\n    }\n  }, [rateInfo.coverage, rateInfo.rate])\n  return (\n    <>\n      <div className=\"range_wrap\">\n        <SliderWrapper className=\"custom-slider-wrapper\">\n          <MarkSlider\n            valueLabelDisplay=\"off\"\n            aria-label=\"pretto slider\"\n            value={Number(rateInfo.rate)}\n            marks={value.marks1}\n            max={300}\n          />\n        </SliderWrapper>\n        {value.marks1.length > 0 ? (\n          <SlidtRangeWrapper value={showInfo.rate}>\n            <PrettoSlider\n              disabled\n              aria-label=\"pretto slider\"\n              defaultValue={120}\n              value={showInfo.rate}\n              max={300}\n              valueLabelDisplay=\"on\"\n              marks={value.marks}\n              sx={{\n                \".css-1qlnp9f-MuiSlider-root .MuiSlider-markLabel[data-index='1']\": {\n                  pr: 70,\n                },\n                \".css-1qlnp9f-MuiSlider-root .MuiSlider-markLabel[data-index='2']\": {\n                  pl: 70,\n                },\n              }}\n            />\n            <div className=\"custom_range_flag\">\n              <div className=\"range_val\">{`${computedValueRatio(rateInfo.rate)}`}</div>\n            </div>\n          </SlidtRangeWrapper>\n        ) : (\n          <SlidtRangeWrapper className=\"feature_item\" value={Number(showInfo.coverage)}>\n            <PrettoSlidertwo\n              disabled\n              aria-label=\"pretto slider\"\n              defaultValue={20}\n              value={showInfo.coverage}\n              valueLabelDisplay=\"on\"\n              marks={value.marks}\n              max={300}\n            />\n            <div className=\"custom_range_flag\">\n              <div className=\"range_val\">{computedValueCoverage}</div>\n            </div>\n          </SlidtRangeWrapper>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport Card from 'components/Card'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { useShortPendingAction, useShortInfo, useShortActiveAction } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { tokenKey } from 'config/constants/tokenConfig'\nimport LinearIndeterminate from './CustomizedSlider'\n\nconst TopCard = styled(Card)`\n  margin-bottom: 20px;\n  display: flex;\n  height: 175px;\n  width: 100%;\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  backdrop-filter: unset;\n`\nconst CtOne = styled('div')`\n  width: 30%;\n`\nconst CtTwo = styled('div')`\n  width: 70%;\n`\nconst CtLabel = styled('div')`\n  color: rgba(0, 0, 0, 0.5);\n`\nconst CtLabeltwo = styled('div')`\n  margin-top: 10px;\n  font-size: 12px;\n  color: rgba(0, 0, 0, 0.5);\n`\nconst CtValue = styled('div')`\n  margin-bottom: 14px;\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 35px;\n  margin-top: 24px;\n  line-height: 35px;\n  color: #000000;\n`\nconst PtCt = styled('div')`\n  display: flex;\n`\nconst PtLabel = styled('div')`\n  width: 25%;\n`\nconst PtValue = styled('div')`\n  width: 75%;\n`\nfunction DashboardContent() {\n  const [linevalue, setLine] = useState({\n    marks1: [\n      {\n        value: 0,\n        label: '',\n      },\n      {\n        value: 110,\n        label: 'Liquidation',\n      },\n      {\n        value: 160,\n        label: 'Min. Mint',\n      },\n      {\n        value: 300,\n        label: '',\n      },\n    ],\n    marks: [\n      {\n        value: 0,\n        label: '',\n      },\n      {\n        value: 110,\n        label: '110%',\n      },\n      {\n        value: 160,\n        label: '120%',\n      },\n      {\n        value: 300,\n        label: '',\n      },\n    ],\n  })\n  const [linevaluep, setLinep] = useState({\n    marks1: [],\n    marks: [\n      {\n        value: 0,\n        label: '',\n      },\n      {\n        value: 110,\n        label: '10',\n      },\n\n      {\n        value: 160,\n        label: '20',\n      },\n      {\n        value: 300,\n        label: '',\n      },\n    ],\n  })\n  const { currentPosition, currentPositionTokenInfo } = usePositionInfo()\n  const {\n    newCollateralRatio,\n    newPrepaidInterestCoverage,\n    onUpdateNeutralizeValue,\n    onUpdateCollateralValue,\n    newNeutralizeFee,\n  } = useComputedIndexAction()\n  const { shortAmount, neutralizeAmount } = useShortPendingAction()\n  const { activeInfo } = useShortActiveAction()\n  const { rateInfo, neutralizeType } = useShortInfo()\n  const [load, setLoad] = useState(false)\n  const { activeTab } = useShortInfo()\n  useEffect(() => {\n    let { coverage, rate } = rateInfo\n    if (activeTab === 1) {\n      if (shortAmount) {\n        if (rateInfo.rate < 120) {\n          coverage = 'N/A'\n        } else if (rateInfo.rate >= 120 && coverage < 20) {\n          coverage = 20\n        }\n      }\n    } else if (activeTab === 2) {\n      coverage = TokenUtils.formatTokenAmount(newPrepaidInterestCoverage, 0)\n      rate = TokenUtils.formatTokenAmount(newCollateralRatio, 2)\n    }\n\n    setLinep((value) => {\n      return {\n        ...value,\n        defaultvalue: coverage,\n        showValue: coverage,\n      }\n    })\n    setLine((value) => ({\n      ...value,\n      defaultvalue: rate,\n      showValue: rate,\n    }))\n    setLoad(true)\n  }, [activeTab, newCollateralRatio, newPrepaidInterestCoverage, rateInfo, shortAmount])\n\n  const markPrice = useMemo(() => {\n    if (currentPositionTokenInfo.tokenPrice) {\n      return toLargeUnits(\n        currentPositionTokenInfo.tokenPrice[currentPosition.mintTokenInfo.symbol]?.price,\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n    }\n    return 0\n  }, [currentPosition, currentPositionTokenInfo])\n\n  useEffect(() => {\n    if (activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      const val = Number(activeInfo?.amount)\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    } else if (neutralizeAmount && activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      const val = Number(neutralizeAmount)\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    }\n\n    if (activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      if (neutralizeType === 'avatar' && newNeutralizeFee > 0) {\n        onUpdateCollateralValue({\n          symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as tokenKey,\n          value: Number(`-${newNeutralizeFee}`),\n        })\n        console.log('newNeutralizeFee', newNeutralizeFee)\n      } else {\n        onUpdateCollateralValue({\n          symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as tokenKey,\n          value: 0,\n        })\n      }\n    }\n  }, [\n    activeInfo,\n    onUpdateNeutralizeValue,\n    neutralizeAmount,\n    activeTab,\n    neutralizeType,\n    newNeutralizeFee,\n    onUpdateCollateralValue,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n  ])\n\n  return (\n    <>\n      <TopCard>\n        <CtOne>\n          <CtLabel>Outstanding Debt</CtLabel>\n          <CtValue>\n            {TokenUtils.formatFourDecimals(\n              Number(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)),\n            )}\n          </CtValue>\n          <CtLabeltwo>\n            Mark Price: {TokenUtils.formatFourDecimals(Number(markPrice))}{' '}\n            {currentPosition.mintTokenInfo.settlementCurrency.symbol}\n          </CtLabeltwo>\n        </CtOne>\n        {load && (\n          <CtTwo>\n            <PtCt>\n              <PtLabel style={{ marginTop: '45px' }}>Collateral Ratio</PtLabel>\n              <PtValue>\n                <LinearIndeterminate key={1} value={linevalue} />\n              </PtValue>\n            </PtCt>\n            <PtCt>\n              <PtLabel>Prepaid Interest Coverage</PtLabel>\n              <PtValue>\n                <LinearIndeterminate key={2} value={linevaluep} />\n              </PtValue>\n            </PtCt>\n          </CtTwo>\n        )}\n      </TopCard>\n    </>\n  )\n}\n\nexport default DashboardContent\n","import React, { useCallback, useMemo } from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { IconButton, Typography, Box } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { useShortPendingAction, useShortActiveAction } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { SupportedTokens } from 'config/constants/tokenConfig'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { ActionPanelStyle } from './StyleCommon'\n\nconst BalanceDisplay: React.FC<{ state: 'up' | 'down' | 'close'; val: number | string; token: string }> = ({\n  state,\n  val,\n  token,\n}) => {\n  const { clearActive, setActionInfo, setActiveAmount } = useShortActiveAction()\n  return (\n    <Box\n      sx={{\n        width: 74,\n        height: 32,\n        borderRadius: 10,\n        border: '1px solid rgba(70, 79, 96, 0.2)',\n        color: 'rgba(134, 143, 160, 1)',\n        display: 'flex',\n        alignItems: 'center',\n        background: 'rgba(247, 249, 252, 1)',\n        justifyContent: 'space-between',\n        p: 1,\n        cursor: 'pointer',\n        transition: 'all 0.3s',\n      }}\n      onClick={() => {\n        if (state === 'close') {\n          clearActive()\n        }\n        if (state === 'up') {\n          setActionInfo({ token, tokenType: TokenType.SUPPLY })\n          setActiveAmount(Number(val))\n        }\n        if (state === 'down') {\n          setActionInfo({ token, tokenType: TokenType.WithDraw })\n          setActiveAmount(Number(val))\n        }\n      }}\n    >\n      {state === 'up' && (\n        <span\n          style={{\n            fontWeight: 100,\n            fontSize: '18px',\n          }}\n        >\n          +\n        </span>\n      )}\n      {state === 'close' && <CloseIcon sx={{ width: 12, height: 12 }} />}\n      {state === 'down' && (\n        <span\n          style={{\n            fontWeight: 100,\n            fontSize: '18px',\n          }}\n        >\n          -\n        </span>\n      )}\n      <Typography\n        sx={{\n          fontSize: 10,\n          mt: 0.1,\n          width: '40px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          textAlign: 'right',\n        }}\n      >\n        {val}\n      </Typography>\n    </Box>\n  )\n}\n\nconst ActionPanel: React.FC<{\n  pendingTokenTypes: Map<string, TokenType[]>\n  symbol: string\n  tokenAmount: { [key: string]: number }\n}> = ({ pendingTokenTypes, symbol, tokenAmount }) => {\n  const { activeInfo, setActionInfo } = useShortActiveAction()\n  const { walletTokenBalance } = useHashPowerToken()\n\n  const disabeldAction = useMemo(\n    () => walletTokenBalance && walletTokenBalance[symbol] === 0,\n    [walletTokenBalance, symbol],\n  )\n  if (\n    activeInfo.token === symbol &&\n    (activeInfo.tokenType === TokenType.SUPPLY || activeInfo.tokenType === TokenType.WithDraw)\n  ) {\n    return <BalanceDisplay token={symbol} state=\"close\" val={activeInfo.tokenType} />\n  }\n  if (pendingTokenTypes.get(symbol)?.includes(TokenType.SUPPLY)) {\n    return <BalanceDisplay token={symbol} state=\"up\" val={tokenAmount[symbol]} />\n  }\n  if (pendingTokenTypes.get(symbol)?.includes(TokenType.WithDraw)) {\n    return <BalanceDisplay token={symbol} state=\"down\" val={tokenAmount[symbol]} />\n  }\n  return (\n    <>\n      <IconButton\n        disabled={disabeldAction}\n        onClick={() => {\n          if (disabeldAction) return\n          setActionInfo({ token: symbol, tokenType: TokenType.SUPPLY })\n        }}\n        sx={ActionPanelStyle.addAdnRemoveBtn}\n      >\n        <AddIcon sx={{ fontSize: 16 }} />\n      </IconButton>\n      {/* <IconButton\n                      disabled={false}\n                      sx={ActionPanelStyle.addAdnRemoveBtn}\n                    >\n                      <RemoveIcon sx={{ fontSize: 16 }} />\n                    </IconButton> */}\n    </>\n  )\n}\nconst CollateralList: React.FC = () => {\n  const { walletTokenBalance } = useHashPowerToken()\n\n  const { pendingActionList, tokenAmount } = useShortPendingAction()\n\n\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActionList.forEach((item) => {\n      const _tokenType = _map.get(item.token) || []\n      _tokenType.push(item.tokenType)\n      _map.set(item.token, _tokenType)\n    })\n    return _map\n  }, [pendingActionList])\n  const { currentPositionTokenInfo, currentPosition } = usePositionInfo()\n  const allowedAssets = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { tokens, balances } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(tokens).map((key) => {\n        return {\n          symbol: tokens[key as SupportedTokens]?.symbol,\n          address: tokens[key as SupportedTokens]?.address,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={tokens[key as SupportedTokens]?.logo}\n              symbol={tokens[key as SupportedTokens]?.symbol}\n            />\n          ),\n          decimals: tokens[key as SupportedTokens]?.decimals,\n          balance: toLargeUnits(\n            balances[key as SupportedTokens] || 0,\n            tokens[key as SupportedTokens]?.decimals,\n            true,\n          ) as number,\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo])\n\n  const toWbtc = useCallback(\n    (rowVa: any) => {\n      const price = currentPositionTokenInfo.tokenPrice[rowVa.symbol]?.price\n      return price\n        ? rowVa.balance *\n            (toLargeUnits(price, currentPosition.mintTokenInfo.settlementCurrency.decimals, true) as number)\n        : 0\n    },\n    [currentPosition.mintTokenInfo.settlementCurrency.decimals, currentPositionTokenInfo.tokenPrice],\n  )\n\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Table sx={{}} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={{ fontSize: 12, fontWeight: 500, color: 'rgba(0, 0, 0, 0.6)' }}>\n            <TableCell sx={{ pl: 0, pr: 0 }}>Collateral Asset</TableCell>\n            <TableCell align=\"right\" sx={{ pl: 0, pr: 0 }}>\n              Collateral Balance\n            </TableCell>\n            <TableCell align=\"right\" sx={{ pl: 0, pr: 0 }}>\n              {null}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allowedAssets.map((row) => {\n            return (\n              <TableRow\n                key={row.symbol}\n                sx={{ '&:last-child td, &:last-child th': { border: 0, transition: 'all 0.3s' } }}\n              >\n                <TableCell sx={{ display: 'flex', alignItems: 'center', pl: 0, pr: 0, height: 66 }}>\n                  <row.icon />\n                  <div\n                    style={{\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <Typography sx={{ fontWeight: 600 }}>{row.symbol}</Typography>\n                    <Typography sx={{ fontSize: 12, color: 'rgba(0, 0, 0, 0.5)' }}>\n                      {row.symbol} {TokenUtils.formatFourDecimals(walletTokenBalance[row.symbol])} in wallet\n                    </Typography>\n                  </div>\n                </TableCell>\n                <TableCell align=\"right\" sx={{ p: 0, height: 66, transition: 'all 0.3s' }}>\n                  <Typography sx={{ fontSize: 14 }}>{TokenUtils.formatFourDecimals(row.balance)}</Typography>\n                  {walletTokenBalance[row.symbol] !== 0 && (\n                    <Typography sx={{ fontSize: 12, color: 'rgba(53, 5, 5, 0.5)' }}>\n                      {TokenUtils.formatFourDecimals(toWbtc(row))}{' '}\n                      {currentPosition.mintTokenInfo.settlementCurrency.symbol}\n                    </Typography>\n                  )}\n                </TableCell>\n                <TableCell sx={{ pl: 0, pr: 0, height: 66 }}>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'flex-end',\n                    }}\n                  >\n                    <ActionPanel pendingTokenTypes={pendingTokenTypes} symbol={row.symbol} tokenAmount={tokenAmount} />\n                  </Box>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\nexport default CollateralList\n","import { Box, Typography, TextField, InputAdornment } from '@mui/material'\nimport React, { useState } from 'react'\nimport Menu from '@mui/material/Menu'\n\nconst TradeSettings: React.FC<{\n  handleClose: () => void\n  anchorEl: null | HTMLElement\n  open: boolean\n  deadline: any\n  maxSlippageValue: any\n\n  setMaxSlippageValue: (value: any) => void\n  setDeadlineValue: (value: string) => void\n}> = ({ handleClose, anchorEl, open, deadline, maxSlippageValue, setMaxSlippageValue, setDeadlineValue }) => {\n  const [focusFlag, setFocusFlag] = useState(false)\n  const [chageFlag, setChangeFlag] = useState(false)\n  const [chageDedFlag, setChangeDedFlag] = useState(false)\n\n  return (\n    <Menu\n      id=\"basic-menu\"\n      anchorEl={anchorEl}\n      open={open}\n      onClose={handleClose}\n      MenuListProps={{\n        'aria-labelledby': 'basic-button',\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      PaperProps={{\n        sx: {\n          width: '288px',\n          boxShadow: 'none',\n          mt: 1.5,\n          borderRadius: 2,\n          border: '1px solid rgba(207, 216, 226, 0.5)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          pl: 1.2,\n          pr: 1.2,\n          mb: 1,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Typography sx={{ fontSize: 14, fontWeight: 400, color: 'rgba(0, 0, 0, 0.5)' }}>Max.slippage</Typography>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          {/* <Typography sx={{ fontSize: 14, fontWeight: 500 }}>Auto</Typography> */}\n          {/* <KeyboardArrowUpIcon sx={{ width: 16, height: 16 }} /> */}\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          gap: 1,\n          pl: 1.2,\n          pr: 1.2,\n          height: 50,\n          width: 268,\n          alignItems: 'center',\n          ml: '9.6px',\n          border: '1px solid #CFD8E2',\n          borderRadius: 2.6,\n        }}\n      >\n        <Box\n          onClick={() => {\n            setMaxSlippageValue('0.1')\n            setChangeFlag(true)\n          }}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 2.5,\n            background: maxSlippageValue === '0.1' ? 'linear-gradient(270deg, #7AE8F1 0%, #29A0FF 100%)' : '',\n            cursor: 'pointer',\n            height: '42px',\n            width: '42px',\n            fontSize: '12px',\n          }}\n        >\n          0.1%\n        </Box>\n        <Box\n          onClick={() => {\n            setMaxSlippageValue('0.5')\n            setChangeFlag(true)\n          }}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: maxSlippageValue === '0.5' ? 'linear-gradient(270deg, #7AE8F1 0%, #29A0FF 100%)' : '',\n            cursor: 'pointer',\n            borderRadius: 2.5,\n            height: '42px',\n            width: '42px',\n            fontSize: '12px',\n          }}\n        >\n          0.5%\n        </Box>\n        <Box\n          onClick={() => {\n            setMaxSlippageValue('1')\n            setChangeFlag(true)\n          }}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 2.5,\n            background: maxSlippageValue === '1' ? 'linear-gradient(270deg, #7AE8F1 0%, #29A0FF 100%)' : '',\n            cursor: 'pointer',\n            height: '42px',\n            width: '42px',\n            fontSize: '12px',\n          }}\n        >\n          1%\n        </Box>\n        <Box\n          sx={{\n            flex: 1.2,\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 2,\n            border:\n              focusFlag ||\n              (maxSlippageValue > 0 &&\n                maxSlippageValue !== '0.5' &&\n                maxSlippageValue !== '0.1' &&\n                maxSlippageValue !== '1')\n                ? '1px solid rgba(110, 214, 243, 1)'\n                : '1px solid rgba(207, 216, 226, 0.5)',\n            p: 1,\n          }}\n        >\n          <TextField\n            placeholder=\"1\"\n            multiline\n            maxRows={1}\n            size=\"small\"\n            onBlur={() => setFocusFlag(false)}\n            onFocus={() => setFocusFlag(true)}\n            value={maxSlippageValue}\n            onChange={(e) => {\n              const inputValue = e.target.value\n              let formattedValue = ''\n              const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n              if (cleanedValue.includes('.')) {\n                const parts = cleanedValue.split('.')\n                parts[1] = parts[1]?.slice(0, 2)\n                formattedValue = parts.join('.')\n              } else {\n                formattedValue = cleanedValue\n              }\n              setChangeFlag(true)\n\n              if (Number(e.target.value) < 0 || e.target.value === '') {\n                setMaxSlippageValue('0')\n                return\n              }\n              if (Number(e.target.value) > 49.9) {\n                setMaxSlippageValue('49.9')\n                return\n              }\n              setMaxSlippageValue(\n                formattedValue.includes('.') ? formattedValue.toString() : parseFloat(formattedValue).toString(),\n              )\n            }}\n            sx={{\n              '& .MuiInputBase-input': {\n                textAlign: 'right',\n                color: !chageFlag ? 'rgb(0 0 0 / 20%)' : '',\n              },\n              '& .MuiInputBase-input::placeholder': {\n                textAlign: 'right',\n              },\n            }}\n            variant=\"standard\"\n            fullWidth\n            InputProps={{\n              disableUnderline: true,\n              sx: {\n                padding: 0,\n              },\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Typography sx={{ textAlign: 'left', fontSize: 14, fontWeight: 400, color: 'rgba(0,0,0,1)' }}>\n                    %\n                  </Typography>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          pl: 1.2,\n          pr: 1.2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mt: 2,\n          mb: 1,\n        }}\n      >\n        <Typography sx={{ fontSize: 14, fontWeight: 400, color: 'rgba(0, 0, 0, 0.5)' }}>\n          Transaction deadline\n        </Typography>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          {/* <Typography sx={{ fontSize: 14, fontWeight: 500 }}>10m</Typography>\n          <KeyboardArrowUpIcon sx={{ width: 16, height: 16 }} /> */}\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          height: 50,\n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          borderRadius: 2,\n          border: '1px solid rgba(207, 216, 226, 0.5)',\n          p: 1,\n          ml: 1.2,\n          mr: 1.2,\n        }}\n      >\n        <TextField\n          placeholder=\"10\"\n          multiline\n          maxRows={1}\n          size=\"small\"\n          value={deadline}\n          onChange={(e) => {\n            const inputValue = e.target.value\n            let formattedValue = ''\n            const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n            if (cleanedValue.includes('.')) {\n              const parts = cleanedValue.split('.')\n              parts[1] = parts[1]?.slice(0, 2)\n              formattedValue = parts.join('.')\n            } else {\n              formattedValue = cleanedValue\n            }\n            if (Number(formattedValue) <= 0) {\n              formattedValue = '1'\n            }\n            if (Number(formattedValue) > 1000000) {\n              formattedValue = '1000000'\n            }\n            setChangeDedFlag(true)\n            setDeadlineValue(formattedValue)\n          }}\n          sx={{\n            '& .MuiInputBase-input': {\n              textAlign: 'right',\n              color: !chageDedFlag ? 'rgb(0 0 0 / 20%)' : '',\n            },\n            '& .MuiInputBase-input::placeholder': {\n              textAlign: 'right',\n            },\n          }}\n          variant=\"standard\"\n          fullWidth\n          InputProps={{\n            disableUnderline: true,\n            sx: {\n              padding: 0,\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Typography sx={{ fontSize: 14, fontWeight: 400, color: 'rgba(0, 0, 0, 1)' }}>minutes</Typography>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Box>\n    </Menu>\n  )\n}\n\nexport default TradeSettings\n","import { Box, Typography } from '@mui/material'\nimport React, { useCallback, useEffect, useMemo } from 'react'\nimport SubdirectoryArrowRightIcon from '@mui/icons-material/SubdirectoryArrowRight'\nimport { useWeb3React } from 'web3-react-core'\nimport useSystemParams from 'hooks/useSystemParams'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { useShortActiveAction, useShortPendingAction, useShortInfo } from 'state/Short/hooks'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { DataIndexName } from 'config/constants/contants'\nimport { ShortThresholdValue } from 'config/constants/thresholdValue'\n\nconst ShortEstimatedDashBoard: React.FC = () => {\n  const { chainId } = useWeb3React()\n  const { tokenPools } = useSystemParams()\n\n  const { supplyAllAmount, shortAmount } = useShortPendingAction()\n  const { activeInfo } = useShortActiveAction()\n  const { rateInfo } = useShortInfo()\n\n  const { collateralIndex, currentPosition } = usePositionInfo()\n  const {\n    onUpdateNeutralizeValue,\n    onUpdateCollateralValue,\n    newOutStandingDebt,\n    newEstimatedDailyDebt,\n    newDisplayCollateralRatio,\n    newPrepaidInterestCoverage,\n  } = useComputedIndexAction()\n  const displayDatas = useMemo(() => {\n    const { decimals, settlementCurrency } = currentPosition.mintTokenInfo\n    const current = TokenUtils.formatFourDecimals(Number(toLargeUnits(currentPosition.balance, decimals)))\n    const _new = TokenUtils.formatFourDecimals(Number(toLargeUnits(newOutStandingDebt, decimals)))\n    return {\n      current,\n      next: _new,\n      newDisplayCollateralRatio,\n      newEstimatedDailyDebt: TokenUtils.formatTokenAmount(\n        newEstimatedDailyDebt / 10 ** settlementCurrency.decimals,\n        settlementCurrency.decimals,\n      ),\n    }\n  }, [\n    currentPosition.balance,\n    currentPosition.mintTokenInfo,\n    newDisplayCollateralRatio,\n    newEstimatedDailyDebt,\n    newOutStandingDebt,\n  ])\n  const prepaidInterestNewVal = useMemo(() => {\n    if (rateInfo.rate >= 120 && rateInfo.coverage < 20) {\n      const minPI = TokenUtils.formatTokenAmount(\n        Number(displayDatas.newEstimatedDailyDebt) * ShortThresholdValue.days,\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n      return minPI\n    }\n    return newPrepaidInterestCoverage\n  }, [\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    displayDatas.newEstimatedDailyDebt,\n    newPrepaidInterestCoverage,\n    rateInfo.coverage,\n    rateInfo.rate,\n  ])\n  const displayIndex = useMemo(() => {\n    let { coverage, rate } = rateInfo\n    if (shortAmount) {\n      if (rateInfo.rate < 120) {\n        coverage = 0\n      } else if (rateInfo.rate >= 120 && coverage < 20) {\n        coverage = 20\n      } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n        coverage = Number.POSITIVE_INFINITY\n      }\n    } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n      coverage = Number.POSITIVE_INFINITY\n    } else {\n      coverage = collateralIndex.prepaidInterestCoverage\n    }\n    if (rateInfo.rate) {\n      if (rateInfo.rate === Number.POSITIVE_INFINITY || rateInfo.rate === 'Infinity') {\n        rate = Number.POSITIVE_INFINITY\n      }\n    } else {\n      rate = collateralIndex.collateralRatio\n    }\n\n    return {\n      rate,\n      coverage,\n    }\n  }, [collateralIndex.collateralRatio, collateralIndex.prepaidInterestCoverage, rateInfo, shortAmount])\n\n  const walletData = useMemo(() => {\n    let { coverage, rate } = rateInfo\n    if (shortAmount) {\n      if (rateInfo.rate < 120) {\n        coverage = 'N/A'\n      } else if (rateInfo.rate >= 120 && coverage < 20) {\n        coverage = `${20} days`\n      } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n        coverage = '+∞'\n      } else {\n        coverage = `${coverage} days`\n      }\n    } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n      coverage = '+∞'\n    } else {\n      coverage = `${coverage} days`\n    }\n    if (rateInfo.rate) {\n      if (rateInfo.rate === Number.POSITIVE_INFINITY || rateInfo.rate === 'Infinity') {\n        rate = '+∞'\n      } else {\n        rate = `${rateInfo.rate}%`\n      }\n    } else {\n      rate = collateralIndex.displayRatio\n    }\n\n    return [\n      {\n        id: 1,\n        title: DataIndexName.CollateralRatio,\n        type: 'ratio',\n        value: {\n          upVal: collateralIndex.displayRatio,\n          downVal: rate,\n        },\n      },\n      {\n        id: 2,\n        title: DataIndexName.PrepaidInterestCoverage,\n        type: 'coverage',\n        value: {\n          upVal: collateralIndex.displayCoverage,\n          downVal: coverage,\n        },\n      },\n      {\n        id: 3,\n        title: DataIndexName.PrepaidInterest,\n        type: 'prepaidInterest',\n        value: {\n          upVal: `${TokenUtils.formatFourDecimals(collateralIndex.prepaidInterest)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `${TokenUtils.formatFourDecimals(Number(prepaidInterestNewVal))} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 4,\n        title: 'Daily Paid Interest Reference',\n        type: 'dailyPaid',\n        value: {\n          upVal: `${TokenUtils.formatFourDecimals(Number(toLargeUnits(\n            currentPosition.positionStatus.estimatedDailyDebt,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n          )))} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `≈ ${TokenUtils.formatFourDecimals(Number(displayDatas.newEstimatedDailyDebt))} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 5,\n        title: 'Outstanding Debt',\n        type: 'debt',\n        value: {\n          upVal: displayDatas.current,\n          downVal: `≈ ${displayDatas.next}`,\n        },\n      },\n    ]\n  }, [\n    rateInfo,\n    shortAmount,\n    collateralIndex.displayRatio,\n    collateralIndex.displayCoverage,\n    collateralIndex.prepaidInterest,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPosition.positionStatus.estimatedDailyDebt,\n    prepaidInterestNewVal,\n    displayDatas,\n  ])\n\n  const colorValue = useCallback(\n    (item: any) => {\n      const redss =\n        (item.type === 'ratio' && displayIndex.rate < ShortThresholdValue.ratio) ||\n        (item.type === 'coverage' && displayIndex.coverage < ShortThresholdValue.days)\n          ? '#FF4D00'\n          : '#2AA1FF'\n      return ['prepaidInterest', 'dailyPaid', 'debt'].includes(item.type) ? '#2AA1FF' : redss\n    },\n    [displayIndex.coverage, displayIndex.rate],\n  )\n\n  useEffect(() => {\n    let amount = 0\n    if (activeInfo.token && activeInfo.tokenType === TokenType.SHORT) {\n      amount = Number(activeInfo.amount)\n    } else if (shortAmount) {\n      amount = Number(shortAmount)\n    }\n\n    onUpdateNeutralizeValue(amount)\n  }, [activeInfo, onUpdateNeutralizeValue, shortAmount])\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'rgba(222, 241, 255, 1)',\n        borderRadius: 1.8,\n        mt: 4,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 1.2,\n      }}\n    >\n      {walletData.map((item: any) => {\n        return (\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} key={item.id}>\n            <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.5)' }}>{item.title}</Typography>\n\n            <Box>\n              <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.6)', textAlign: 'right' }}>\n                {item.value.upVal}\n              </Typography>\n              {((shortAmount || supplyAllAmount) && (\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'end', textAlign: 'right' }}>\n                  <SubdirectoryArrowRightIcon sx={{ color: 'rgba(0,0,0,0.1)', width: 12, height: 12 }} />\n                  <Typography\n                    sx={{\n                      fontSize: 10,\n                      color: colorValue(item),\n                    }}\n                  >\n                    {item.value.downVal}\n                  </Typography>\n                </Box>\n              )) ||\n                null}\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\nexport default ShortEstimatedDashBoard\n","import {\n  Box,\n  Typography,\n  IconButton,\n  Button,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Badge,\n} from '@mui/material'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Fbtc20Icon, SetIcon } from 'components/uikit'\nimport AddIcon from '@mui/icons-material/Add'\nimport RemoveIcon from '@mui/icons-material/Remove'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport {\n  useShortActiveAction,\n  useShortActiveTokenApprove,\n  useShortPendingAction,\n  useShortInfo,\n} from 'state/Short/hooks'\n// import tokens from 'config/constants/tokens'\nimport useSystemParams from 'hooks/useSystemParams'\nimport { useWeb3React } from 'web3-react-core'\nimport contracts from 'config/constants/contracts'\nimport { BigNumber, ethers, utils } from 'ethers'\nimport IconMap from 'components/IconMap'\nimport { ActionType, TokenType } from 'state/Short/shortSlice'\nimport useToast from 'hooks/useToast'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport styled from 'styled-components'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { getSwapQuote } from 'config/constants/pool'\nimport { chainConfigs, commonTokens, SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport PositionABI from 'config/abi/Position.json'\nimport { ToastTitle } from 'config/constants/contants'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { SupportedChainId } from 'config/constants/chains'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport Logo from 'components/Logo'\nimport TradeSettings from './TradeSettings'\nimport ShortEstimatedDashBoard from './ShortEstimatedDashBoard'\nimport { ActionButton, InputBox, pendingStyle } from './StyleCommon'\n\nconst AvailableText = styled('div')`\n  font-family: PingFang SC;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16.8px;\n  text-align: right;\n`\nconst AvailableBox = styled('div')`\n  position: absolute;\n  top: 33px;\n`\nconst getFullNum = (num, decimal) => {\n  if (Number.isNaN(num)) {\n    return num\n  }\n  const str = `${num}`\n  if (!/e/i.test(str)) {\n    return num\n  }\n  return num.toFixed(decimal).replace(/\\.?0+$/, '')\n}\n\nconst ActionList: React.FC = () => {\n  const [hoveredRow, setHoveredRow] = useState<number>(-1)\n\n  const { clearAllPendingAction, pendingActionList, deletePendingAction } = useShortPendingAction()\n  const { setActionInfo, setActiveAmount, setActionIndex } = useShortActiveAction()\n  const { currentMintToken } = usePositionInfo()\n  const handleMouseEnter = (index: number) => {\n    setHoveredRow(index)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredRow(-1)\n  }\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={pendingStyle.tableHeader}>\n            <TableCell sx={pendingStyle.tableHeadCell}>{pendingActionList.length} Pending Actions</TableCell>\n            <TableCell align=\"right\" sx={pendingStyle.tableHeadCell}>\n              <Button\n                size=\"small\"\n                sx={pendingStyle.clearAll}\n                onClick={() => {\n                  clearAllPendingAction()\n                }}\n              >\n                Clear All\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody sx={pendingStyle.tableBody}>\n          {pendingActionList.map((row, index) => (\n            <TableRow\n              key={row.tokenType + row.token}\n              sx={pendingStyle.tableBodyRow}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n              onClick={() => {\n                setActionInfo({ token: row.token, tokenType: row.tokenType })\n                setActiveAmount(row.amount)\n                setActionIndex(index)\n              }}\n            >\n              <TableCell sx={pendingStyle.tableBodyCell}>\n                <Badge\n                  color=\"error\"\n                  overlap=\"circular\"\n                  badgeContent={\n                    row.type === ActionType.ADD ? (\n                      <AddIcon sx={{ width: 7, height: 7, color: '#000' }} />\n                    ) : (\n                      <RemoveIcon sx={{ width: 7, height: 7, color: '#000' }} />\n                    )\n                  }\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  sx={{\n                    '.MuiBadge-badge': {\n                      padding: 0,\n                      minWidth: 10,\n                      minHeight: 10,\n                      height: 10,\n                      position: 'absolute',\n                      bottom: '20%',\n                      right: '24%',\n                      backgroundColor: 'rgba(110, 214, 243, 1)',\n                      borderWidth: 1,\n                      borderColor: 'rgba(235, 247, 255, 1)',\n                      borderStyle: 'solid',\n                    },\n                  }}\n                >\n                  <Logo token={commonTokens[valueToKeyMap[row.token]].logo} symbol={row.token} />\n                  {/* {IconMap[row.token]()} */}\n                </Badge>\n                <Typography sx={{ fontWeight: 600, marginLeft: '5px' }}>\n                  {row.tokenType} {row.token}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" sx={{ p: 0, height: 66 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'end' }}>\n                  <Box>\n                    <Typography sx={{ fontSize: 14 }}>{row.amount}</Typography>\n                    <Typography sx={{ fontSize: 12, color: 'rgba(0, 0, 0, 0.5)' }}>\n                      {row.price} {currentMintToken}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      transition: 'all 0.3s',\n                      width: hoveredRow === index ? 32 : 0,\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        deletePendingAction(row.token, row.tokenType)\n                      }}\n                      sx={{\n                        transition: 'all 0.3s',\n                        opacity: hoveredRow === index ? 1 : 0,\n                        color: 'rgba(0, 0, 0, 1)',\n                      }}\n                    >\n                      <ClearIcon sx={{ width: 16, height: 16 }} />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst ShortTransactionPanel: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [maxSlippageValue, setMaxSlippageValue] = useState<any>(localStorage.getItem('slippage') ?? '0.5')\n  const [deadline, setDeadlineValue] = useState<any>(10)\n  const [approveFlag, setApproveFlag] = useState(false)\n\n  const { chainId } = useWeb3React()\n  const { mintSellHelpContract, signer, tokenPools } = useSystemParams()\n  const { walletTokenBalance } = useHashPowerToken()\n  const { toastError, toastSuccess, toastInfo } = useToast()\n\n  const { pendingActionList, shortAmount } = useShortPendingAction()\n  const { activeInfo, setActiveAmount, clearActive } = useShortActiveAction()\n  const { onApprove, approveStatus, checkApproveLoading } = useShortActiveTokenApprove()\n\n  const { addPendingAction, updatePendingAction, clearAllPendingAction, pendingTokenTypes } = useShortPendingAction()\n  const { rateInfo, onChangeCollateralIndex } = useShortInfo()\n\n  const { currentPosition, collateralIndex, currentMintToken } = usePositionInfo()\n  const { newPrepaidInterestCoverage, newCollateralRatio, onUpdateCollateralValue, onUpdateNeutralizeValue } =\n    useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onMax = () => {\n    if (activeInfo.tokenType !== 'Short') {\n      setActiveAmount((walletTokenBalance as any)[activeInfo?.token ?? currentMintToken])\n    }\n  }\n\n  const _tokenList = useCallback(() => {\n    return pendingActionList\n      .filter((item) => item.tokenType !== TokenType.SHORT && item.tokenType !== TokenType.NEUTRALIZE)\n      .map((item) => chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[item.token]].address)\n  }, [chainId, pendingActionList])\n\n  const _tokenAmounts = useCallback(() => {\n    return pendingActionList\n      .filter((item) => item.tokenType !== TokenType.SHORT && item.tokenType !== TokenType.NEUTRALIZE)\n      .map((item) =>\n        toSmallUnits(\n          item.amount.toString(),\n          chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[item.token]].decimals,\n        ),\n      )\n  }, [chainId, pendingActionList])\n\n  // When the short value is not added, but collateral is added, update the collateral value.\n  useEffect(() => {\n    let amount = 0\n    let _shortAmount = 0\n    pendingActionList.forEach((action) => {\n      if (action.tokenType === TokenType.SUPPLY) {\n        if (currentPosition.mintTokenInfo.settlementCurrency.symbol === action.token) {\n          const amountOut = action.amount\n          amount += amountOut\n        } else {\n          const amountOut = getSwapQuote(\n            chainId,\n            action.token as unknown as SupportedTokens,\n            currentPosition.mintTokenInfo.settlementCurrency.symbol,\n            toSmallUnits(\n              String(action.amount),\n              chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[action.token]].decimals,\n            ),\n            tokenPools,\n          )\n          amount += Number(toLargeUnits(amountOut, currentPosition.mintTokenInfo.settlementCurrency.decimals))\n        }\n      } else if (action.tokenType === TokenType.SHORT) {\n        _shortAmount = Number(action.amount)\n      }\n    })\n    onUpdateCollateralValue({\n      symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as any,\n      value: amount,\n    })\n\n    onUpdateNeutralizeValue(_shortAmount)\n  }, [\n    chainId,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    onUpdateCollateralValue,\n    onUpdateNeutralizeValue,\n    pendingActionList,\n    tokenPools,\n  ])\n\n  const open = useMemo(() => Boolean(anchorEl), [anchorEl])\n  const computedRate = useMemo(async () => {\n    if (mintSellHelpContract && mintSellHelpContract.previewPositionInfoAfterShort) {\n      if (!shortAmount) {\n        onChangeCollateralIndex({\n          ratio: Number(TokenUtils.formatTokenAmount(newCollateralRatio, 2)),\n          coverage: Number(TokenUtils.formatTokenAmount(newPrepaidInterestCoverage, 0)),\n        })\n        return {\n          targetCollateralRatio: collateralIndex.collateralRatio,\n        }\n      }\n      const result = await mintSellHelpContract.previewPositionInfoAfterShort(\n        currentPosition.positionAddress,\n        toSmallUnits(shortAmount.toString(), currentPosition.mintTokenInfo.decimals),\n        _tokenList(),\n        _tokenAmounts(),\n      )\n      onChangeCollateralIndex({\n        ratio: result.targetCollateralRatio.toNumber() / 100,\n        coverage: Number(TokenUtils.formatTokenAmount(newPrepaidInterestCoverage, 0)),\n      })\n      return result\n    }\n    return { targetCollateralRatio: 0 }\n  }, [\n    mintSellHelpContract,\n    shortAmount,\n    currentPosition.positionAddress,\n    currentPosition.mintTokenInfo.decimals,\n    _tokenList,\n    _tokenAmounts,\n    onChangeCollateralIndex,\n    newPrepaidInterestCoverage,\n    newCollateralRatio,\n    collateralIndex.collateralRatio,\n  ])\n\n  const submitShort = useCallback(async () => {\n    const result = await computedRate\n\n    const inter = new utils.Interface(contracts.actionMintSell.abi)\n    const { decimals } = currentPosition.mintTokenInfo\n    const data = inter.encodeFunctionData('short', [\n      toSmallUnits(shortAmount.toString(), decimals),\n      toSmallUnits(\n        TokenUtils.formatTokenAmount(shortAmount - shortAmount * (maxSlippageValue / 100), decimals),\n        decimals,\n      ),\n      _tokenList(),\n      _tokenAmounts(),\n      result.targetCollateralRatio,\n      Number((Date.now() / 1000).toFixed()) + deadline * 60,\n    ])\n    try {\n      const posContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n      const txInfo = await posContract.delegateCall(contracts.actionMintSell.address[chainId], data)\n      try {\n        if (txInfo !== undefined && txInfo.hash) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n          )\n          const info = await txInfo.wait()\n\n          if (info.confirmations !== 0) {\n            toastSuccess(\n              ToastTitle.success,\n              <TransactionSubmittedInfo content=\"The transaction has been successfully\" txHash={txInfo.hash} />,\n            )\n            clearActive()\n            clearAllPendingAction()\n\n            await handleUpdatePosition()\n          }\n        }\n      } catch (error: any) {\n        toastError(ToastTitle.failed, error.reason)\n      }\n    } catch (error: any) {\n      toastError(ToastTitle.failed, error.reason)\n    }\n  }, [\n    _tokenAmounts,\n    _tokenList,\n    chainId,\n    clearActive,\n    clearAllPendingAction,\n    computedRate,\n    currentPosition.mintTokenInfo,\n    currentPosition.positionAddress,\n    deadline,\n    handleUpdatePosition,\n    maxSlippageValue,\n    shortAmount,\n    signer,\n    toastError,\n    toastInfo,\n    toastSuccess,\n  ])\n\n  const disabledAddAction = useMemo(() => {\n    const _balance = walletTokenBalance && walletTokenBalance[activeInfo.token]\n    console.log('_balance', _balance)\n    const condition1 = activeInfo.amount && activeInfo.amount > _balance\n    const condition2 = Number(activeInfo.amount) <= 0\n\n    console.log('condition1', activeInfo.amount, condition2, activeInfo)\n    console.log('(activeInfo.tokenType !== TokenType.SHORT && condition1) || condition2', (activeInfo.tokenType !== TokenType.SHORT && condition1)|| condition2)\n\n    // if (activeInfo.token) {\n    //   const actionAmount =\n    //     Number(activeInfo.amount) *\n    //     10 ** chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].decimals\n    //     console.log('actionAmount', actionAmount)\n    //   if (activeInfo.amount && actionAmount > Number.MAX_SAFE_INTEGER) {\n    //     return true\n    //   }\n    //     return (activeInfo.tokenType !== TokenType.SHORT && condition1) || condition2\n    // }\n    return (activeInfo.tokenType !== TokenType.SHORT && condition1) || condition2\n  }, [activeInfo, walletTokenBalance])\n\n  const disabledSubmit = useMemo(() => {\n    let { coverage } = rateInfo\n    if (shortAmount) {\n      if (rateInfo.rate < 120) {\n        coverage = 'N/A'\n      } else if (rateInfo.rate >= 120 && coverage < 20) {\n        coverage = 20\n      }\n    }\n    return !(rateInfo.rate >= 120 && coverage >= 20)\n  }, [rateInfo, shortAmount])\n  const isUpdate = useMemo(() => {\n    return activeInfo.activeIndex !== -1\n  }, [activeInfo])\n\n  const [availableShowFlag, setAvailableShowFlag] = useState(false)\n\n  const handleAction = useCallback(async () => {\n    if (disabledAddAction) return\n    const action = {\n      token: activeInfo.token,\n      tokenType: activeInfo.tokenType,\n      amount: Number(activeInfo.amount),\n      price: activeInfo.amount,\n    }\n    if (currentMintToken !== activeInfo.token) {\n      const amountInDecimals =\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].decimals\n      const amountIn = BigNumber.from(TokenUtils.formatTokenAmount(activeInfo.amount * 10 ** amountInDecimals, 0))\n      const amountOut = getSwapQuote(\n        chainId,\n        activeInfo.token,\n        currentMintToken as unknown as SupportedTokens,\n        amountIn,\n        tokenPools,\n      )\n      action.price = TokenUtils.formatFourDecimals(\n        Number(toLargeUnits(amountOut, currentPosition.mintTokenInfo.decimals)),\n      )\n    }\n    if (!approveStatus) {\n      setApproveFlag(true)\n      try {\n        const tx = await onApprove()\n        toastInfo(\n          ToastTitle.submited,\n          <TransactionSubmittedInfo content=\"The approve has been submitted\" txHash={tx.hash} />,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status === 1) {\n          updatePendingAction(action)\n          clearActive()\n          setApproveFlag(false)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSuccessInfo txHash={receipt.transactionHash} content=\"The approve has been successfully\" />,\n          )\n        }\n      } catch (err: any) {\n        setApproveFlag(false)\n      }\n    } else if (isUpdate) {\n      updatePendingAction(action)\n      clearActive()\n    } else {\n      addPendingAction(action)\n      clearActive()\n    }\n  }, [\n    activeInfo.amount,\n    activeInfo.token,\n    activeInfo.tokenType,\n    addPendingAction,\n    approveStatus,\n    chainId,\n    clearActive,\n    currentMintToken,\n    currentPosition.mintTokenInfo.decimals,\n    disabledAddAction,\n    isUpdate,\n    onApprove,\n    toastInfo,\n    toastSuccess,\n    tokenPools,\n    updatePendingAction,\n  ])\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: 16, fontWeight: 500 }}>\n          {activeInfo?.token ? `${activeInfo.tokenType} ${activeInfo.token}` : `${currentMintToken} Wallet Balance`}\n        </Typography>\n\n        <IconButton\n          aria-controls={open ? 'basic-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          onClick={handleClick}\n          sx={{\n            p: 0,\n            width: 24,\n            height: 24,\n          }}\n        >\n          <SetIcon />\n        </IconButton>\n\n        <TradeSettings\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          maxSlippageValue={maxSlippageValue}\n          open={open}\n          deadline={deadline}\n          setMaxSlippageValue={(value) => {\n            localStorage.setItem('slippage', value)\n            setMaxSlippageValue(value)\n          }}\n          setDeadlineValue={(value) => setDeadlineValue(value)}\n        />\n      </Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 1.6 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1.2,\n            width: '100%',\n            height: '45px',\n            transition: '300ms all',\n          }}\n        >\n          {activeInfo?.token ? (\n            <Logo token={commonTokens[valueToKeyMap[activeInfo.token]].logo} imgprops={{style:{width: 42, height: 42}}} symbol={activeInfo.token} />\n          ) : (\n            <Logo token={commonTokens[valueToKeyMap[currentMintToken]].logo} imgprops={{style:{width: 42, height: 42}}} symbol={currentMintToken} />\n          )}\n          <div\n            style={{\n              width: '100%',\n              position: 'relative',\n            }}\n          >\n            <InputBox>\n              <input\n                readOnly={!activeInfo?.token}\n                type=\"number\"\n                placeholder={!activeInfo?.token ? walletTokenBalance[currentMintToken] : 0}\n                value={\n                  activeInfo?.amount.toString() ? getFullNum(activeInfo?.amount, commonTokens[valueToKeyMap[activeInfo.token]].decimals) : ''\n                }\n                onFocus={() => setAvailableShowFlag(true)}\n                onBlur={() => {\n                  if (activeInfo?.amount.toString() === '' || activeInfo?.amount < 0) {\n                    setAvailableShowFlag(false)\n                  }\n                }}\n                onChange={(event) => {\n                  const inputValue = event.target.value\n                  let formattedValue = ''\n                  const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n                  if (cleanedValue.includes('.')) {\n                    const parts = cleanedValue.split('.')\n                    parts[1] = parts[1]?.slice(\n                      0,\n                      chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].decimals,\n                    )\n                    formattedValue = parts.join('.')\n                  } else {\n                    formattedValue = cleanedValue\n                  }\n                      \n                  if (Number(formattedValue) > 100000000) {\n                    formattedValue = '100000000'\n                  }\n                  // const isMaxVal = Number(formattedValue) * 10** currentPosition.mintTokenInfo.decimals > ;\n                  // if (formattedValue *)\n                  setActiveAmount(formattedValue || '')\n                }}\n              />\n            </InputBox>\n\n            {activeInfo?.token && availableShowFlag && activeInfo.tokenType !== 'Short' ? (\n              <AvailableBox>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                    width: '100%',\n                    color: 'rgba(0,0,0,.5)',\n                    paddingLeft: '4px',\n                  }}\n                >\n                  <AvailableText>\n                    {(walletTokenBalance as any)[activeInfo?.token ?? currentMintToken]} Available\n                  </AvailableText>\n                </Box>\n              </AvailableBox>\n            ) : (\n              <></>\n            )}\n          </div>\n        </Box>\n        {activeInfo?.token && activeInfo.tokenType !== TokenType.SHORT && (\n          <Box>\n            <Button\n              size=\"small\"\n              sx={{\n                textTransform: 'none',\n                borderRadius: 1.8,\n                color: 'rgba(110, 214, 243, 1)',\n              }}\n              onClick={() => onMax()}\n            >\n              Max\n            </Button>\n          </Box>\n        )}\n      </Box>\n      {activeInfo?.token && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: 3,\n            mt: 3,\n          }}\n        >\n          <ActionButton\n            variant=\"contained\"\n            disableElevation\n            onClick={() => {\n              clearActive()\n            }}\n          >\n            Cancel\n          </ActionButton>\n          {checkApproveLoading ? (\n            <ActionButton disabled variant=\"contained\" disableElevation>\n              Check Approving\n            </ActionButton>\n          ) : (\n            <ActionButton\n              disabled={disabledAddAction || approveFlag}\n              variant=\"contained\"\n              disableElevation\n              onClick={handleAction}\n            >\n              {!approveStatus ? 'Approve & Add' : `${isUpdate ? 'Update' : 'Add'} Action`}\n            </ActionButton>\n          )}\n        </Box>\n      )}\n      {pendingActionList.length > 0 && (\n        <Box>\n          <ActionList />\n        </Box>\n      )}\n      {pendingTokenTypes.get(currentMintToken as unknown as string)?.includes(TokenType.SHORT) && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 3 }}>\n          <ActionButton onClick={() => submitShort()} variant=\"contained\" disableElevation disabled={disabledSubmit}>\n            Submit Transaction\n          </ActionButton>\n        </Box>\n      )}\n\n      <ShortEstimatedDashBoard />\n    </Box>\n  )\n}\nexport default ShortTransactionPanel\n","import React from 'react'\nimport Table from './Table'\nimport ShortTransactionPanel from './ShortTransactionPanel'\nimport { BtleftCard, BtrightCard, waistyle } from './StyleCommon'\n\nfunction ShortPannel() {\n  return (\n    <div style={waistyle}>\n      <BtleftCard>\n        <Table />\n      </BtleftCard>\n      <BtrightCard>\n        <ShortTransactionPanel />\n      </BtrightCard>\n    </div>\n  )\n}\n\nexport default ShortPannel\n","export default __webpack_public_path__ + \"static/media/neutralize.1c2056a6.svg\";","import { Box, Typography } from '@mui/material'\nimport React, { useCallback, useEffect, useMemo } from 'react'\nimport SubdirectoryArrowRightIcon from '@mui/icons-material/SubdirectoryArrowRight'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useComputedIndexAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { tokenKey, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { useShortActiveAction, useShortInfo, useShortPendingAction } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { ShortThresholdValue } from 'config/constants/thresholdValue'\n\nconst NeutralizeEstimatedDashBoard: React.FC = () => {\n  const { walletTokenBalance } = useHashPowerToken()\n\n  const { neutralizeAmount } = useShortPendingAction()\n  const { activeInfo } = useShortActiveAction()\n  const { activeTab, neutralizeType } = useShortInfo()\n  const { collateralIndex, currentPosition, currentPositionTokenInfo } = usePositionInfo()\n  const {\n    newEstimatedDailyDebt,\n    newOutStandingDebt,\n    newNeutralizeFee,\n    newPrepaidInterestCoverage,\n    newDisplayPrepaidInterestCoverage,\n    newDisplayCollateralRatio,\n    newCollateralRatio,\n    onUpdateNeutralizeValue,\n    onUpdateCollateralValue,\n  } = useComputedIndexAction()\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {})\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const walletData = useMemo(() => {\n    return [\n      {\n        id: 1,\n        title: 'Collateral Ratio',\n        type: 'ratio',\n        value: {\n          upVal: collateralIndex.displayRatio,\n          downVal: newDisplayCollateralRatio,\n        },\n      },\n      {\n        id: 2,\n        title: 'Prepaid Interest Coverage',\n        type: 'coverage',\n        value: {\n          upVal: collateralIndex.displayCoverage,\n          downVal:\n            newPrepaidInterestCoverage > 0 || newPrepaidInterestCoverage !== Number.POSITIVE_INFINITY\n              ? `≈ ${newDisplayPrepaidInterestCoverage}`\n              : newDisplayPrepaidInterestCoverage,\n        },\n      },\n      {\n        id: 3,\n        title: 'Prepaid Interest',\n        type: 'prepaidInterest',\n        value: {\n          upVal: `${TokenUtils.formatFourDecimals(collateralIndex.prepaidInterest)} ${\n            currentPosition.mintTokenInfo.settlementCurrency.symbol\n          }`,\n          downVal: `${TokenUtils.formatFourDecimals(collateralIndex.prepaidInterest)} ${\n            currentPosition.mintTokenInfo.settlementCurrency.symbol\n          }`,\n        },\n      },\n      {\n        id: 4,\n        title: 'Daily Paid Interest Reference',\n        type: 'dailyPaid',\n        value: {\n          upVal: `${TokenUtils.formatFourDecimals(collateralIndex.estimatedDailyDebt)} ${\n            currentPosition.mintTokenInfo.settlementCurrency.symbol\n          }`,\n          downVal: `${TokenUtils.formatFourDecimals(\n            Number(\n              toLargeUnits(\n                Number(TokenUtils.formatTokenAmount(newEstimatedDailyDebt, 0)),\n                currentPosition.mintTokenInfo.settlementCurrency.decimals,\n              ),\n            ),\n          )} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 5,\n        title: 'Outstanding Debt',\n        type: 'debt',\n        value: {\n          upVal: toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals),\n          downVal: toLargeUnits(newOutStandingDebt, currentPosition.mintTokenInfo.decimals),\n        },\n      },\n\n      {\n        id: 6,\n        title: 'Estimate Neutralize Fee',\n        type: 'neutralizeFee',\n        value: {\n          upVal: `0 ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `≈ ${TokenUtils.formatFourDecimals(newNeutralizeFee)} ${\n            currentPosition.mintTokenInfo.settlementCurrency.symbol\n          }`,\n        },\n      },\n    ]\n  }, [\n    collateralIndex.displayRatio,\n    collateralIndex.displayCoverage,\n    collateralIndex.prepaidInterest,\n    collateralIndex.estimatedDailyDebt,\n    newDisplayCollateralRatio,\n    newPrepaidInterestCoverage,\n    newDisplayPrepaidInterestCoverage,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPosition.mintTokenInfo.decimals,\n    currentPosition.balance,\n    newEstimatedDailyDebt,\n    newOutStandingDebt,\n    newNeutralizeFee,\n  ])\n\n  const downValColor = useCallback(\n    (item) => {\n      const walletWbtc =\n        neutralizeType === 'wallet' &&\n        walletTokenBalance &&\n        newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n\n      const avatarWbtc =\n        neutralizeType === 'avatar' &&\n        avatarAssetList &&\n        newNeutralizeFee > avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n      const colors =\n        (item.type === 'ratio' && newCollateralRatio < ShortThresholdValue.ratio && walletWbtc) ||\n        (item.type === 'ratio' && newCollateralRatio < ShortThresholdValue.ratio && avatarWbtc) ||\n        (item.type === 'coverage' && newPrepaidInterestCoverage < ShortThresholdValue.days && avatarWbtc) ||\n        (item.type === 'coverage' && newPrepaidInterestCoverage < ShortThresholdValue.days && walletWbtc)\n          ? '#FF4D00'\n          : '#2AA1FF'\n      return ['prepaidInterest', 'dailyPaid', 'debt'].includes(item.type) ? '#2AA1FF' : colors\n    },\n    [\n      avatarAssetList,\n      currentPosition.mintTokenInfo.settlementCurrency.symbol,\n      neutralizeType,\n      newCollateralRatio,\n      newNeutralizeFee,\n      newPrepaidInterestCoverage,\n      walletTokenBalance,\n    ],\n  )\n\n  useEffect(() => {\n    console.log('activeInfo', activeInfo)\n    if (activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      const val = Number(activeInfo?.amount) || 0\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    } else if (activeTab === 2) {\n      const val = Number(neutralizeAmount) || 0\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    }\n\n    if (neutralizeType === 'avatar') {\n      onUpdateCollateralValue({\n        symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as tokenKey,\n        value: Number(`-${newNeutralizeFee}`),\n      })\n      console.log('newNeutralizeFee', newNeutralizeFee)\n    }else {\n      onUpdateCollateralValue({\n        symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as tokenKey,\n        value: 0,\n      })\n    }\n  }, [\n    activeInfo,\n    onUpdateNeutralizeValue,\n    neutralizeAmount,\n    activeTab,\n    neutralizeType,\n    onUpdateCollateralValue,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    newNeutralizeFee,\n  ])\n  return (\n    <Box\n      sx={{\n        bgcolor: 'rgba(222, 241, 255, 1)',\n        borderRadius: 1.8,\n        mt: 4,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 1.2,\n      }}\n    >\n      {walletData.map((item: any) => {\n        return (\n          <Box\n            sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', textAlign: 'right' }}\n            key={item.id}\n          >\n            <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.5)', textAlign: 'right' }}>{item.title}</Typography>\n\n            <Box>\n              <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.6)', textAlign: 'right' }}>\n                {item.value.upVal}\n              </Typography>\n              {(\n                <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'right', justifyContent: 'end' }}>\n                  <SubdirectoryArrowRightIcon sx={{ color: 'rgba(0,0,0,0.1)', width: 12, height: 12 }} />\n                  <Typography\n                    sx={{\n                      fontSize: 10,\n                      color: downValColor(item),\n                      textAlign: 'right',\n                    }}\n                  >\n                    {item.value.downVal}\n                  </Typography>\n                </Box>\n              ) || null}\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\nexport default NeutralizeEstimatedDashBoard\n","import React from 'react'\n\nexport default function WarnRedIcon() {\n  return (\n    <div>\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n          fill=\"#FF2E00\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8.57852 10.156C8.82398 10.156 9.02296 10.355 9.02296 10.6004V11.756C9.02296 12.0015 8.82398 12.2004 8.57852 12.2004H7.42296C7.1775 12.2004 6.97852 12.0015 6.97852 11.756V10.6004C6.97852 10.355 7.1775 10.156 7.42296 10.156H8.57852ZM8.57852 3.62842C8.82398 3.62842 9.02296 3.8274 9.02296 4.07286V8.74859C9.02296 8.99405 8.82398 9.19303 8.57852 9.19303H7.42296C7.1775 9.19303 6.97852 8.99405 6.97852 8.74859V4.07286C6.97852 3.8274 7.1775 3.62842 7.42296 3.62842H8.57852Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function WarnGrayIcon() {\n  return (\n    <div>\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n          fill=\"#73797C\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7.42295 5.6736C7.17749 5.6736 6.9785 5.47461 6.9785 5.22915V4.0736C6.9785 3.82814 7.17749 3.62915 7.42295 3.62915H8.5785C8.82396 3.62915 9.02295 3.82814 9.02295 4.0736L9.02295 5.22915C9.02295 5.47461 8.82396 5.6736 8.5785 5.6736H7.42295ZM7.42295 12.2012C7.17749 12.2012 6.9785 12.0022 6.9785 11.7567V7.081C6.9785 6.83554 7.17749 6.63656 7.42295 6.63656H8.5785C8.82396 6.63656 9.02295 6.83554 9.02295 7.081V11.7567C9.02295 12.0022 8.82396 12.2012 8.5785 12.2012H7.42295Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import {\n  Box,\n  Typography,\n  Button,\n  TableCell,\n  TableRow,\n  Badge,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n} from '@mui/material'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useWeb3React } from 'web3-react-core'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport { AvatarIcon } from 'components/uikit'\nimport { useShortActiveAction, useShortActiveTokenApprove, useShortPendingAction } from 'state/Short/hooks'\nimport PositionABI from 'config/abi/Position.json'\nimport { ethers, utils } from 'ethers'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport contracts from 'config/constants/contracts'\nimport useToast from 'hooks/useToast'\nimport useSystemParams from 'hooks/useSystemParams'\nimport { NeutralizeType, onChangeNeutralizeType, TokenType } from 'state/Short/shortSlice'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport styled from 'styled-components'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { commonTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport Logo from 'components/Logo'\nimport Assets from 'assets'\nimport { useDispatch } from 'react-redux'\nimport NeutralizeEstimatedDashBoard from './NeutralizeEstimatedDashBoard'\nimport { ActionButton, InputBox, SelectTypeWrap, TipInfo, pendingStyle } from './StyleCommon'\nimport WarnRedIcon from './icon/WarnRedIcon'\nimport WarnGrayIcon from './icon/WarnGrayIcon'\n\nconst AvailableText = styled('div')`\n  font-family: PingFang SC;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16.8px;\n  text-align: right;\n`\nconst AvailableBox = styled('div')`\n  position: absolute;\n  top: 33px;\n`\n\nconst TableBox: React.FC<{\n  setNeutralizeType: (val: string) => any\n}> = ({ setNeutralizeType }) => {\n  const [hoveredRow, setHoveredRow] = useState<number>(-1)\n\n  const { setActionInfo, setActiveAmount, setActionIndex } = useShortActiveAction()\n\n  const { pendingActionList, clearAllPendingAction, deleteNeutralizePendingAction } = useShortPendingAction()\n  const handleMouseEnter = (index: number) => {\n    setHoveredRow(index)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredRow(-1)\n  }\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={pendingStyle.tableHeader}>\n            <TableCell sx={pendingStyle.tableHeadCell}>{pendingActionList.length} Pending Actions</TableCell>\n            <TableCell align=\"right\" sx={pendingStyle.tableHeadCell}>\n              <Button\n                size=\"small\"\n                sx={pendingStyle.clearAll}\n                onClick={() => {\n                  clearAllPendingAction()\n                }}\n              >\n                Clear All\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody sx={pendingStyle.tableBody}>\n          {pendingActionList.map((row, index) => (\n            <TableRow\n              key={row.tokenType + row.token}\n              sx={pendingStyle.tableBodyRow}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n              onClick={() => {\n                setActionInfo({ token: row.token, tokenType: row.tokenType })\n                setActiveAmount(row.amount)\n                setActionIndex(index)\n                setNeutralizeType(row.neutralizeType)\n              }}\n            >\n              <TableCell sx={pendingStyle.tableBodyCell}>\n                <Badge\n                  color=\"error\"\n                  overlap=\"circular\"\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  sx={{\n                    '.MuiBadge-badge': {\n                      padding: 0,\n                      minWidth: 10,\n                      minHeight: 10,\n                      height: 10,\n                      position: 'absolute',\n                      bottom: '20%',\n                      right: '24%',\n                      backgroundColor: 'rgba(110, 214, 243, 1)',\n                      borderWidth: 1,\n                      borderColor: 'rgba(235, 247, 255, 1)',\n                      borderStyle: 'solid',\n                    },\n                  }}\n                >\n                  {\n                  row.neutralizeType === 'wallet' ? <Logo token={Assets.Wallet} symbol='wallet' /> : <AvatarIcon />\n                  }\n                </Badge>\n                <Typography sx={{ fontWeight: 600, marginLeft: '5px' }}>\n                  {row.tokenType} {row.token}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" sx={{ p: 0, height: 66 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'end', alignItems: 'center' }}>\n                  <Box>\n                    <Typography sx={{ fontSize: 14 }}>{row.amount}</Typography>\n                    {/* <Typography sx={{ fontSize: 12, color: 'rgba(0, 0, 0, 0.5)' }}>\n                      {row.price} {token}\n                    </Typography> */}\n                  </Box>\n                  <Box\n                    sx={{\n                      transition: 'all 0.3s',\n                      width: hoveredRow === index ? 32 : 0,\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        deleteNeutralizePendingAction(row.token, row.neutralizeType)\n                      }}\n                      sx={{\n                        transition: 'all 0.3s',\n                        opacity: hoveredRow === index ? 1 : 0,\n                        color: 'rgba(0, 0, 0, 1)',\n                      }}\n                    >\n                      <ClearIcon sx={{ width: 16, height: 16 }} />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst { ActionUser } = contracts\nconst ActionUserInterface = new utils.Interface(ActionUser.abi)\nfunction NeutralizeRightBox() {\n  const { chainId } = useWeb3React()\n  const { walletTokenBalance, setRefresh } = useHashPowerToken()\n  const [neutralizeType, setNeutralizeType] = useState('wallet')\n  // const [neutralizeAmount, setNeutralizeAmount] = useState<any>('')\n  const dispatch = useDispatch()\n  const {\n    addPendingAction,\n    updateNeutralizePendingAction,\n    deleteNeutralizePendingAction,\n    clearAllPendingAction,\n    pendingActionList,\n  } = useShortPendingAction()\n\n  const { signer } = useSystemParams()\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const [availableShowFlag, setAvailableShowFlag] = useState(false)\n  const [approveFlag, setApproveFlag] = useState(false)\n\n  const { activeInfo, setActiveAmount, setActiveTab, clearActive } = useShortActiveAction()\n  const { onApprove, checkApproveLoading, approveStatus } = useShortActiveTokenApprove()\n  const isUpdate = useMemo(() => activeInfo.activeIndex !== -1, [activeInfo.activeIndex])\n\n  const [neutralizeLoading, setNeutralizeLoading] = useState(false)\n  const [, setDisabledAction] = useState(true)\n\n  const { currentPositionTokenInfo, currentMintToken, currentPosition } = usePositionInfo()\n\n  const { handleUpdatePosition } = usePositionAction()\n  const { newNeutralizeFee } = useComputedIndexAction()\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {})\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const maxValue = useMemo(() => {\n    const _maxVal = Number(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals))\n    return _maxVal\n  }, [currentPosition.balance, currentPosition.mintTokenInfo.decimals])\n\n  const disableFlag = useMemo(() => {\n    const { amount } = activeInfo\n    if (amount <= 0) {\n      return true\n    }\n    if (amount > 0) {\n      return neutralizeType === 'wallet'\n        ? amount > walletTokenBalance[activeInfo.token] || amount > maxValue\n        : amount > avatarAssetList[activeInfo.token] || amount > maxValue\n    }\n    return false\n  }, [activeInfo, avatarAssetList, maxValue, neutralizeType, walletTokenBalance])\n\n  const submitDisable = useMemo(() => {\n    return pendingActionList.length === 0\n  }, [pendingActionList])\n  const haveTokenFlag = useMemo(() => {\n    return pendingActionList.some((item) => {\n      if (item && (item as any).neutralizeType) {\n        return (item as any).neutralizeType === neutralizeType\n      }\n      return false\n    })\n  }, [neutralizeType, pendingActionList])\n\n  const onMax = () => {\n    if (neutralizeType === 'avatar') {\n      if (avatarAssetList && avatarAssetList[currentMintToken]) {\n        let actionVal = avatarAssetList[currentMintToken]\n\n        if (avatarAssetList[currentMintToken] > maxValue) {\n          actionVal = maxValue\n        }\n        setActiveAmount(actionVal)\n        if (actionVal > 0) {\n          setDisabledAction(false)\n        } else {\n          setDisabledAction(true)\n        }\n      } else {\n        setDisabledAction(true)\n      }\n    }\n    if (neutralizeType === 'wallet') {\n      let actionVal = walletTokenBalance[currentMintToken]\n\n      if (walletTokenBalance[currentMintToken] > maxValue) {\n        actionVal = maxValue\n      }\n      setActiveAmount(actionVal)\n      if (actionVal > 0) {\n        setDisabledAction(false)\n      } else {\n        setDisabledAction(true)\n      }\n    }\n  }\n\n  const onNeutralize = useCallback(async () => {\n    pendingActionList.forEach(async (item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        setNeutralizeLoading(true)\n        const resData = ActionUserInterface.encodeFunctionData('neutralizetBalance', [\n          toSmallUnits(item.amount.toString(), currentPosition.mintTokenInfo.decimals) || '0',\n          item.neutralizeType === 'wallet',\n        ])\n\n        try {\n          const posContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n          const info = await posContract.delegateCall(ActionUser.address[chainId], resData)\n\n          if (info) {\n            toastInfo(\n              ToastTitle.submited,\n              <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={info.hash} />,\n            )\n            const result = await info.wait()\n            if (result) {\n              setRefresh((state) => !state)\n              toastSuccess(\n                ToastTitle.success,\n                <TransactionSubmittedInfo content=\"The transaction has been successfully\" txHash={info.hash} />,\n              )\n              await handleUpdatePosition()\n              setActiveAmount('')\n              clearAllPendingAction()\n              setNeutralizeLoading(false)\n            }\n          }\n        } catch (e: any) {\n          setNeutralizeLoading(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    })\n    // return\n  }, [pendingActionList, currentPosition.mintTokenInfo.decimals, currentPosition.positionAddress, signer, chainId, toastInfo, setRefresh, toastSuccess, clearAllPendingAction, handleUpdatePosition, setActiveAmount, toastError])\n\n  const estimateNeutralizeFeeWarningFlag = useCallback(() => {\n    if (neutralizeType === 'wallet') {\n      return (\n        walletTokenBalance &&\n        newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n      )\n    }\n    if (neutralizeType === 'avatar') {\n      return (\n        avatarAssetList && newNeutralizeFee > avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n      )\n    }\n    return false\n  }, [\n    avatarAssetList,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    neutralizeType,\n    newNeutralizeFee,\n    walletTokenBalance,\n  ])\n\n  const tokenAmountBalanceWarningFlag = useCallback(\n    (type: string) => {\n      if (neutralizeType === 'wallet' && type === 'wallet') {\n        return walletTokenBalance && activeInfo.amount > walletTokenBalance[currentMintToken] ? 'red' : ''\n      }\n      if (neutralizeType === 'avatar' && type === 'avatar') {\n        return avatarAssetList && activeInfo.amount > avatarAssetList[currentMintToken] ? 'red' : ''\n      }\n      return ''\n    },\n    [neutralizeType, walletTokenBalance, activeInfo.amount, currentMintToken, avatarAssetList],\n  )\n\n  const walletNeutralizeFeeWarningFlag = useCallback(\n    (type: string) => {\n      const { settlementCurrency } = currentPosition.mintTokenInfo\n      if (neutralizeType === type) {\n        return walletTokenBalance && newNeutralizeFee > walletTokenBalance[settlementCurrency.symbol] ? 'red' : ''\n      }\n      if (neutralizeType === type) {\n        return avatarAssetList && newNeutralizeFee > avatarAssetList[settlementCurrency.symbol] ? 'red' : ''\n      }\n      return ''\n    },\n    [avatarAssetList, currentPosition.mintTokenInfo, neutralizeType, newNeutralizeFee, walletTokenBalance],\n  )\n\n  useEffect(() => {\n    dispatch(onChangeNeutralizeType({ neutralizeType: neutralizeType as NeutralizeType })) \n  }, [dispatch, neutralizeType])\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: 16, fontWeight: 500 }}>Neutralize {currentMintToken}</Typography>\n      </Box>\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 1.6 }}>\n        <Box\n          sx={{\n            height: '45px',\n            transition: '300ms all',\n            width: '100%',\n          }}\n        >\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.2, width: '100%' }}>\n            {/* <Fbtc20Icon style={{ width: 42, height: 42 }} /> */}\n            <Logo token={commonTokens[valueToKeyMap[currentMintToken]].logo} imgprops={{style:{width: 42, height: 42}}} symbol={currentMintToken} />\n            <div\n              style={{\n                width: '100%',\n                // transition: 'all 300ms',\n                position: 'relative',\n              }}\n            >\n              <InputBox>\n                <input\n                  type=\"number\"\n                  // placeholder={walletTokenBalance[token] }\n                  placeholder=\"0\"\n                  value={activeInfo?.amount ?? ''}\n                  onBlur={() => {\n                    if (activeInfo?.amount.toString() === '' || activeInfo?.amount < 0) {\n                      setAvailableShowFlag(false)\n                    }\n                  }}\n                  onFocus={() => setAvailableShowFlag(true)}\n                  onChange={(event) => {\n                    const inputValue = event.target.value\n                    let formattedValue = ''\n                    const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n                    if (cleanedValue.includes('.')) {\n                      const parts = cleanedValue.split('.')\n                      parts[1] = parts[1]?.slice(0, currentPosition.mintTokenInfo.decimals)\n                      formattedValue = parts.join('.')\n                    } else {\n                      formattedValue = cleanedValue\n                    }\n\n                    setActiveAmount(formattedValue || '')\n                  }}\n                />\n              </InputBox>\n              {activeInfo?.token && availableShowFlag ? (\n                <AvailableBox>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1,\n                      width: '100%',\n                      color: 'rgba(0,0,0,.5)',\n                      paddingLeft: '4px',\n                      position: 'relative',\n                    }}\n                  >\n                    <AvailableText>\n                      {neutralizeType === 'wallet'\n                        ? walletTokenBalance[activeInfo?.token]\n                        : avatarAssetList[activeInfo?.token]}{' '}\n                      Available\n                    </AvailableText>\n                  </Box>\n                </AvailableBox>\n              ) : (\n                <></>\n              )}\n            </div>\n          </Box>\n        </Box>\n        <Box>\n          <Button\n            size=\"small\"\n            sx={{\n              textTransform: 'none',\n              borderRadius: 1.8,\n              color: 'rgba(110, 214, 243, 1)',\n            }}\n            onClick={() => onMax()}\n          >\n            Max\n          </Button>\n        </Box>\n      </Box>\n\n      <SelectTypeWrap>\n        <p className=\"title-neutralize\">Neutralize the asset from</p>\n        <div className=\"content\">\n          <div\n            className={`item_wrap ${neutralizeType === 'wallet' ? 'active' : ''}`}\n            onClick={() => {\n              setNeutralizeType('wallet')\n              const neutralize = pendingActionList.find((it) => it.neutralizeType === 'avatar')\n           \n              if (neutralize) {\n                deleteNeutralizePendingAction(neutralize.token, neutralize.neutralizeType)\n              } \n              // else if ((activeInfo.amount > 0 && isUpdate) || haveTokenFlag) {\n              //   addPendingAction({\n              //     currentMintToken,\n              //     tokenType: TokenType.NEUTRALIZE,\n              //     amount: Number(activeInfo.amount),\n              //     neutralizeType: 'wallet',\n              //     price: 1,\n              //   } as any)\n              // }\n            }}\n            onKeyUp={() => null}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"item wallet\">\n              <h4>\n                <Wallet /> My Wallet\n              </h4>\n              <p>\n                <span>{currentMintToken}</span>\n                <span\n                  style={{\n                    color: tokenAmountBalanceWarningFlag('wallet'),\n                  }}\n                >\n                  {(walletTokenBalance && TokenUtils.formatFourDecimals(walletTokenBalance[currentMintToken])) || 0}\n                </span>\n              </p>\n              <p>\n                <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                <span\n                  style={{\n                    color: walletNeutralizeFeeWarningFlag('wallet'),\n                  }}\n                >\n                  {(walletTokenBalance &&\n                    TokenUtils.formatFourDecimals(\n                      walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n                    )) ||\n                    0}\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <div\n            className={`item_wrap ${neutralizeType === 'avatar' ? 'active' : ''}`}\n            onClick={() => {\n              setNeutralizeType('avatar')\n              const neutralize = pendingActionList.find((it) => it.neutralizeType === 'wallet')\n              if (neutralize) {\n                deleteNeutralizePendingAction(neutralize.token, neutralize.neutralizeType)\n              }\n              // else if ((activeInfo.amount > 0 && isUpdate) || haveTokenFlag) {\n              //   addPendingAction({\n              //     token: currentMintToken,\n              //     tokenType: TokenType.NEUTRALIZE,\n              //     amount: Number(activeInfo.amount),\n              //     neutralizeType: 'avatar',\n              //     price: 1,\n              //   } as any)\n              // }\n            }}\n            onKeyUp={() => null}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"item avatar\">\n              <h4>\n                <AvatarIcon />\n                Collateral\n              </h4>\n              <p>\n                <span>{currentMintToken}</span>\n                <span\n                  style={{\n                    color: tokenAmountBalanceWarningFlag('avatar'),\n                  }}\n                >\n                  {(avatarAssetList && TokenUtils.formatFourDecimals(avatarAssetList[currentMintToken])) || 0}\n                </span>\n              </p>\n              <p>\n                <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                <span\n                  style={{\n                    color: walletNeutralizeFeeWarningFlag('wallet'),\n                  }}\n                >\n                  {(avatarAssetList &&\n                    TokenUtils.formatFourDecimals(\n                      avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n                    )) ||\n                    0}\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </SelectTypeWrap>\n\n      <TipInfo>\n        {estimateNeutralizeFeeWarningFlag() ? <WarnRedIcon /> : <WarnGrayIcon />}\n\n        <p\n          style={{\n            color: estimateNeutralizeFeeWarningFlag() ? 'red' : '',\n          }}\n        >\n          A 1.0% fee of the token value will be levied after the position is neutralized.\n        </p>\n      </TipInfo>\n\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 3,\n          mt: 1.6,\n        }}\n      >\n        <ActionButton\n          variant=\"contained\"\n          disableElevation\n          disabled={neutralizeLoading}\n          onClick={() => {\n            clearAllPendingAction()\n            clearActive()\n\n            // clearActive()\n            // setNeutralizeAmount('')\n            setActiveTab(1)\n          }}\n        >\n          Cancel\n        </ActionButton>\n        {checkApproveLoading ? (\n          <ActionButton disabled variant=\"contained\" disableElevation>\n            Check Approving\n          </ActionButton>\n        ) : (\n          <ActionButton\n            variant=\"contained\"\n            disableElevation\n            disabled={disableFlag || approveFlag || neutralizeLoading}\n            onClick={async () => {\n              const action = {\n                token: currentMintToken as unknown as string,\n                tokenType: TokenType.NEUTRALIZE,\n                amount: Number(activeInfo.amount),\n                neutralizeType,\n                price: 1,\n              }\n              if (!approveStatus) {\n                setApproveFlag(true)\n                try {\n                  const tx = await onApprove()\n                  toastInfo('Approve Submitted')\n                  const receipt = await tx.wait()\n                  if (receipt.status === 1) {\n                    addPendingAction(action)\n                    clearActive()\n                    setApproveFlag(false)\n                    toastSuccess('Approved Successfully')\n                  }\n                } catch (err: any) {\n                  setApproveFlag(false)\n                }\n              } else if (isUpdate || haveTokenFlag) {\n                updateNeutralizePendingAction(action)\n              } else if (activeInfo.amount > 0) {\n                addPendingAction(action)\n              }\n            }}\n          >\n            {!approveStatus ? 'Approve & Add' : `${isUpdate || haveTokenFlag ? 'Update' : 'Add'} Action`}\n          </ActionButton>\n        )}\n      </Box>\n      {pendingActionList.length > 0 && (\n        <Box>\n          <TableBox\n            setNeutralizeType={(value) => {\n              setNeutralizeType(value)\n            }}\n          />\n        </Box>\n      )}\n\n      {pendingActionList.length > 0 && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 3 }}>\n          <ActionButton\n            onClick={() => {\n              onNeutralize()\n            }}\n            disabled={submitDisable || neutralizeLoading}\n            variant=\"contained\"\n            disableElevation\n          >\n            Submit Transaction\n          </ActionButton>\n        </Box>\n      )}\n      <NeutralizeEstimatedDashBoard />\n    </Box>\n  )\n}\n\nexport default NeutralizeRightBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport NeutralizeImg from 'assets/svg/neutralize.svg'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'components/uikit'\nimport { BtleftCard, BtrightCard, waistyle } from './StyleCommon'\nimport NeutralizeRightBox from './NeutralizeRight'\n\nconst ImgBox = styled('div')`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 539px;\n  margin: auto;\n\n  img {\n    width: 539px;\n    height: 368.98px;\n  }\n\n  .nutralize_action {\n    position: absolute;\n    display: flex;\n    width: 100px;\n    top: 0;\n    right: 43px;\n  }\n\n  .collateral_action {\n    bottom: 0;\n    left: 0;\n    position: absolute;\n    display: flex;\n\n    p {\n      flex-direction: column;\n    }\n  }\n`\n\nconst OrderWrap = styled('span')`\n  font-family: PingFangSC-Medium, sans-serif;\n  display: block;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 25px;\n  font-weight: 500;\n  font-size: 20px;\n  border: 1px solid #000000;\n  color: #000000;\n  margin-right: 13px;\n  flex: none;\n`\n\nconst Text = styled('p')`\n  span {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 22px;\n    color: #000000;\n    white-space: nowrap;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst CustomButton = styled(Button)`\n  box-shadow: none !important;\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%) !important;\n  color: #000 !important;\n  border-radius: 20px !important;\n  height: 24px !important;\n  line-height: 24px !important;\n  font-family: PingFangSC-Medium, sans-serif !important;\n  font-weight: 500 !important;\n  font-size: 12px !important;\n  letter-spacing: 0.02em !important;\n  margin-top: 13px !important;\n  white-space: nowrap !important;\n`\n\nfunction NeutralizetBox() {\n  return (\n    <>\n      <div style={waistyle}>\n        <BtleftCard>\n          <ImgBox>\n            <img src={NeutralizeImg} alt=\"\" />\n            <div className=\"action nutralize_action\">\n              <OrderWrap>1</OrderWrap>{' '}\n              <Text>\n                <span>Neutralize</span>\n              </Text>\n            </div>\n\n            <div className=\"action collateral_action\">\n              <OrderWrap>2</OrderWrap>{' '}\n              <Text>\n                <span>\n                  Get back the <br /> collateral to wallet\n                </span>\n                <Link to=\"/collateral/manage\">\n                  <CustomButton>Collateral Management</CustomButton>\n                </Link>\n              </Text>\n            </div>\n          </ImgBox>\n        </BtleftCard>\n        <BtrightCard>\n          <NeutralizeRightBox />\n        </BtrightCard>\n      </div>\n    </>\n  )\n}\n\nexport default NeutralizetBox\n","import React, { memo, useEffect, useMemo, useState } from 'react'\nimport { Box } from '@mui/material'\nimport { Link } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport { BTitle } from 'components/CommonComponent'\nimport Select from 'components/Select'\nimport { useWeb3React } from 'web3-react-core'\nimport { useShortActiveAction, useShortPendingAction, useShortInfo } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { useAppSelector } from 'state'\nimport { ArrowLine } from 'components/uikit'\nimport { TokenUtils } from 'utils/transformHelper'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { isSupportedChainId } from 'utils/web3React'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { SupportedChainId } from 'config/constants/chains'\nimport Logo from 'components/Logo'\nimport DashboardContent from './components/DashboardContent'\nimport ShortPannel from './components/ShortPannel'\nimport { ActionButton, ShortPageWraperStyle } from './components/StyleCommon'\nimport NeutralizeBox from './components/NeutralizeImg'\n\nconst Wrapper = styled('div')`\n  padding-right: 40px;\n  height: 80vh;\n  overflow: scroll;\n  min-width: 1200px;\n  padding-bottom: 30px;\n`\nconst Tip = styled('div')`\n  font-size: 14px;\n`\n\nfunction DashboardPage() {\n  const { chainId } = useWeb3React()\n\n  const { clearAllPendingAction } = useShortPendingAction()\n\n  const { pendingActionList } = useShortPendingAction()\n  const { setActionInfo, setActiveAmount, setActiveTab, clearActive, activeInfo } = useShortActiveAction()\n  const activeTab = useAppSelector((state) => state.short.activeTab)\n  const shortAmount = useMemo(() => {\n    const _shortInfo = pendingActionList.filter((item) => item.tokenType === TokenType.SHORT)\n    return (_shortInfo.length && _shortInfo[0].amount) || ''\n  }, [pendingActionList])\n\n  const [pageActiveTab, setPageActiveTab] = useState<any>(activeTab)\n  const { onChangeCollateralIndex } = useShortInfo()\n\n  const { currentMintToken, currentPosition, collateralIndex } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n  const mintTokens = useMemo(() => {\n    if (isSupportedChainId(chainId)) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      return Object.keys(mintTokenChainConfigs[chainId as SupportedChainId].tokens).map((key) => {\n        return {\n          token: _tokens[key as MintTokenKey].symbol,\n          address: _tokens[key as MintTokenKey].address,\n          decimals: _tokens[key as MintTokenKey].decimals,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={_tokens[key as MintTokenKey].logo}\n              symbol={_tokens[key as MintTokenKey].symbol}\n            />\n          ),\n        }\n      })\n    }\n    return []\n  }, [chainId])\n\n  useEffect(() => {\n    setPageActiveTab(activeTab)\n  }, [activeTab])\n\n  useEffect(() => {\n    onChangeCollateralIndex({\n      ratio: Number(TokenUtils.formatTokenAmount(collateralIndex.collateralRatio, 2)),\n      coverage: Number(TokenUtils.formatTokenAmount(collateralIndex.prepaidInterestCoverage, 0)),\n    })\n  }, [collateralIndex, onChangeCollateralIndex])\n\n  return (\n    <Box sx={ShortPageWraperStyle.box}>\n      <BTitle>Short & Neutralize</BTitle>\n      <Wrapper>\n        <Box sx={ShortPageWraperStyle.topBox}>\n          <Select\n            selectValue={currentMintToken}\n            options={mintTokens}\n            isGroup={false}\n            onChange={(e) => {\n              handleChangeCurrentPosition(e)\n              clearAllPendingAction()\n              setActiveAmount('')\n              clearActive()\n              setActionInfo({\n                token: e as unknown as string,\n                tokenType: pageActiveTab === 1 ? TokenType.SHORT : TokenType.NEUTRALIZE,\n              })\n            }}\n          />\n\n          {currentPosition.isEnable && (\n            <Box\n              sx={{\n                display: 'flex',\n                gap: '12px',\n              }}\n            >\n              {pageActiveTab === 1 && (\n                <ActionButton\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={() => {\n                    console.log('activeInfo :>> ', activeInfo)\n                    clearActive()\n                    setActionInfo({ token: currentMintToken as unknown as string, tokenType: TokenType.SHORT })\n                    setActiveAmount(Number(shortAmount) || '')\n                    if (activeTab !== 1) {\n                      clearAllPendingAction()\n                    }\n\n                    setPageActiveTab(1)\n                    setActiveTab(1)\n                  }}\n                >\n                  Short {shortAmount && TokenUtils.formatFourDecimals(Number(shortAmount))}\n                </ActionButton>\n              )}\n              {Number(shortAmount) <= 0 && (\n                <ActionButton\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={() => {\n                    clearAllPendingAction()\n                    setActiveTab(2)\n                    setPageActiveTab(2)\n\n                    setActionInfo({ token: currentMintToken as unknown as string, tokenType: TokenType.NEUTRALIZE })\n                  }}\n                >\n                  Neutralize\n                </ActionButton>\n              )}\n            </Box>\n          )}\n        </Box>\n        {!currentPosition.isEnable && (\n          <Link to=\"/collateral\">\n            {' '}\n            <Tip>\n              Please enable the collateral of {currentPosition.mintTokenInfo.symbol} first <ArrowLine />\n            </Tip>\n          </Link>\n        )}\n        {currentPosition.isEnable && (\n          <>\n            <DashboardContent />\n            {pageActiveTab === 1 && <ShortPannel />}\n            {pageActiveTab === 2 && <NeutralizeBox />}\n          </>\n        )}\n      </Wrapper>\n    </Box>\n  )\n}\n\nexport default memo(DashboardPage)\n","import React from 'react'\n\nexport default function Logo(props: { token: string; symbol: string; imgprops?: React.ImgHTMLAttributes<HTMLImageElement> }) {\n  return <img {...props.imgprops} style={{width: 22, height: 22, ...props.imgprops?.style}} src={props.token} alt={props.symbol}  />\n}\n","import { useAppDispatch, useAppSelector } from 'state'\nimport { useWeb3React } from 'web3-react-core'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport useToast from 'hooks/useToast'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport { ContractTransaction } from 'ethers'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { chainConfigs, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport {\n  ActionType,\n  NeetralizePendingAction,\n  PendingAction,\n  TokenType,\n  updateActiveAmount,\n  updateActionInfo,\n  updateActiveActionIndex,\n  setShortPendingAction,\n  updateActiveTab,\n  updateShortRateInfo,\n} from './shortSlice'\n\nexport function useShortActiveTokenApprove() {\n  const { account, chainId } = useWeb3React()\n  const activeInfo = useAppSelector((state) => state.short.activeInfo)\n  // const { position } = useCurrentCpt()\n  const { currentPosition } = usePositionInfo()\n  const { onCheckApprove } = useCheckApprove()\n  const { handleApprove } = useApprove(\n    account,\n    activeInfo.token ? chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address : '0',\n  )\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [checkApproveLoading, setCheckApproveLoading] = useState(false)\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    if (activeInfo.token) {\n      setCheckApproveLoading(true)\n      onCheckApprove(\n        account,\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address,\n        currentPosition.positionAddress,\n      )\n        .then((res) => {\n          if (res && res._hex > 0) {\n            setApproveStatus(true)\n          } else {\n            setApproveStatus(false)\n          }\n        })\n        .catch(() => {\n          setApproveStatus(false)\n        })\n        .finally(() => {\n          setCheckApproveLoading(false)\n        })\n    }\n\n    // console.log('valueToKeyMap[activeInfo.token]', activeInfo.token, valueToKeyMap[activeInfo.token])\n  }, [account, activeInfo, chainId, currentPosition.positionAddress, onCheckApprove])\n  const onApprove = useCallback(async () => {\n    try {\n      setApproveStatus(true)\n      const info = await handleApprove(currentPosition.positionAddress)\n\n      return info as ContractTransaction\n    } catch (error: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${error.reason}`)\n      throw error\n    }\n  }, [handleApprove, currentPosition.positionAddress, toastError])\n\n  return { approveStatus, onApprove, checkApproveLoading }\n}\n\n// short active action and info\nexport function useShortActiveAction() {\n  const dispatch = useAppDispatch()\n  const { activeAmount, activeInfo, activeIndex, neutralizeType } = useAppSelector((state) => state.short)\n  const { pendingActionList } = useShortPendingAction()\n  const setActionInfo = useCallback(\n    (data: { token?: string; tokenType?: TokenType } = {}) => {\n      dispatch(updateActionInfo({ activeInfo: data }))\n      const _index = pendingActionList.findIndex(\n        (item) => item.token === data.token && item.tokenType === data.tokenType,\n      )\n      if (_index >= 0) {\n        dispatch(updateActiveActionIndex({ index: _index }))\n      }\n    },\n    [dispatch, pendingActionList],\n  )\n  const setActiveTab = useCallback(\n    (index: number) => {\n      dispatch(updateActiveTab({ index }))\n    },\n    [dispatch],\n  )\n  const setActionIndex = useCallback(\n    (index: number) => {\n      dispatch(updateActiveActionIndex({ index }))\n    },\n    [dispatch],\n  )\n  const setActiveAmount = useCallback(\n    (amount: any) => {\n      dispatch(updateActiveAmount({ amount }))\n    },\n    [dispatch],\n  )\n  const clearActive = useCallback(() => {\n    setActionInfo()\n    setActiveAmount('')\n    setActionIndex(-1)\n  }, [setActionIndex, setActionInfo, setActiveAmount])\n\n  // const { approveStatus, onApprove } = useShortActiveTokenApprove()\n  const _activeInfo = useMemo(() => {\n    if (activeInfo?.token) {\n      return {\n        ...activeInfo,\n        amount: activeAmount,\n        activeIndex,\n        // approveStatus,\n      }\n    }\n    return { token: null, amount: '', tokenType: null, activeIndex: -1, approveStatus: false }\n  }, [activeAmount, activeIndex, activeInfo])\n\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return {\n    setActionInfo,\n    setActiveAmount,\n    clearActive,\n    setActiveTab,\n    activeInfo: _activeInfo,\n    setActionIndex,\n    onChangeCollateralIndex,\n  }\n}\n\nexport function useShortPendingAction() {\n  const dispatch = useAppDispatch()\n  const { pendingActions } = useAppSelector((state) => state.short)\n  const _pendingActions = useMemo(() => new Map(pendingActions), [pendingActions])\n  // add action\n  const addPendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = _pendingActions.get(data.token) || []\n      _pendingActions.set(data.token, [..._actions, { ...data, type: ActionType.ADD }])\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // delete action\n  const deletePendingAction = useCallback(\n    (token: string, tokenType: TokenType) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.tokenType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // clear all action\n  const clearAllPendingAction = useCallback(() => {\n    dispatch(setShortPendingAction({ actions: new Map() }))\n  }, [dispatch])\n\n  // update action\n  const updatePendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.tokenType === data.tokenType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const updateNeutralizePendingAction = useCallback(\n    (data: Pick<NeetralizePendingAction, 'amount' | 'price' | 'token' | 'tokenType' | 'neutralizeType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.neutralizeType === data.neutralizeType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const deleteNeutralizePendingAction = useCallback(\n    (token: string, tokenType: any) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.neutralizeType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n\n  // get token type\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActions.forEach((item, index) => {\n      _map.set(\n        index,\n        item.map((i) => i.tokenType),\n      )\n    })\n    return _map\n  }, [pendingActions])\n\n  const pendingActionList = useMemo(() => {\n    return Array.from(pendingActions.values()).flat()\n  }, [pendingActions])\n\n  const tokenAmount = useMemo(() => {\n    const _obg = {}\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY || item.tokenType === TokenType.WithDraw) {\n        _obg[item.token] = item.amount\n      }\n    })\n    return _obg\n  }, [pendingActionList])\n\n  const shortAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SHORT) {\n        _amount = item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const neutralizeAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAllAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAmount = useMemo(() => {\n    const _amount = new Map<string, number>()\n    pendingActions.forEach((items) => {\n      const item = items.filter((i) => i.tokenType === TokenType.SUPPLY)[0]\n      if (item) {\n        _amount.set(item.token, item.amount)\n      }\n    })\n    return _amount\n  }, [pendingActions])\n  return {\n    addPendingAction,\n    clearAllPendingAction,\n    deletePendingAction,\n    updatePendingAction,\n    deleteNeutralizePendingAction,\n    updateNeutralizePendingAction,\n    pendingTokenTypes,\n    pendingActions,\n    pendingActionList,\n    tokenAmount,\n    shortAmount,\n    supplyAmount,\n    supplyAllAmount,\n    neutralizeAmount,\n  }\n}\n\nexport function useShortInfo() {\n  const { rateInfo, activeTab, activeInfo,neutralizeType  } = useAppSelector((state) => state.short)\n\n  const dispatch = useAppDispatch()\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n  return {\n    rateInfo,\n    onChangeCollateralIndex,\n    activeTab,\n    activeInfo,neutralizeType\n  }\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","export const MintThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n\nexport const LiquidationThresholdValue = {\n  days: 10,\n  ratio: 110,\n}\n\nexport const ShortThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n"],"sourceRoot":""}