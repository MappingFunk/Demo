{"version":3,"sources":["views/MyPage/components/Action.tsx","views/MyPage/components/Title.tsx","views/MyPage/components/icon/History.tsx","views/MyPage/components/HoldingsWallet.tsx","views/MyPage/components/OutstandingDebt.tsx","views/MyPage/index.tsx","hooks/useHashPowerToken.ts","components/Table/icon/SortIcon.tsx","components/Table/Table.tsx","state/Short/hooks.ts","hooks/useApprove.ts","components/Tabs/index.tsx","utils/addAsset.ts"],"names":["ActionButton","styled","Button","_templateObject","_taggedTemplateLiteral","claimHelper","ButtonStyled","_templateObject2","contracts","Action","_ref","row","address","rewardsData","signer","useSystemParams","claimStatus","setClaimStatus","useState","setRefresh","useHashPowerToken","connector","active","chainId","account","useWeb3React","toastInfo","toastSuccess","toastError","useToast","ticker","walletTokenBalance","isAdding","setIsAdding","addToMetaMask","useCallback","async","addAsset","tokenSymbol","useEffect","walletRewards","avatarRewards","epochReward","toNumber","claimAll","claimContract","getContract","abi","params","push","avatar","Number","txInfo","multipleClaim","toLargeUnits","tokens","WBTC","decimals","claimRewardsList","window","localStorage","getItem","JSON","parse","_data","id","uuid","txHash","hash","date","Date","getTime","token","type","length","setItem","stringify","ToastTitle","submited","_jsx","TransactionSubmittedInfo","content","result","wait","success","state","e","failed","reason","children","_jsxs","Stack","direction","spacing","disabled","onClick","Title","TitleWrap","props","HistoryIcon","Svg","viewBox","fill","d","columns","numeric","disablePadding","isSort","label","HoldingsWallet","hashPowerTokenList","Card","style","marginBottom","Link","to","Table","dataSource","pagination","isMyPage","index","labelId","_Fragment","StyledTableCell","paddingLeft","component","scope","src","TokensIcon","display","marginRight","float","alt","tokensValues","TokenUtils","formatFourDecimals","formatWBTC","formatNumber","position","avatarAssetList","OutstandingDebt","changeCPT","useUpdataCurrentCPT","setActiveTab","useShortActiveAction","positionInfoValues","totalAssetsValues","formatInfinity","cRate","toString","concat","gDays","balance","toSmallUnits","toFixed","color","fontSize","fontFamily","Wrapper","Box","CommonCard","_templateObject3","SubTitle","_templateObject4","ClaimButton","_templateObject5","uniswapV2Multicall","minerInterface","ethers","utils","Interface","MinerABI","BlockUpdaterABI","MyPage","prevEpoch","useEpoch","library","walletTotal","setWalletTotal","avatarTotal","setAvatarTotal","dailyInterestRewards","setDailyInterestRewards","dailyObligation","setDailyObligation","setRewardsData","allRewards","setAllRewards","login","logout","useAuth","onPresentConnectModal","useWalletModal","isLogin","useMemo","isSupportedChainId","positionAll","usePositionInfo","item","pendingReward","updaterAddress","lastModifiedEpoch","_signer","getSigner","updater","miner","holderInfos","holderInfoMapping","console","log","err","_pendingReward","_tokens","mintTokenChainConfigs","provider","getProviderAndSigner","INFURA_NETWORK_URLS","multicall","Multicall","key","Object","prototype","hasOwnProperty","call","tokenInfo","positionInfo","symbol","isEnable","isZero","holderInfoMappingCalls","target","callData","encodeFunctionData","functionSignature","positionAddress","addAbi","blockUpdater","returnData","aggregate","awaitRewardsData","data","Promise","all","walletEstimateDailyReward","rewards","avatarEstimateDailyReward","_walletTotal","_avatarTotal","_dailyInterestRewards","_dailyObligation","_rewardsAll","WBTCRouter","USDT","lpAllRewards","rewardsTransfromToUsdt","usdt","lptoken","totalRwardsWbtc","reduce","acc","reward","totalRwardsUsdt","totalUSDT","formatCurrencyTwoDecimals","rewardPannel","Grid","container","lineHeight","xs","dir","BTitle","formatNumberWithUnits","paddingTop","paddingBottom","Divider","width","height","margin","className","epoch","includes","replace","Tabs","tabsStyle","minHeight","tabStyle","tab","React","memo","hashPowerToken","useContext","HashPowerTokenContext","undefined","Error","svg","SortIcon","order","xmlns","TableCell","tableCellClasses","head","border","body","borderBottom","StyledTableRow","TableRow","cursor","BoxWrapper","descendingComparator","a","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","map","el","sort","EnhancedTableHead","onRequestSort","TableHead","headCell","sortDirection","TableSortLabel","property","event","IconComponent","marginLeft","EnhancedTable","rowClick","pages","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleClick","name","selectedIndex","indexOf","newSelected","slice","dataSourceDom","hover","role","tabIndex","textAlign","colSpan","rowSpan","TableContainer","sx","minWidth","handleRequestSort","TableBody","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onChangePage","onRowsPerPageChange","parseInt","value","useShortActiveTokenApprove","activeInfo","useAppSelector","short","currentPosition","onCheckApprove","useCheckApprove","handleApprove","useApprove","approveStatus","setApproveStatus","checkApproveLoading","setCheckApproveLoading","chainConfigs","valueToKeyMap","then","res","_hex","catch","finally","onApprove","error","dispatch","useAppDispatch","activeAmount","activeIndex","pendingActionList","useShortPendingAction","setActionInfo","arguments","updateActionInfo","_index","findIndex","tokenType","updateActiveActionIndex","updateActiveTab","setActionIndex","setActiveAmount","amount","updateActiveAmount","clearActive","_activeInfo","onChangeCollateralIndex","ratio","coverage","updateShortRateInfo","rateInfo","rate","pendingActions","_pendingActions","Map","addPendingAction","_actions","get","set","ActionType","ADD","setShortPendingAction","actions","deletePendingAction","_nextList","filter","clearAllPendingAction","updatePendingAction","splice","updateNeutralizePendingAction","neutralizeType","deleteNeutralizePendingAction","pendingTokenTypes","_map","forEach","i","Array","from","values","flat","tokenAmount","_obg","TokenType","SUPPLY","WithDraw","shortAmount","_amount","SHORT","neutralizeAmount","NEUTRALIZE","supplyAllAmount","supplyAmount","items","useShortInfo","activeTab","_ref2","spender","contract","ERC20","allowance","owner","approve","constants","MaxUint256","AntTabs","TabIndicatorProps","justifyContent","backgroundColor","maxWidth","borderRadius","background","AntTab","Tab","disableRipple","theme","textTransform","breakpoints","up","fontWeight","opacity","typography","fontWeightMedium","withRouter","defaultTabsValue","history","setValue","onChange","handleChange","newValue","it","getProvider","request","method","options"],"mappings":"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","file":"static/js/16.2eed4533.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Button, Stack } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport uuid from 'uuid/dist/v4'\nimport { Button as ButtonStyled } from 'components/uikit/components/Button'\nimport { useWeb3React } from 'web3-react-core'\nimport tokens from 'config/constants/tokens'\nimport { toLargeUnits } from 'utils/transformHelper'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport addAsset from '../../../utils/addAsset'\nimport { getContract } from '../../../utils/web3React'\nimport useToast from '../../../hooks/useToast'\nimport useSystemParams from '../../../hooks/useSystemParams'\nimport useHashPowerToken from '../../../hooks/useHashPowerToken'\nimport contracts from '../../../config/constants/contracts'\n\nconst ActionButton = styled(Button)`\n  text-transform: none;\n  cursor: pointer;\n  font-family: PingFangSC-Regular, sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  color: #2aa1ff;\n  padding: 0;\n`\nexport const AlertButton = styled(ButtonStyled)`\n  box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.043);\n  border-radius: 14px;\n  background: linear-gradient(270deg, #7ae9f1 0%, #61c3f7 100%);\n  border-radius: 14px;\n  font-size: 14px;\n  height: 32px;\n  line-height: 32px;\n  color: #000;\n  font-weight: normal;\n`\n\nconst { claimHelper } = contracts\nfunction Action({ row, address, rewardsData }) {\n  const { signer } = useSystemParams()\n  const [claimStatus, setClaimStatus] = useState(false)\n  const { setRefresh } = useHashPowerToken()\n  const { connector, active, chainId, account } = useWeb3React()\n  const { toastInfo, toastSuccess, toastError } = useToast()\n  const { ticker } = row\n  const { walletTokenBalance } = useHashPowerToken()\n  const [isAdding, setIsAdding] = useState(false)\n\n  const addToMetaMask = useCallback(async () => {\n    if (active && connector && ticker) {\n      setIsAdding(true)\n      await addAsset({ connector, tokenSymbol: ticker, chainId })\n      setIsAdding(false)\n    }\n  }, [connector, active, chainId, ticker])\n\n  useEffect(() => {\n    if (!rewardsData) {\n      return\n    }\n    if (!rewardsData.walletRewards && !rewardsData.avatarRewards) {\n      setClaimStatus(true)\n      return\n    }\n    if (\n      rewardsData.walletRewards.epochReward.toNumber() === 0 &&\n      rewardsData.avatarRewards.epochReward.toNumber() === 0\n    ) {\n      setClaimStatus(true)\n    }\n  }, [rewardsData, row, walletTokenBalance])\n  const claimAll = useCallback(async () => {\n    if (signer) {\n      const claimContract = getContract(signer, claimHelper.abi, claimHelper.address[chainId])\n      if (claimContract) {\n        try {\n          const params = []\n          params.push([row.address[chainId], account])\n\n          if (row.avatar && Number(row.avatar) > 0) {\n            params.push([row.address[chainId], row.avatar])\n          }\n          setClaimStatus(true)\n          // }\n          const txInfo = await claimContract.multipleClaim(params)\n          const avatarRewards = toLargeUnits(rewardsData.avatarRewards[0], tokens.WBTC.decimals)\n          const walletRewards = toLargeUnits(rewardsData.walletRewards[0], tokens.WBTC.decimals)\n          if (txInfo) {\n            let claimRewardsList = window.localStorage.getItem('claimRewardsList')\n            if (claimRewardsList) {\n              claimRewardsList = JSON.parse(claimRewardsList)\n              const _data = [\n                // @ts-ignore\n                ...claimRewardsList,\n                {\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'My Wallet',\n                },\n              ]\n              if (params.length > 1) {\n                _data.push({\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'Collateral',\n                })\n              }\n              window.localStorage.setItem('claimRewardsList', JSON.stringify(_data))\n            } else {\n              const _data = [\n                {\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'My Wallet',\n                },\n              ]\n              if (params.length > 1) {\n                _data.push({\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'Total Collateral',\n                })\n              }\n              window.localStorage.setItem('claimRewardsList', JSON.stringify(_data))\n            }\n\n            toastInfo(ToastTitle.submited, <TransactionSubmittedInfo txHash={txInfo.hash} content='Waiting for confirmation'/>)\n            const result = await txInfo.wait()\n            toastSuccess(ToastTitle.success, <TransactionSubmittedInfo txHash={txInfo.hash} content='Transaction has been confirmed'/>)\n            setRefresh((state) => !state)\n\n            if (result) {\n              setClaimStatus(false)\n            }\n          }\n        } catch (e: any) {\n          setClaimStatus(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    }\n  }, [account, chainId, rewardsData, row, setRefresh, signer, toastError, toastInfo, toastSuccess])\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={2}>\n        <ActionButton disabled={claimStatus} onClick={claimAll}>\n          Claim Rewards\n        </ActionButton>\n        {/* <ActionButton\n          onClick={() => {\n            window.open(\n              `https://app.uniswap.org/#/swap?inputCurrency=${tokens.WBTC.address[chainId]}&outputCurrency=${row.address[chainId]}&chain=${SupportedChainId[chainId]}`,\n            )\n          }}\n        >\n          Uniswap Trade\n        </ActionButton> */}\n        <ActionButton disabled={isAdding} onClick={addToMetaMask}>\n          Add to Metamask\n        </ActionButton>\n      </Stack>\n    </div>\n  )\n}\n\nexport default Action\n","import React from 'react';\nimport {styled} from \"@mui/material/styles\";\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  h3 {\n    font-family: 'Heebo Medium';\n    font-weight: 500;\n    font-size: 22px;\n    line-height: 32px;\n    color: #000000;\n    margin-bottom: 20px;\n  }\n  a {\n    display: flex;\n    align-items: center;\n    svg{\n      width: 13px;\n      height: 13px;\n      margin-right: 10px;\n    }\n    \n    font-family: 'PingFang SC';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.02em;\n    color: #2AA1FF;\n  }\n\n`\n\nfunction TitleWrap(props) {\n  const {children} = props;\n  return (\n    <Title {...props}>{children}</Title>\n  );\n}\n\nexport default TitleWrap;\n","import React from 'react';\nimport {Svg} from \"components/uikit\";\n\nfunction HistoryIcon(props) {\n  return (\n    <Svg viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n        <path d=\"M13.327 4.31099C14.812 7.49536 13.4342 11.2808 10.2496 12.7657C9.08552 13.3087 7.78443 13.4867 6.51733 13.2763C5.25023 13.066 4.07644 12.4771 3.15028 11.5872C3.03172 11.4696 2.96415 11.31 2.96216 11.143C2.96016 10.976 3.02389 10.815 3.1396 10.6945C3.25531 10.5741 3.41372 10.504 3.58067 10.4993C3.74761 10.4946 3.9097 10.5558 4.03197 10.6695C4.77291 11.3815 5.71197 11.8526 6.72567 12.0209C7.73938 12.1892 8.78028 12.0467 9.71151 11.6123C12.2592 10.4245 13.3614 7.3964 12.1736 4.84872C10.9855 2.30104 7.95738 1.19917 5.40938 2.38695C4.23441 2.93388 3.31272 3.90895 2.83274 5.11281L3.69501 5.18536C3.7507 5.18996 3.80419 5.20915 3.85011 5.24099C3.89603 5.27283 3.93275 5.3162 3.95659 5.36674C3.98042 5.41728 3.99053 5.4732 3.98589 5.52889C3.98124 5.58457 3.96202 5.63805 3.93015 5.68395L2.23678 8.12122C2.17383 8.21198 2.08823 8.28469 1.98849 8.33213C1.88874 8.37958 1.77832 8.4001 1.66819 8.39168C1.56008 8.38327 1.45661 8.34416 1.36997 8.27894C1.28334 8.21372 1.21713 8.12511 1.17915 8.02354L0.176556 5.34604C0.157686 5.29578 0.151838 5.24157 0.159556 5.18844C0.167275 5.13532 0.18831 5.08501 0.220702 5.0422C0.253094 4.99939 0.295791 4.96547 0.344818 4.94361C0.393845 4.92174 0.447608 4.91263 0.501102 4.91713L1.51928 5.00272C1.79126 4.17894 2.229 3.41955 2.80554 2.77133C3.38208 2.1231 4.08522 1.59976 4.87165 1.23354C8.05665 -0.251735 11.8421 1.12599 13.327 4.31068V4.31099ZM7.24274 3.18145C7.40323 3.18148 7.55779 3.24215 7.67544 3.3513C7.79309 3.46046 7.86516 3.61004 7.87719 3.77008L7.8791 3.81781V6.94713L9.78597 8.03818C9.92495 8.11771 10.0288 8.24673 10.0769 8.39947C10.125 8.55222 10.1137 8.71747 10.0453 8.86227L10.0224 8.90681C9.94279 9.04574 9.81375 9.14956 9.66101 9.19756C9.50827 9.24556 9.34304 9.23423 9.19829 9.16581L9.15374 9.1429L7.08683 7.96054C6.95022 7.88242 6.83504 7.77173 6.75155 7.63833C6.66806 7.50494 6.61884 7.35297 6.60828 7.19595L6.60638 7.13199V3.81781C6.60638 3.64904 6.67342 3.48718 6.79276 3.36783C6.9121 3.24849 7.07397 3.18145 7.24274 3.18145V3.18145Z\" fill=\"#2AA1FF\"/>\n    </Svg>\n  );\n}\n\nexport default HistoryIcon;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'components/Card'\nimport { useWeb3React } from 'web3-react-core'\nimport Table, { StyledTableCell } from 'components/Table'\nimport { formatNumber, formatWBTC } from 'utils/formatTheValue'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport Action from './Action'\nimport Title from './Title'\nimport HistoryIcon from './icon/History'\nimport tokens, { TokensIcon } from '../../../config/constants/tokens'\nimport useHashPowerToken from '../../../hooks/useHashPowerToken'\n\nconst columns = [\n  {\n    id: 'ticker',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'markPrice',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Mark Price',\n  },\n  {\n    id: 'HoldingsWallet',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'In Wallet',\n  },\n  {\n    id: 'HoldingsAvatar',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'In Collateral',\n  },\n  {\n    id: 'claimableWallet',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimable - In Wallet',\n  },\n  {\n    id: 'claimableAvatar',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimable - In Collateral',\n  },\n  {\n    id: 'action',\n    numeric: false,\n    disablePadding: false,\n    isSort: false,\n    label: 'Action',\n  },\n]\n/*\n * will\n * add filter\n *\n *\n * */\nfunction HoldingsWallet({ rewardsData }) {\n  const { hashPowerTokenList, walletTokenBalance } = useHashPowerToken()\n  const { account } = useWeb3React()\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Title>\n        <h3>Holdings - Hashpower Token</h3>\n        <Link to=\"/history/claimed/0\">\n          <HistoryIcon /> Claimed History\n        </Link>\n      </Title>\n      <Table\n        columns={columns}\n        dataSource={hashPowerTokenList || []}\n        pagination={false}\n        isMyPage\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell style={{ paddingLeft: 0 }} component=\"th\" id={labelId} scope=\"row\">\n              <img\n                src={TokensIcon[row.ticker]}\n                style={{ display: 'block', marginRight: 7, float: 'left' }}\n                alt=\"icon\"\n              />\n              {row.ticker}\n            </StyledTableCell>\n            <StyledTableCell>{row.tokensValues ? TokenUtils.formatFourDecimals(formatWBTC(row.tokensValues[row.token])) : 0} WBTC</StyledTableCell>\n            <StyledTableCell>{walletTokenBalance ? formatNumber(walletTokenBalance[row.token]) : 0}</StyledTableCell>\n            <StyledTableCell>\n              {Number(row.position) && row.avatarAssetList ? formatNumber(row.avatarAssetList[row.token]) : 0}\n            </StyledTableCell>\n            <StyledTableCell>\n              {rewardsData && rewardsData[row.token] && rewardsData[row.token].walletRewards[0]\n                ? toLargeUnits(rewardsData[row.token].walletRewards.epochReward, tokens.WBTC.decimals)\n                : 0}{' '}\n              WBTC\n            </StyledTableCell>\n            <StyledTableCell>\n              {rewardsData && rewardsData[row.token] && rewardsData[row.token].avatarRewards[0]\n                ? toLargeUnits(rewardsData[row.token].avatarRewards.epochReward, tokens.WBTC.decimals)\n                : 0}{' '}\n              WBTC\n            </StyledTableCell>\n            <StyledTableCell>\n              <Action row={row} address={account} rewardsData={rewardsData && rewardsData[row.token]} />\n            </StyledTableCell>\n          </>\n        )}\n      />\n    </Card>\n  )\n}\nexport default HoldingsWallet\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'components/Card'\n// import { BigNumber } from '@ethersproject/bignumber'\nimport Table, { StyledTableCell } from 'components/Table'\nimport { Stack } from '@mui/material'\nimport { useShortActiveAction } from 'state/Short/hooks'\nimport { TokensIcon } from 'config/constants/tokens'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { formatWBTC, formatInfinity } from 'utils/formatTheValue'\nimport { toSmallUnits } from 'utils/transformHelper'\nimport { useUpdataCurrentCPT } from '../../../state/CollateralManage/hooks'\nimport Title from './Title'\nimport HistoryIcon from './icon/History'\n\nconst columns = [\n  {\n    id: 'ticker',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'markPrice',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Mark Price',\n  },\n  {\n    id: 'collateralMarkValue',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Collateral Value',\n  },\n  {\n    id: 'collateralRatio',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Collateral Ratio',\n  },\n  {\n    id: 'guaranteeDays',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Prepaid Interest Coverage',\n  },\n  {\n    id: 'OutstandingDebtPosition',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Outstanding Debt Position',\n  },\n  // {\n  //   id: 'dailyObligation',\n  //   numeric: true,\n  //   disablePadding: false,\n  //   isSort: true,\n  //   label: 'Daily  Obligation',\n  // },\n  {\n    id: 'action',\n    numeric: false,\n    disablePadding: false,\n    isSort: false,\n    label: 'Action',\n  },\n]\n\nfunction OutstandingDebt() {\n  const { hashPowerTokenList } = useHashPowerToken()\n  const { changeCPT } = useUpdataCurrentCPT()\n  const { setActiveTab } = useShortActiveAction()\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Title>\n        <h3>Outstanding Debt</h3>\n        <Link to=\"/history/obligation\">\n          <HistoryIcon />\n          Interest Paid History\n        </Link>\n      </Title>\n      <Table\n        columns={columns}\n        dataSource={hashPowerTokenList}\n        pagination={false}\n        isMyPage\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell style={{ paddingLeft: 0 }} component=\"th\" id={labelId} scope=\"row\">\n              <img\n                src={TokensIcon[row.ticker]}\n                style={{ display: 'block', marginRight: 7, float: 'left' }}\n                alt=\"icon\"\n              />\n              {row.ticker}\n            </StyledTableCell>\n            <StyledTableCell>{row.tokensValues ? formatWBTC(row.tokensValues[row.token]) : 0} WBTC</StyledTableCell>\n            <StyledTableCell>\n              {Number(row.positionInfoValues) && Number(row.positionInfoValues.totalAssetsValues)\n                ? formatWBTC(row.positionInfoValues.totalAssetsValues)\n                : 0}{' '}\n              WBTC\n            </StyledTableCell>\n            <StyledTableCell>\n              {Number(row.position) &&\n                row.positionInfoValues &&\n                (formatInfinity(row.positionInfoValues.cRate).toString('∞')\n                  ? `${formatInfinity(row.positionInfoValues.cRate)}%`\n                  : `${row.positionInfoValues.cRate}%`)}\n            </StyledTableCell>\n            <StyledTableCell>\n              {Number(row.position) && row.positionInfoValues && formatInfinity(row.positionInfoValues.gDays)} days\n            </StyledTableCell>\n            <StyledTableCell>\n              {Number(row.position) ? (row.balance / (toSmallUnits('1', row.decimals) as any as any)).toFixed(4) : 0}\n            </StyledTableCell>\n            {/* <StyledTableCell>{ Number(row.position) && row.positionInfoValues ? `≈ ${formatWBTC(row.positionInfoValues.totalObligation)}` : 0 } WBTC</StyledTableCell> */}\n            <StyledTableCell>\n              <Stack direction=\"row\" spacing={2}>\n                <Link\n                  style={{ color: '#2AA1FF', fontSize: '14px', fontFamily: 'PingFangSC-Regular,sans-serif' }}\n                  to=\"/collateral/manage\"\n                  onClick={() => {\n                    changeCPT(row)\n                  }}\n                >\n                  Manage Collateral\n                </Link>\n                <Link\n                  style={{ color: '#2AA1FF', fontSize: '14px', fontFamily: 'PingFangSC-Regular,sans-serif' }}\n                  to=\"/shortneutralize\"\n                  onClick={() => {\n                    setActiveTab(2)\n                    changeCPT(row)\n                  }}\n                >\n                  Neutralize\n                </Link>\n              </Stack>\n            </StyledTableCell>\n          </>\n        )}\n      />\n    </Card>\n  )\n}\n\nexport default OutstandingDebt\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Grid, Divider } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { BTitle, Title } from 'components/CommonComponent'\nimport { useWeb3React } from 'web3-react-core'\nimport Tabs from 'components/Tabs'\nimport Card from 'components/Card'\nimport { Button, useWalletModal } from 'components/uikit'\n// import { BigNumber } from '@ethersproject/bignumber'\nimport contracts from 'config/constants/contracts'\nimport { formatNumberWithUnits } from 'utils/formatTheValue'\nimport { getContract, getProviderAndSigner, getSigner, isSupportedChainId } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport MinerABI from 'config/abi/Miner.json'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useAuth from 'hooks/useAuth'\nimport BlockUpdaterABI from 'config/abi/BlockUpdater.json'\nimport { chainConfigs, SupportedChainId, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { ethers } from 'ethers'\nimport { INFURA_NETWORK_URLS } from 'config/constants/chains'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport Multicall from 'utils/multicall'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport HoldingsWallet from './components/HoldingsWallet'\nimport OutstandingDebt from './components/OutstandingDebt'\nimport tokens from '../../config/constants/tokens'\nimport useSystemParams from '../../hooks/useSystemParams'\nimport useEpoch from '../../hooks/useEpoch'\n\nconst Wrapper = styled('div')`\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n`\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 26px;\n  padding-right: 44px;\n  min-width: 1024px;\n  padding-bottom: 100px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst CommonCard = styled(Card)`\n  padding: 30px;\n  height: 100%;\n\n  &.rightPanel {\n    h4 {\n      line-height: 20px;\n    }\n  }\n  h4 {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 480;\n    font-size: 16px;\n    line-height: 22px;\n    color: black;\n  }\n\n  p {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-size: 40px;\n    font-weight: 550;\n    line-height: 1;\n    color: #6ed6f3;\n    margin-top: 12px;\n    margin-bottom: 8px;\n    letter-spacing: 1px;\n    sub {\n      font-size: 16px;\n    }\n  }\n  span {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-size: 14px;\n  }\n`\nconst SubTitle = styled(Title)`\n  margin-bottom: 14px;\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 22px;\n  line-height: 31px;\n  color: #000000;\n`\n\nconst ClaimButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%) !important;\n  border-radius: 20px !important;\n  box-shadow: none !important;\n  height: 30px !important;\n  line-height: 30px !important;\n  color: #000 !important;\n  font-size: 14px !important;\n  display: block !important;\n\n  &.disabled {\n    background: #ddd !important;\n    color: #eee !important;\n  }\n`\n\n// const TableCard = styled(Card)`\n//   margin-bottom: 20px;\n// `\n\nconst { claimHelper, uniswapV2Multicall } = contracts\nconst minerInterface = new ethers.utils.Interface(MinerABI)\nconst blockUpdaterInterface = new ethers.utils.Interface(BlockUpdaterABI)\nfunction MyPage() {\n  const { prevEpoch } = useEpoch()\n  const [claimStatus, setClaimStatus] = useState(false)\n  const { hashPowerTokenList, walletTokenBalance, setRefresh } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const { chainId, account, library, active } = useWeb3React()\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const [walletTotal, setWalletTotal] = useState(0)\n  const [avatarTotal, setAvatarTotal] = useState(0)\n  const [dailyInterestRewards, setDailyInterestRewards] = useState(0)\n  const [dailyObligation, setDailyObligation] = useState(0)\n  const [rewardsData, setRewardsData] = useState(null)\n  const [allRewards, setAllRewards] = useState([])\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, account)\n\n  const isLogin = useMemo(() => {\n    return active && chainId && isSupportedChainId(chainId)\n  }, [active, chainId])\n  const { positionAll } = usePositionInfo()\n\n  const claimAll = useCallback(async () => {\n    if (!account) {\n      onPresentConnectModal()\n      return\n    }\n\n    if (signer) {\n      const claimContract = getContract(signer, claimHelper.abi, claimHelper.address[chainId])\n      if (claimContract) {\n        try {\n          const params = []\n          for (const item of hashPowerTokenList) {\n            params.push([item.address[chainId], account])\n            if (item.avatar && Number(item.avatar) > 0) {\n              params.push([item.address[chainId], item.avatar])\n            }\n          }\n          setClaimStatus(true)\n          const txInfo = await claimContract.multipleClaim(params)\n          if (txInfo) {\n            toastInfo(ToastTitle.submited, <TransactionSubmittedInfo txHash={txInfo.hash} content='Waiting for confirmation'/>)\n            await txInfo.wait()\n            toastSuccess(ToastTitle.success, <TransactionSubmittedInfo txHash={txInfo.hash} content='Transaction has been confirmed'/>)\n            setRefresh((state) => !state)\n            setClaimStatus(false)\n          }\n        } catch (e: any) {\n          setClaimStatus(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    }\n  }, [\n    account,\n    chainId,\n    hashPowerTokenList,\n    setRefresh,\n    signer,\n    toastError,\n    toastInfo,\n    toastSuccess,\n    onPresentConnectModal,\n  ])\n  const pendingReward = useCallback(\n    async (abi, updaterAddress, token, address, decimals, balance, lastModifiedEpoch?) => {\n      if (library && chainId) {\n        const _signer = getSigner(library, address)\n        const updater = getContract(_signer, abi, updaterAddress)\n        const miner = getContract(_signer, MinerABI, tokens[token].address[chainId])\n\n        try {\n          if (updater && walletTokenBalance && miner) {\n            const holderInfos = await miner.holderInfoMapping(address)\n            console.log('holderInfos', holderInfos)\n            if (lastModifiedEpoch) {\n              return updater.pendingReward(balance, holderInfos[0], holderInfos[1], holderInfos[2])\n            }\n            return updater.pendingReward(\n              (toSmallUnits('1', decimals) as any) * balance,\n              holderInfos[0],\n              holderInfos[1],\n              holderInfos[2],\n            )\n          }\n        } catch (err) {\n          console.log('>err', abi, updaterAddress, token, address, decimals, balance, lastModifiedEpoch, err)\n        }\n      }\n\n      return 0\n    },\n    [chainId, library, walletTokenBalance],\n  )\n\n  const _pendingReward = useCallback(async () => {\n    if (isLogin && walletTokenBalance) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      const { provider } = getProviderAndSigner(INFURA_NETWORK_URLS[chainId as SupportedChainId], account, chainId)\n      const multicall = new Multicall(chainId, uniswapV2Multicall.address, uniswapV2Multicall.abi)\n\n      for (const key in _tokens) {\n        if (Object.prototype.hasOwnProperty.call(_tokens, key)) {\n\n          const tokenInfo = _tokens[key as MintTokenKey]\n          const positionInfo = positionAll[key as MintTokenKey]\n          if (!walletTokenBalance[tokenInfo.symbol] || !positionInfo.isEnable || (positionInfo.isEnable && positionInfo.balance.isZero())) {\n            continue\n          }\n\n\n          const holderInfoMappingCalls = [\n            {\n              target: tokenInfo.address,\n              callData: minerInterface.encodeFunctionData('holderInfoMapping', [account]),\n              functionSignature: 'holderInfoMapping',\n            },\n            {\n              target: tokenInfo.address,\n              callData: minerInterface.encodeFunctionData('holderInfoMapping', [positionInfo.positionAddress]),\n              functionSignature: 'holderInfoMapping',\n            },\n          ]\n          multicall.addAbi(tokenInfo.address, MinerABI)\n          multicall.addAbi(tokenInfo.blockUpdater, BlockUpdaterABI)\n          const {\n            returnData: { holderInfoMapping },\n          } = await multicall.aggregate(holderInfoMappingCalls)\n          // updater.pendingReward(\n          //   (toSmallUnits('1', decimals) as any) * balance,\n          //   holderInfos[0],\n          //   holderInfos[1],\n          //   holderInfos[2],\n          // )\n          // console.log('first', toSmallUnits(String(walletTokenBalance[tokenInfo.symbol]), tokenInfo.decimals))\n\n          // const pendingRewardCalls = holderInfoMapping.map(([holder], index)=> {\n          //   console.log('pendingRewardCalls', [\n          //     index === 0 ? toSmallUnits(walletTokenBalance[valueToKeyMap[key]], tokenInfo.decimals) : positionInfo.balance,\n          //     holder[1],\n          //     holder[2],\n          //     holder[3],\n          //   ])\n          //   return {\n          //     target: tokenInfo.blockUpdater,\n          //     callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n          //       index === 0 ? toSmallUnits(String(walletTokenBalance[tokenInfo.symbol]), tokenInfo.decimals) : positionInfo.balance,\n          //       holder[1],\n          //       holder[2],\n          //       holder[3],\n          //     ]),\n          //   }\n          // })\n        }\n      }\n    }\n  }, [account, chainId, isLogin, positionAll, walletTokenBalance])\n\n  const awaitRewardsData = useCallback(async () => {\n    const data = {}\n    for (const item of hashPowerTokenList) {\n      const [avatarRewards, walletRewards] = await Promise.all([\n        pendingReward(\n          item.blockUpdater.abi,\n          item.blockUpdater.address[chainId],\n          item.token,\n          item.position,\n          item.decimals,\n          (item.avatarAssetList && item.avatarAssetList[item.token]) || 0,\n        ),\n        pendingReward(\n          item.blockUpdater.abi,\n          item.blockUpdater.address[chainId],\n          item.token,\n          account,\n          item.decimals,\n          walletTokenBalance[item.token] || 0,\n        ),\n      ])\n      data[item.token] = {\n        walletRewards,\n        avatarRewards,\n        walletEstimateDailyReward: item.rewards * walletTokenBalance[item.token],\n        avatarEstimateDailyReward: item.avatarAssetList ? item.rewards * item.avatarAssetList[item.token] : 0,\n      }\n    }\n\n    setRewardsData(data)\n  }, [account, chainId, hashPowerTokenList, pendingReward, walletTokenBalance])\n  useEffect(() => {\n    if (hashPowerTokenList && hashPowerTokenList.length && walletTokenBalance) {\n      awaitRewardsData()\n    }\n  }, [awaitRewardsData, hashPowerTokenList, walletTokenBalance])\n\n  useEffect(() => {\n    _pendingReward()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLogin, walletTokenBalance])\n\n  useEffect(() => {\n    if (hashPowerTokenList && walletTokenBalance && rewardsData) {\n      let _walletTotal = 0\n      let _avatarTotal = 0\n      let _dailyInterestRewards = 0\n      let _dailyObligation = 0\n      const _rewardsAll = []\n      for (const item of hashPowerTokenList) {\n        if (walletTokenBalance[item.token]) {\n          _walletTotal +=\n            walletTokenBalance[item.token] *\n            Number(toLargeUnits(item.tokensValues[item.token], tokens.WBTC.decimals)) *\n            item.WBTCRouter.USDT\n        }\n        if (item.avatarAssetList) {\n          _avatarTotal +=\n            item.avatarAssetList[item.token] *\n            Number(toLargeUnits(item.tokensValues[item.token], tokens.WBTC.decimals)) *\n            item.WBTCRouter.USDT\n        }\n        if (rewardsData[item.token]) {\n          console.log('rewardsData[item.token].walletEstimateDailyReward :>> ', item.balance)\n          const walletEstimateDailyReward = rewardsData[item.token].walletEstimateDailyReward / 10 ** 8 // TODO resolve overflow\n          const avatarEstimateDailyReward = rewardsData[item.token].avatarEstimateDailyReward / 10 ** 8 // TODO resolve overflow\n          _dailyInterestRewards += (walletEstimateDailyReward + avatarEstimateDailyReward) * item.WBTCRouter.USDT\n          _dailyObligation += (((item.rewards / 10 ** 8) * item.balance) / 10 ** 6) * item.WBTCRouter.USDT\n\n          const walletRewards = Number(\n            toLargeUnits(rewardsData[item.token].walletRewards.epochReward, tokens.WBTC.decimals),\n          )\n          const avatarRewards = Number(\n            toLargeUnits(rewardsData[item.token].avatarRewards.epochReward, tokens.WBTC.decimals),\n          )\n          const lpAllRewards = walletRewards + avatarRewards\n          const rewardsTransfromToUsdt = (walletRewards + avatarRewards) * item.WBTCRouter.USDT\n          _rewardsAll.push({\n            rewards: lpAllRewards,\n            usdt: rewardsTransfromToUsdt,\n            lptoken: item.token,\n          })\n        }\n\n        setWalletTotal(_walletTotal)\n        setAvatarTotal(_avatarTotal)\n        setDailyInterestRewards(_dailyInterestRewards)\n        setDailyObligation(_dailyObligation)\n        setAllRewards(_rewardsAll)\n      }\n    }\n  }, [hashPowerTokenList, rewardsData, walletTokenBalance])\n\n  const totalRwardsWbtc = useMemo(() => {\n    const total = allRewards.reduce((acc, reward) => acc + reward.rewards, 0)\n    // return TokenUtils.formatTokenAmount(total);\n    return total\n  }, [allRewards])\n  const totalRwardsUsdt = useMemo(() => {\n    const totalUSDT = allRewards.reduce((acc, reward) => acc + reward.usdt, 0)\n    return TokenUtils.formatCurrencyTwoDecimals(totalUSDT)\n  }, [allRewards])\n\n  const rewardPannel = useMemo(() => {\n    return (\n      <Grid container style={{ marginBottom: 18, lineHeight: '20px', fontSize: '14px' }}>\n        <Grid item xs={6}>\n          <span>{(totalRwardsWbtc && totalRwardsWbtc.toFixed(8)) || totalRwardsWbtc} WBTC</span>\n        </Grid>\n        <Grid item xs={6} dir=\"rtl\">\n          <span>${totalRwardsUsdt}≈</span>\n        </Grid>\n      </Grid>\n    )\n  }, [totalRwardsUsdt, totalRwardsWbtc])\n  return (\n    <Wrapper>\n      <BTitle>My Page</BTitle>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <CommonCard>\n                  <SubTitle>Holdings - Synthetic Hashpower Token</SubTitle>\n                  <Grid container>\n                    <Grid item xs={6}>\n                      <h4>Hashpower Token in Wallet </h4>\n                      <p>\n                        <sub>≈</sub>${TokenUtils.formatNumberWithUnits(walletTotal)}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <h4>Hashpower Token in Collateral</h4>\n                      <p>\n                        <sub>≈</sub>${TokenUtils.formatNumberWithUnits(avatarTotal)}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </CommonCard>\n              </Grid>\n              <Grid item xs={12} style={{ paddingTop: 20 }}>\n                <CommonCard style={{ paddingBottom: 33 }}>\n                  <SubTitle>Claimable Rewards</SubTitle>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      {rewardPannel}\n                      <Divider style={{ marginBottom: 18 }} />\n                      <Grid container style={{ marginBottom: 20, lineHeight: '20px', fontSize: '14px' }}>\n                        <Grid item xs={6}>\n                          <span>Total</span>\n                        </Grid>\n                        <Grid item xs={6} dir=\"rtl\">\n                          <span>${totalRwardsUsdt}≈</span>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={6} style={{ paddingTop: 0, paddingLeft: 97 }}>\n                      <img\n                        src=\"/images/eth.png\"\n                        style={{ width: 108, height: 108, margin: '5px 0 0 35px', display: 'block' }}\n                        alt=\"illustration\"\n                      />\n                      <ClaimButton\n                        disabled={claimStatus}\n                        style={{ margin: '30px 0 0' }}\n                        className={`${claimStatus ? 'disabled' : ''}`}\n                        onClick={claimAll}\n                      >\n                        Claim All Rewards\n                      </ClaimButton>\n                    </Grid>\n                  </Grid>\n                </CommonCard>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <CommonCard className=\"rightPanel\">\n              <SubTitle>Epoch {prevEpoch.epoch} Balance</SubTitle>\n              <Grid container>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <h4>Rewards Earned</h4>\n                  <p>\n                    <sub>≈</sub>${formatNumberWithUnits(dailyInterestRewards)}\n                  </p>\n                </Grid>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <h4>Interest Paid</h4>\n                  <p>\n                    <sub>≈</sub>${formatNumberWithUnits(dailyObligation)}\n                  </p>\n                </Grid>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={12} style={{ marginBottom: 36 }}>\n                  <h4>Net Rewards</h4>\n                  <p>\n                    <sub>≈</sub>\n                    {formatNumberWithUnits(dailyInterestRewards - dailyObligation).includes('-')\n                      ? formatNumberWithUnits(dailyInterestRewards - dailyObligation).replace('-', '-$')\n                      : `$${formatNumberWithUnits(dailyInterestRewards - dailyObligation)}`}\n                  </p>\n                </Grid>\n              </Grid>\n            </CommonCard>\n          </Grid>\n        </Grid>\n        <div style={{ width: '100%' }}>\n          <Tabs\n            tabsStyle={{\n              minHeight: 36,\n              paddingLeft: 21,\n            }}\n            tabStyle={{\n              paddingTop: 0,\n              paddingBottom: 0,\n              minHeight: 32,\n              lineHeight: '32px',\n            }}\n            tab={[\n              {\n                label: 'All',\n                component: (\n                  <>\n                    <HoldingsWallet rewardsData={rewardsData} />\n                    {/* <HoldingsAvatar rewardsData={rewardsData} />    / */}\n                    <OutstandingDebt />\n                  </>\n                ),\n              },\n              {\n                label: 'Holdings',\n                component: <HoldingsWallet rewardsData={rewardsData} />,\n              },\n              // {\n              //   label: 'Holdings - Avatar',\n              //   component: <HoldingsAvatar rewardsData={rewardsData} />\n              // },\n              {\n                label: 'Outstanding Debt',\n                component: <OutstandingDebt />,\n              },\n            ]}\n          />\n        </div>\n      </Box>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MyPage)\n","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Svg = styled.svg`\n  font-size: 14px;\n  width: 10px;\n  height: 5px;\n  display: block;\n`\n\nfunction SortIcon({order}) {\n  return (\n    <span>\n        <Svg width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M0.284084 3.2146L4.81473 3.2146C5.03791 3.2146 5.17182 3.06953 5.06023 2.95794C4.89284 2.77939 2.89534 0.692616 2.79491 0.592183C2.67216 0.458272 2.40434 0.480591 2.29274 0.592183C2.21463 0.670297 0.161333 2.83519 0.0385814 2.95794C-0.0730109 3.08069 0.0720592 3.20344 0.284084 3.2146Z\"\n    fill={order === 'asc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n  <Svg  width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M4.81626 0.7854H0.285613C0.0624289 0.7854 -0.0714817 0.930471 0.0401105 1.04206C0.207499 1.22061 2.205 3.30738 2.30543 3.40782C2.42818 3.54173 2.69601 3.51941 2.8076 3.40782C2.88571 3.3297 4.93901 1.16481 5.06176 1.04206C5.17335 0.919311 5.02828 0.79656 4.81626 0.7854Z\"\n    fill={order === 'desc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n\n    </span>\n  );\n}\n\nexport default SortIcon;\n","import React, { useCallback } from 'react'\nimport { styled } from '@mui/material/styles'\nimport {\n  Box,\n  Table,\n  TableRow,\n  TableSortLabel,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n} from '@mui/material'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport SortIcon from './icon/SortIcon'\n\nexport const StyledTableCell = styled(TableCell)(() => ({\n  [`&.${tableCellClasses.head}`]: {\n    border: 'none',\n    color: 'rgba(0, 0, 0, 0.5)',\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    borderBottom: '1px solid #E2E8EE',\n  },\n}))\nexport const StyledTableRow = styled(TableRow)(() => ({\n  cursor: 'pointer',\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    fontSize: 14,\n    borderBottom: '1px solid rgba(226, 232, 238, 1)',\n  },\n}))\n\nconst BoxWrapper = styled(Box)`\n  height: 80%;\n  overflow: scroll;\n  &::-webkit-scrollbar,\n  .MuiTableContainer-root::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) {\n      return order\n    }\n    return a[1] - b[1]\n  })\n  console.log('stabilizedThis :>> ', stabilizedThis);\n  return stabilizedThis.map((el) => el[0])\n}\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, columns, isMyPage = false } = props\n  const createSortHandler = (property) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell, index) => (\n          <StyledTableCell\n            style={{ paddingLeft: index === 0 && isMyPage && 0 }}\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {!headCell.isSort ? (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            )}\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport default function EnhancedTable(props) {\n  const { dataSource, columns, content, pagination, rowClick, isMyPage, pages } = props\n\n  const [order, setOrder] = React.useState<Order>('desc')\n  const [orderBy, setOrderBy] = React.useState(columns[0].id)\n  const [selected, setSelected] = React.useState<readonly string[]>([])\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property) => {\n    console.log('p :>> ', property);\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  const handleClick = useCallback(\n    (event, name) => {\n      const selectedIndex = selected.indexOf(name)\n      let newSelected: readonly string[] = []\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name)\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1))\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1))\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1))\n      }\n\n      setSelected(newSelected)\n\n      if (rowClick) {\n        rowClick(event, name)\n      }\n    },\n    [rowClick, selected],\n  )\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n    if (pagination && props.onChangePage) {\n      props.onChangePage(newPage);\n    }\n  }\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const dataSourceDom = React.useCallback(() => {\n    if (dataSource && dataSource.length && pagination) {\n      if (pages) {\n        return stableSort(dataSource, getComparator(order, orderBy))\n          .map((row, index) => {\n            const labelId = `enhanced-table-checkbox-${index}`\n            return (\n              <StyledTableRow\n                hover\n                onClick={(event) => handleClick(event, row.ticker)}\n                role=\"checkbox\"\n                tabIndex={-1}\n                key={`row_${labelId}`}\n              >\n                {content(row, index, labelId)}\n              </StyledTableRow>\n            )\n          })\n      }\n      return stableSort(dataSource, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row, index) => {\n          const labelId = `enhanced-table-checkbox-${index}`\n          return (\n            <StyledTableRow\n              hover\n              onClick={(event) => handleClick(event, row.ticker)}\n              role=\"checkbox\"\n              tabIndex={-1}\n              key={`row_${labelId}`}\n            >\n              {content(row, index, labelId)}\n            </StyledTableRow>\n          )\n        })\n    }\n    if (dataSource && dataSource.length && !pagination) {\n      return stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n        const labelId = `enhanced-table-checkbox-${index}`\n        return (\n          <StyledTableRow\n            hover\n            onClick={(event) => handleClick(event, row.ticker)}\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={row.ticker}\n          >\n            {content(row, index, labelId)}\n          </StyledTableRow>\n        )\n      })\n    }\n    return (\n      <StyledTableRow>\n        <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n          No data\n        </StyledTableCell>\n      </StyledTableRow>\n    )\n  }, [columns.length, content, dataSource, handleClick, order, orderBy, page, pages, pagination, rowsPerPage])\n  return (\n    <BoxWrapper>\n      <TableContainer>\n        <Table sx={{ minWidth: 1400 }} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            columns={columns}\n            isMyPage={isMyPage}\n          />\n          <TableBody>\n            {dataSourceDom()}\n            {/* {dataSource && dataSource.length && pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <StyledTableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.ticker)}\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.ticker}\n                    >\n                      {content(row, index, labelId)}\n                    </StyledTableRow>\n                  )\n                })\n            ) : dataSource && dataSource.length && !pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`\n                return (\n                  <StyledTableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.ticker)}\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.ticker}\n                  >\n                    {content(row, index, labelId)}\n                  </StyledTableRow>\n                )\n              })\n            ) : (\n              <StyledTableRow>\n                <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n                  No data\n                </StyledTableCell>\n              </StyledTableRow>\n            )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {pagination ? (\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={pages || (dataSource && dataSource.length) || 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      ) : null}\n    </BoxWrapper>\n  )\n}\n","import { useAppDispatch, useAppSelector } from 'state'\nimport { useWeb3React } from 'web3-react-core'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport tokens from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport { ContractTransaction } from 'ethers'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { chainConfigs, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport {\n  ActionType,\n  NeetralizePendingAction,\n  PendingAction,\n  TokenType,\n  updateActiveAmount,\n  updateActionInfo,\n  updateActiveActionIndex,\n  setShortPendingAction,\n  updateActiveTab,\n  updateShortRateInfo,\n} from './shortSlice'\n\nexport function useShortActiveTokenApprove() {\n  const { account, chainId } = useWeb3React()\n  const activeInfo = useAppSelector((state) => state.short.activeInfo)\n  // const { position } = useCurrentCpt()\n  const { currentPosition } = usePositionInfo()\n  const { onCheckApprove } = useCheckApprove()\n  const { handleApprove } = useApprove(account, activeInfo.token ? tokens[activeInfo.token].address[chainId] : '0')\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [checkApproveLoading, setCheckApproveLoading] = useState(false)\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    if (activeInfo.token) {\n      setCheckApproveLoading(true)\n      onCheckApprove(\n        account,\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address,\n        currentPosition.positionAddress,\n      )\n        .then((res) => {\n          if (res && res._hex > 0) {\n            setApproveStatus(true)\n          } else {\n            setApproveStatus(false)\n          }\n        })\n        .catch(() => {\n          setApproveStatus(false)\n        })\n        .finally(() => {\n          setCheckApproveLoading(false)\n        })\n    }\n\n    // console.log('valueToKeyMap[activeInfo.token]', activeInfo.token, valueToKeyMap[activeInfo.token])\n  }, [account, activeInfo, chainId, currentPosition.positionAddress, onCheckApprove])\n  const onApprove = useCallback(async () => {\n    try {\n      setApproveStatus(true)\n      const info = await handleApprove(currentPosition.positionAddress)\n\n      return info as ContractTransaction\n    } catch (error: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${error.reason}`)\n      throw error\n    }\n  }, [handleApprove, currentPosition.positionAddress, toastError])\n\n  return { approveStatus, onApprove, checkApproveLoading }\n}\n\n// short active action and info\nexport function useShortActiveAction() {\n  const dispatch = useAppDispatch()\n  const { activeAmount, activeInfo, activeIndex } = useAppSelector((state) => state.short)\n  const { pendingActionList } = useShortPendingAction()\n  const setActionInfo = useCallback(\n    (data: { token?: string; tokenType?: TokenType } = {}) => {\n      dispatch(updateActionInfo({ activeInfo: data }))\n      const _index = pendingActionList.findIndex(\n        (item) => item.token === data.token && item.tokenType === data.tokenType,\n      )\n      if (_index >= 0) {\n        dispatch(updateActiveActionIndex({ index: _index }))\n      }\n    },\n    [dispatch, pendingActionList],\n  )\n  const setActiveTab = useCallback(\n    (index: number) => {\n      dispatch(updateActiveTab({ index }))\n    },\n    [dispatch],\n  )\n  const setActionIndex = useCallback(\n    (index: number) => {\n      dispatch(updateActiveActionIndex({ index }))\n    },\n    [dispatch],\n  )\n  const setActiveAmount = useCallback(\n    (amount: any) => {\n      dispatch(updateActiveAmount({ amount }))\n    },\n    [dispatch],\n  )\n  const clearActive = useCallback(() => {\n    setActionInfo()\n    setActiveAmount('')\n    setActionIndex(-1)\n  }, [setActionIndex, setActionInfo, setActiveAmount])\n\n  // const { approveStatus, onApprove } = useShortActiveTokenApprove()\n  const _activeInfo = useMemo(() => {\n    if (activeInfo?.token) {\n      return {\n        ...activeInfo,\n        amount: activeAmount,\n        activeIndex,\n        // approveStatus,\n      }\n    }\n    return { token: null, amount: '', tokenType: null, activeIndex: -1, approveStatus: false }\n  }, [activeAmount, activeIndex, activeInfo])\n\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return {\n    setActionInfo,\n    setActiveAmount,\n    clearActive,\n    setActiveTab,\n    activeInfo: _activeInfo,\n    setActionIndex,\n    onChangeCollateralIndex,\n  }\n}\n\nexport function useShortPendingAction() {\n  const dispatch = useAppDispatch()\n  const { pendingActions } = useAppSelector((state) => state.short)\n  const _pendingActions = useMemo(() => new Map(pendingActions), [pendingActions])\n  // add action\n  const addPendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = _pendingActions.get(data.token) || []\n      _pendingActions.set(data.token, [..._actions, { ...data, type: ActionType.ADD }])\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // delete action\n  const deletePendingAction = useCallback(\n    (token: string, tokenType: TokenType) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.tokenType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // clear all action\n  const clearAllPendingAction = useCallback(() => {\n    dispatch(setShortPendingAction({ actions: new Map() }))\n  }, [dispatch])\n\n  // update action\n  const updatePendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.tokenType === data.tokenType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const updateNeutralizePendingAction = useCallback(\n    (data: Pick<NeetralizePendingAction, 'amount' | 'price' | 'token' | 'tokenType' | 'neutralizeType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.neutralizeType === data.neutralizeType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const deleteNeutralizePendingAction = useCallback(\n    (token: string, tokenType: any) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.neutralizeType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n\n  // get token type\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActions.forEach((item, index) => {\n      _map.set(\n        index,\n        item.map((i) => i.tokenType),\n      )\n    })\n    return _map\n  }, [pendingActions])\n\n  const pendingActionList = useMemo(() => {\n    return Array.from(pendingActions.values()).flat()\n  }, [pendingActions])\n\n  const tokenAmount = useMemo(() => {\n    const _obg = {}\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY || item.tokenType === TokenType.WithDraw) {\n        _obg[item.token] = item.amount\n      }\n    })\n    return _obg\n  }, [pendingActionList])\n\n  const shortAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SHORT) {\n        _amount = item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const neutralizeAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAllAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAmount = useMemo(() => {\n    const _amount = new Map<string, number>()\n    pendingActions.forEach((items) => {\n      const item = items.filter((i) => i.tokenType === TokenType.SUPPLY)[0]\n      if (item) {\n        _amount.set(item.token, item.amount)\n      }\n    })\n    return _amount\n  }, [pendingActions])\n  return {\n    addPendingAction,\n    clearAllPendingAction,\n    deletePendingAction,\n    updatePendingAction,\n    deleteNeutralizePendingAction,\n    updateNeutralizePendingAction,\n    pendingTokenTypes,\n    pendingActions,\n    pendingActionList,\n    tokenAmount,\n    shortAmount,\n    supplyAmount,\n    supplyAllAmount,\n    neutralizeAmount,\n  }\n}\n\nexport function useShortInfo() {\n  const { rateInfo, activeTab, activeInfo } = useAppSelector((state) => state.short)\n\n  const dispatch = useAppDispatch()\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n  return {\n    rateInfo,\n    onChangeCollateralIndex,\n    activeTab,\n    activeInfo,\n  }\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { withRouter } from 'react-router'\n\nexport interface StyledTabProps {\n  label: string\n  style?: any\n}\n\nexport interface StyledTabsProps {\n  children?: React.ReactNode\n  value: number\n  onChange: (event: React.SyntheticEvent, newValue: number) => void\n  style?: any\n}\n\nexport const AntTabs = styled((props: StyledTabsProps) => (\n  <Tabs {...props} TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }} />\n))({\n  margin: '40px auto 20px',\n  '& .MuiTabs-indicator': {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 4,\n    backgroundColor: 'transparent',\n  },\n  '& .MuiTabs-indicatorSpan': {\n    maxWidth: 20,\n    width: '100%',\n    borderRadius: 5,\n    background: 'linear-gradient(270deg, #7AE9F0 0%, #61C3F7 100%);',\n  },\n})\n\nexport const AntTab = styled((props: StyledTabProps) => <Tab disableRipple {...props} />)(({ theme }) => ({\n  textTransform: 'none',\n  minWidth: 0,\n  [theme.breakpoints.up('sm')]: {\n    minWidth: 0,\n  },\n  fontFamily: 'Heebo Medium',\n  fontWeight: 500,\n  marginRight: theme.spacing(1),\n  color: 'rgba(0, 0, 0, 0.5)',\n  fontSize: '22px',\n  '&:hover': {\n    color: '#000000',\n    opacity: 1,\n  },\n  '&.Mui-selected': {\n    color: '#000000',\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: '#d1eaff',\n  },\n}))\n\nfunction CustomizedTabs(props) {\n  const { tab, tabsStyle, tabStyle, defaultTabsValue, history } = props\n  const [value, setValue] = React.useState(Number(defaultTabsValue) || 0)\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n\n    if (defaultTabsValue !== undefined) {\n      history.push(`/history/claimed/${newValue}`)\n    }\n  }\n\n  return (\n    <>\n      <AntTabs style={tabsStyle} value={value} onChange={handleChange}>\n        {tab.map((it) => (\n          <AntTab style={tabStyle} key={it.label} label={it.label} />\n        ))}\n      </AntTabs>\n      {tab.map((item, index) => index === value && <React.Fragment key={item.label}>{item.component}</React.Fragment>)}\n    </>\n  )\n}\nexport default withRouter(CustomizedTabs)\n","import tokens from \"../config/constants/tokens\";\nimport {SupportedChainId} from \"../config/constants/chains\";\n\n\n\nexport default async function addAsset({ connector, tokenSymbol, chainId }: { connector: any\n  tokenSymbol: string,\n\n  chainId: SupportedChainId}){\n\n  try {\n    const provider = await connector.getProvider()\n    await provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokens[tokenSymbol].address[chainId], // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokens[tokenSymbol].decimals, // The number of decimals in the token\n          },\n        },\n      });\n  } catch (error) {\n    //\n  }\n}\n"],"sourceRoot":""}