{"version":3,"sources":["components/Slide/index.tsx","components/SubTitle.tsx","views/Collateral/components/AddGuaranteeFromWallet.tsx","views/Collateral/components/AddCurrencyToAvatar.tsx","views/Collateral/components/BeforeMintAction.tsx","views/Collateral/components/WithdrawCollateral.tsx","views/Mint/components/NeutralizeComp.tsx","views/Collateral/components/AddGuaranteeFromAvatar.tsx","views/Collateral/components/ImproveGuaranteeDays.tsx","views/Collateral/components/ImproveCollateralRatio.tsx","views/Collateral/components/TradingThroughAvatar.tsx","views/Collateral/components/GeneralTransfer.tsx","views/Collateral/components/manage.tsx","views/Collateral/ManagerPage.tsx","components/CommonComponent.tsx","hooks/useHashPowerToken.ts","components/Logo.tsx","components/TransactionInfo.tsx","hooks/usePanel.ts","components/DataWrapper/index.tsx","components/Methods/index.tsx","hooks/useApprove.ts","config/constants/thresholdValue.ts","hooks/usePosContract.ts","views/Collateral/components/Title.tsx"],"names":["PrettoSlider","styled","Slider","props","color","height","width","background","opacity","border","bottom","value","boxShadow","transform","position","left","zIndex","borderRadius","lineHeight","fontSize","padding","backgroundColor","transformOrigin","display","CustomizedSlider","_jsx","valueLabelDisplay","orientation","defaultValue","disabled","Content","_templateObject","_taggedTemplateLiteral","SubTitle","children","AddGuaranteeFromWallet","walletTokenBalance","approveStatus","onApprove","transferVal","setTransferVal","useState","isDisabled","setDisabled","toastSuccess","toastError","toastInfo","useToast","approveBtnStatus","setApproveBtnStatus","currentPosition","collateralIndex","usePositionInfo","onUpdatePrepaidInterest","newDisplayCollateralRatio","newDisplayPrepaidInterestCoverage","useComputedIndexAction","handleUpdatePosition","onAddPrepaidInterest","usePositionAction","changeTransferVal","useCallback","e","type","numberVal","Number","target","WBTC","_transferAmount","toSmallUnits","TokenUtils","formatTokenAmount","tokens","decimals","isZero","onSubmit","async","ToastTitle","failed","txInfo","submited","TransactionSubmittedInfo","content","txHash","hash","wait","success","TransactionSuccessInfo","_jsxs","_Fragment","Methods","SelectIcon","Wallet","options","poolData","rightOptions","rightBalance","prepaidInterest","leftBalance","rightSymbol","mintTokenInfo","settlementCurrency","symbol","selectedSymbol","RightIcon","src","Assets","PrepaidInterest","style","alt","leftInputValue","rightInputValue","selectInput","onMax","DataWrapper","data","DataIndexName","CollateralRatio","displayRatio","PrepaidInterestCoverage","displayCoverage","Approve","onClick","state","AddCurrencyToAvatar","account","chainId","submitStatus","setSubmitStatus","currentPositionTokenInfo","onUpdateCollateralValue","transfer","useTransfer","tradingList","useMemo","allowedTokens","Array","from","Object","values","map","item","token","icon","Logo","imgprops","marginRight","logo","balance","rightOptionList","toLargeUnits","balances","selectIndex","setSelectIndex","leftSelectedToken","length","rightSelectedToken","onTransfer","address","positionAddress","console","dir","reason","leftSelectValue","rightSelectValue","_ref","_transferVal","leftChange","selected","_index","findIndex","AvatarIcon","TipWrap","IconWrap","BeforeMintAction","useHashPowerToken","expanded","handleChange","usePanel","active","useWeb3React","Wrapper","Title","Accordion","id","onChange","AccordionSummary","Typography","AccordionDetails","ActionUser","contracts","ActionUserInterface","utils","Interface","abi","WidrawFromCollateralToWallet","actionDisable","setActionDisable","trading","setTrading","transferAmount","setTransferAmount","signer","useSystemParams","newPrepaidInterestCoverage","newCollateralRatio","minCollateralValue","onGuaranteeCurrencyToWallet","encodeFunctionData","toString","positionContract","ethers","Contract","PositionABI","delegateCall","useEffect","transferAmountVal","concat","isNaN","pimin","positionStatus","estimatedDailyDebt","toNumber","pi","GuaranteeIcon","rightSelectedValue","selectValue","selectedBalance","WithdrawCollateral","tokenPools","setLeftSelectedToken","SupportedTokens","setRightSelectedToken","withdrawAssetParams","keys","current","activeToken","find","it","unitPrice","getSwapQuote","minCollateralValueTokenPrice","SelectGroup","Tip","_templateObject2","Func","_templateObject3","NeutralizeButton","Button","_templateObject4","SelectTypeWrap","_templateObject5","TipInfo","_templateObject6","RED","NeutralizeType","fbtc20mint","NeutralizeComp","setRefresh","setApproveStatus","disabledAction","setDisabledAction","neutralizeAmount","setNeutralizeAmount","posContract","usePosContract","neutralizeType","setNeutralizeType","currentMintToken","onUpdateNeutralizeValue","newNeutralizeFee","newEstimatedDailyDebt","handleApprove","useApprove","onCheckApprove","useCheckApprove","info","message","settlementCurrencyValues","formatFourDecimals","checkApprove","isEnable","_hex","onChangeNeutralizeAmount","_decimals","actionVal","debt","isWaletValueVaild","isCollateralValueVaild","transferValue","onNeutralize","String","Select","groupStyle","actionValue","isGroup","ButtonBase","Math","min","className","onKeyUp","tabIndex","role","WalletIcon","Avatar","cellSpacing","cellPadding","colSpan","viewBox","fill","xmlns","d","fillRule","clipRule","AddGuaranteeFromAvatar","_currentPositionToken3","_currentPositionToken","_currentPositionToken2","error","CustomizedAccordions","ImproveCollateralRatio","NetralizeComp","AddBtn","ActionMulticall","ActionMulticallInterface","onDragEnd","result","columns","setColumns","setIsSubmit","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","copiedItems","input","includes","isSubmitStatus","onUpdateTotalCollateralValue","tokenList","tokenPrice","list","filter","addMethods","uuid","output","inputToken","outputToken","getContract","_params","inputAmount","outputAmount","tokenAddressPath","findPath","to","log","dataMulti","transaction","FlexWrap","flexDirection","wordBreak","onChangeInputAmount","MAX_SAFE_INTEGER","res","indexOf","slice","onChangeToken","onExchange","record","i","push","poolPath","fromDecimals","toDecimals","inputValue","outputValue","total","forEach","price","DragDropContext","Droppable","provided","droppableProps","ref","innerRef","Draggable","draggableId","isDragDisabled","provideds","amountOut","priceStr","draggableProps","dragHandleProps","alignItems","userSelect","margin","paddingRight","isExchange","leftDisableStatus","rightDisableStatus","rightChange","leftSymbol","right","IconButton","cursor","marginTop","marginLeft","DeleteIcon","DroppableIcon","placeholder","AddIcon","POSITIVE_INFINITY","MethodsWrap","AccountType","accountCategoryList","MyWallet","Settlement","Standard","getTokenDecimals","key","valueToKeyMap","commonTokens","GeneralTransfer","gDisStatus","setGDisStatus","actionData","setActionData","accountType","tokenType","tokenSelectDisabled","avatarAssetList","reduce","acc","isTransfer","transferTransactions","transferData","recviceTarget","tokenSymbol","transferDecimals","tokenAddress","chainConfigs","handleAllSettled","results","_result$reason","_result$reason2","status","submitTransaction","_data","handleResult","handleError","Promise","allSettled","then","catch","onChangeVal","_ref2","send","recive","onChangeAccount","val","__index","nextState","settlement","shortBalanceValue","collateralValue","tokenTypeDecimals","collateralAssets","maxActionTotalAssets","maxCollateralTransfer","amountOutPrice","otherTokenWbtc","sub","actionCurrentMaxValue","amountInCurrentMaxValue","maxTransterCurrentToken","floor","maxPrepaidInterest","maxActionPrepaidInterest","transferAmout","interestGuaranteed","gt","avatarAssetBalance","walletAssetBalance","selectDisabled","Input","onInput","hidden","justifyContent","ExchangeArrow","list1","list2","reverse","ele","Box","CardWrap","Card","TipPanel","CollateralInfoWrap","getValueColor","withRouter","oBox","React","useRef","handleChangeCurrentPosition","callback","approveTransactionInfo","err","collateralRatio","prepaidInterestCoverage","obligation","epochDebt","estimatedObligationToday","setTimeout","panel","document","querySelector","scrollIntoView","allowedAssets","currentTokenPrice","currentAllowedTokens","currentAllowedTokenBalance","usdt","WBTCToUSD","tokenInfo","_currentTokenPrice$to","formatCurrencyTwoDecimals","mintTokens","isSupportedChainId","_tokens","mintTokenChainConfigs","marginBottom","Grid","container","spacing","xs","ScrollWrapper","title","LiquidationThresholdValue","ratio","Slide","days","ImproveGuaranteeDays","TradingThroughAvatar","Collateral","CopyToClipboard","toCopy","Fbtc20Icon","CollateralManage","Link","ArrowLine","ManagerPage","Manage","MuiAccordion","disableGutters","elevation","square","borderBottom","MuiAccordionSummary","expandIcon","AddSharpIcon","p","fontFamily","fontWeight","MuiAccordionDetails","transition","_templateObject7","_templateObject8","_templateObject9","TextIcon","_templateObject10","_templateObject11","Child","name","AlertButton","ButtonStyled","_templateObject12","BTitle","_templateObject13","_templateObject14","hashPowerToken","useContext","HashPowerTokenContext","undefined","Error","window","open","ChainTxUrl","useAppSelector","collateralManage","dispatch","useAppDispatch","event","newExpanded","toggleStatus","setExpanded","SelectWrap","GroupWrap","Index","rightSelectInput","rightNumberIsShow","leftDesc","rightDesc","currentSelected","setVal","rightList","setRightList","rightVal","setRightVal","displayValues","_rightBalance","_leftBalance","orignalBalance","allDisabled","inputDisabled","RoundArrow","spender","contract","ERC20","allowance","owner","library","getSigner","approve","constants","MaxUint256","ShortThresholdValue","setContract","currentCpt","currentCPT","_contract"],"mappings":"oOAIA,MAAMA,EAAeC,YAAOC,IAAPD,EAAgBE,GAC5B,MACLC,MAAO,UACPC,OAAQ,IACRC,MAAO,EACP,oBAAqB,CACnBC,WAAY,yDACZC,QAAS,KAEX,qBAAsB,CACpBC,OAAQ,OACRF,WAAY,eAGd,qBAAsB,CAEpBG,OAAwB,IAAhBP,EAAMQ,MAAc,iBAAmBR,EAAMQ,MAAQ,IAAM,8BAAgC,GACnGN,OAAQ,EACRC,MAAO,EACPM,UAAW,mCACXL,WAAY,OACZM,UAAW,uBAEXJ,OAAQ,iBACR,qDAAsD,CACpDG,UAAW,WAEb,WAAY,CACVE,SAAU,WACVC,KAAM,EACNC,QAAS,EACTV,MAAO,GACPD,OAAQ,EACRE,WAAY,OACZU,aAAc,IAGlB,0BAA2B,CACzBC,WAAY,IACZC,SAAU,GACVZ,WAAY,QACZa,QAAS,EACTd,MAAO,GACPD,OAAQ,GACRY,aAAc,gBACdI,gBAAiB,UACjBC,gBAAiB,OACjBT,UAAW,gDACX,WAAY,CAAEU,QAAS,QACvB,6BAA8B,CAC5BA,QAAS,OACTV,UAAW,iDAEb,QAAS,CACPA,UAAW,sBAMJ,SAASW,EAAiBrB,GACvC,OACEsB,cAACzB,EAAY,CACX0B,kBAAkB,OAClB,aAAW,gBACXC,YAAY,WACZC,aAAc,GACdC,UAAQ,KACJ1B,GAGV,C,2ECxEA,MAAM2B,EAAU7B,YAAO,IAAPA,CAAW8B,MAAAC,YAAA,sKAaZC,MALf,SAAkB9B,GAChB,MAAM,SAAE+B,GAAa/B,EACrB,OAAOsB,cAACK,EAAO,IAAK3B,EAAK+B,SAAGA,GAC9B,E,2ICiHeC,MAlHf,SAAgChC,GAC9B,MAAM,mBAAEiC,EAAkB,cAAEC,EAAa,UAAEC,GAAcnC,GAClDoC,EAAaC,GAAkBC,mBAAiB,IAChDC,EAAYC,GAAeF,oBAAS,IACrC,aAAEG,EAAY,WAAEC,EAAU,UAAEC,GAAcC,eACzCC,EAAkBC,GAAuBR,oBAAS,IAEnD,gBAAES,EAAe,gBAAEC,GAAoBC,eACvC,wBAAEC,EAAuB,0BAAEC,EAAyB,kCAAEC,GAC1DC,eACI,qBAAEC,EAAoB,qBAAEC,GAAyBC,cAEjDC,EAAoBC,uBACxB,CAACC,EAAGC,KACF,MAAMC,EAAqB,IAATD,EAAaE,OAAOH,EAAEI,OAAOvD,OAASyB,EAAmB+B,KACrEC,EAAkBC,YACtBC,IAAWC,kBAAkBP,EAAWQ,IAAOL,KAAKM,UACpDD,IAAOL,KAAKM,UAEVT,EAAY5B,EAAmB+B,MAAQH,GAAa,GAAKI,EAAgBM,SAC3E/B,GAAY,GAEZA,GAAY,GAEdU,EAAwBW,GACxBxB,EAAwB,IAATuB,EAAaD,EAAEI,OAAOvD,MAAQqD,EAAU,GAEzD,CAACX,EAAyBjB,EAAmB+B,OAGzCQ,EAAWd,uBAAYe,UAC3B,IACE,IAAKrC,GAAgBA,GAAe,GAAKA,EAAcH,EAAmB+B,KAExE,YADAtB,EAAWgC,IAAWC,OAAQ,+BAGhCnC,GAAY,GACZ,MAAMoC,QAAerB,EAAqBnB,GAC1CO,EACE+B,IAAWG,SACXvD,cAACwD,IAAwB,CAACC,QAAQ,2BAA2BC,OAAQJ,EAAOK,cAEzDL,EAAOM,SAE1BzC,EACEiC,IAAWS,QACX7D,cAAC8D,IAAsB,CAACL,QAAQ,yBAAyBC,OAAQJ,EAAOK,QAE1EzC,GAAY,GACZH,EAAe,GACfa,EAAwB,SAClBI,IAEV,CAAE,MAAOK,GACPnB,GAAY,EACd,IACC,CACDJ,EACAH,EACAsB,EACAb,EACAC,EACAF,EACAS,EACAI,IAGF,OACE+B,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAACiE,IAAO,CACNC,WAAYC,IACZC,QAASC,IACTC,aAAcD,IACdE,aAAc7C,EAAgB8C,gBAC9BC,YAAa9D,EAAqBA,EAAmB+B,KAAO,EAC5DgC,YAAajD,EAAgBkD,cAAcC,mBAAmBC,OAC9DC,eAAgBrD,EAAgBkD,cAAcC,mBAAmBC,OACjEE,UAAWA,IAAM/E,cAAA,OAAKgF,IAAKC,IAAOC,gBAAiBC,MAAO,CAAEtG,MAAO,IAAMuG,IAAI,KAC7EC,eAAgBvE,EAChBwE,gBAAiBxE,EACjByE,YAAclD,IACZF,EAAkBE,EAAG,EAAE,EAEzBmD,MAAOA,KACLrD,EAAkB,CAAC,EAAG,EAAE,IAG5BnC,cAACyF,IAAW,CACVC,KAAM,CACJ,CAACC,IAAcC,gBAAiBlE,EAAgBmE,aAAchE,GAC9D,CAAC8D,IAAcG,wBAAyBpE,EAAgBqE,gBAAiBjE,MAG5ElB,EACCZ,cAACgG,IAAO,CAACb,MAAO,CAAEhG,UAAW,QAAUiB,SAAUa,GAAcH,GAAe,EAAGmF,QAAS/C,EAASzC,SAAC,WAIpGT,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,SAAUmB,EACV0E,QAASA,KACPpF,GAAWqF,IACT1E,EAAoB0E,EAAM,GAC1B,EACFzF,SACH,cAMT,E,SC6Ee0F,MA3Lf,SAA6BzH,GAC3B,MAAM,UAAEmC,EAAS,cAAED,EAAa,QAAEwF,EAAO,QAAEC,EAAO,mBAAE1F,GAAuBjC,GAEpEoC,EAAaC,GAAkBC,mBAAS,IACxCsF,EAAcC,GAAmBvF,oBAAS,IAC1CO,EAAkBC,GAAuBR,oBAAS,IAEnD,WAAEI,EAAU,aAAED,GAAiBG,eAC/B,gBAAEG,EAAe,yBAAE+E,EAAwB,gBAAE9E,GAAoBC,eACjE,wBAAE8E,EAAuB,0BAAE5E,EAAyB,kCAAEC,GAC1DC,eACI,qBAAEC,GAAyBE,cAC3BwE,EAAWC,cAEXC,EAAcC,mBAAQ,KAC1B,MAAM,cAAEC,GAAkBN,EAiB1B,OAhBkBO,MAAMC,KAAKC,OAAOC,OAAOJ,EAAc/D,SAASoE,KAAKC,IAC9D,IACFA,EACHC,MAAOD,EAAKvC,OACZyC,KAAMA,IAAMtH,cAACuH,IAAI,CAACC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAAQJ,MAAOD,EAAKM,KAAM7C,OAAQuC,EAAKvC,SAC3F8C,QAAShH,EAAmByG,EAAKvC,QACjC+C,gBAAiB,CACf,IACKR,EACHC,MAAOD,EAAKvC,OACZyC,KAAMA,IAAMtH,cAACuH,IAAI,CAACC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAAQJ,MAAOD,EAAKM,KAAM7C,OAAQuC,EAAKvC,SAC3F8C,QAASE,YAAaf,EAAcgB,SAASV,EAAKvC,QAASuC,EAAKpE,eAKxD,GACf,CAACwD,EAA0B7F,KACvBoH,EAAaC,GAAkBhH,mBAAiB,GAEjDiH,EAAoBpB,mBAAQ,IAE7BD,EAAYsB,QAAUtB,EAAYmB,IAAiB,IAC/CtG,EAAgBkD,cAAcC,mBACjC+C,QAAShH,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,UAGhF,CAACpD,EAAgBkD,cAAcC,mBAAoBmD,EAAanB,EAAajG,IAC1EwH,EAAqBtB,mBAAQ,IAE9BD,EAAYsB,QAAUtB,EAAYmB,GAAaH,gBAAgB,IAAO,IAClEnG,EAAgBkD,cAAcC,mBACjC+C,QAASE,YACPrB,EAAyBM,cAAcgB,SAASrG,EAAgBkD,cAAcC,mBAAmBC,QACjGpD,EAAgBkD,cAAcC,mBAAmB5B,YAItD,CACDvB,EAAgBkD,cAAcC,mBAC9B4B,EAAyBM,cAAcgB,SACvCC,EACAnB,IAEIwB,EAAahG,uBAAYe,UAC7B,IACEoD,GAAgB,SACCG,EACfN,EACArD,IAAOkF,EAAkBpD,QAAQwD,QAAQhC,GACzC5E,EAAgB6G,gBAChB1F,YACEC,IAAWC,kBAAkBhC,EAAaiC,IAAOkF,EAAkBpD,QAAQ7B,UAC3ED,IAAOkF,EAAkBpD,QAAQ7B,aAInCuD,GAAgB,GAChBxF,EAAe,GACfI,EAAaiC,IAAWS,SACxB4C,EAAwB,CACtB5B,OAAQoD,EAAkBpD,OAC1B3F,MAAO,UAEH8C,IAEV,CAAE,MAAOK,GACPkG,QAAQC,IAAInG,GACZjB,EAAWgC,IAAWC,OAAS,OAADhB,QAAC,IAADA,OAAC,EAADA,EAAGoG,QACjClC,GAAgB,EAClB,IACC,CACDG,EACAN,EACA6B,EACA5B,EACA5E,EACAX,EACAK,EACAsF,EACAzE,EACAZ,IAEF,OACE2C,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAACiE,IAAO,CACNG,QAASwC,EACTtC,aAAcsC,EACdvB,eAAgBvE,EAChB2D,YAAawD,EAAkBN,QAC/Be,gBAAiBT,EAAkBpD,OACnCS,gBAAiBxE,EACjByD,aAAc4D,EAAmBR,QACjCgB,iBAAkBR,EAAmBtD,OACrCX,WAAYC,IACZoB,YAAaqD,IAAiB,IAAhB,OAAEnG,GAAQmG,EAEtB,GADA7H,EAAe0B,EAAOvD,OAClBuD,EAAOvD,MAAQ,GAAKuD,EAAOvD,OAAS+I,EAAkBN,QAAS,CACjE,MAAMkB,EAAejG,YACnBC,IAAWC,kBAAkBL,EAAOvD,MAAO+I,EAAkBjF,UAC7DiF,EAAkBjF,UAEpBuD,EAAgBsC,EAAa5F,SAC/B,MACEsD,GAAgB,GAGlBE,EAAwB,CACtB5B,OAAQoD,EAAkBpD,OAC1B3F,MAAOuD,EAAOvD,OACd,EAEJ4J,WAAaC,IACX,MAAMC,EAASpC,EAAYqC,WAAW7B,GAASA,EAAKvC,SAAWkE,EAASlE,SACxEmD,EAAegB,GACfjI,EAAe,GACf0F,EAAwB,CACtB5B,OAAQkE,EAASlE,OACjB3F,MAAO,GACP,EAEJsG,MAAOA,KACD7E,GACEsH,EAAkBN,UACpB5G,EAAekH,EAAkBN,SACjClB,EAAwB,CACtB5B,OAAQoD,EAAkBpD,OAC1B3F,MAAO+I,EAAkBN,UAEvBM,EAAkBN,QAAU,GAC9BpB,GAAgB,GAGtB,EAEFxB,UAAWmE,MAEblJ,cAACyF,IAAW,CACVC,KAAM,CACJ,CAAC,mBAAoBhE,EAAgBmE,aAAchE,GACnD,CAAC,4BAA6BH,EAAgBqE,gBAAiBjE,MAGnEiC,eAACoF,IAAO,CAAA1I,SAAA,CACNT,cAACoJ,IAAQ,CAACjE,MAAO,CAAErG,WAAY,UAAWH,MAAO,QAAS8B,SAAC,MAC3DT,cAAA,KAAAS,SAAG,+IAKJG,EACCZ,cAACgG,IAAO,CAACb,MAAO,CAAEhG,UAAW,QAAUiB,SAAUkG,GAAgBxF,GAAe,EAAGmF,QAASmC,EAAW3H,SAAC,WAIxGT,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,SAAUmB,EACV0E,QAASA,KACPpF,GAAWqF,IACT1E,EAAoB0E,EAAM,GAC1B,EACFzF,SACH,cAMT,EC9Le,SAAS4I,EAAiB3K,GACvC,MAAM,cAAEkC,EAAa,UAAEC,GAAcnC,GAC/B,mBAAEiC,GAAuB2I,eACzB,SAAEC,EAAQ,aAAEC,GAAiBC,eAC7B,OAAEC,EAAM,QAAErD,EAAO,QAAED,GAAYuD,cAErC,OACE5F,eAAC6F,IAAO,CAAAnJ,SAAA,CACNT,cAAC6J,IAAK,CAAApJ,SAAC,+BACPsD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,6DAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GACCvJ,cAACU,EAAsB,CACrBgJ,OAAQA,EACRtD,QAASA,EACTC,QAASA,EACT1F,mBAAoBA,EACpBE,UAAWA,EACXD,cAAeA,SAKvBmD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,uDAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GACCvJ,cAACmG,EAAmB,CAClBuD,OAAQA,EACRtD,QAASA,EACTC,QAASA,EACT1F,mBAAoBA,EACpBE,UAAWA,EACXD,cAAeA,WAO7B,C,+DCvBA,MAAM,WAAEwJ,GAAeC,IACjBC,GAAsB,IAAIC,QAAMC,UAAUJ,EAAWK,KACrDC,GAAgChM,IACpC,MAAM,cAAEkC,EAAa,UAAEC,GAAcnC,GAC9BiM,EAAeC,GAAoB5J,oBAAS,IAC7C,QAAEqF,EAAO,QAAED,GAAYuD,eACvB,gBAAElI,EAAe,gBAAEC,GAAoBC,eACtCkJ,EAASC,GAAc9J,oBAAS,IAChC+J,EAAgBC,GAAqBhK,mBAAiB,IACvD,WAAEI,EAAU,aAAED,EAAY,UAAEE,GAAcC,eAC1C,mBAAEX,GAAuB2I,eACzB,OAAE2B,GAAWC,eACZ3J,EAAkBC,GAAuBR,oBAAS,IACnD,wBACJY,EAAuB,0BACvBC,EAAyB,2BACzBsJ,EAA0B,mBAC1BC,EAAkB,kCAClBtJ,EAAiC,mBACjCuJ,GACEtJ,eACE,qBAAEC,GAAyBE,cAC3BoJ,EAA8BlJ,uBAAYe,UAC9C,IACE2H,GAAW,GACX,MAAMpF,EAAO4E,GAAoBiB,mBAAmB,gBAAiB,CACnEnF,EACAxD,YAAamI,EAAeS,WAAYzI,IAAOL,KAAKM,YAEhDyI,EAAmB,IAAIC,IAAOC,SAASlK,EAAgB6G,gBAAiBsD,EAAaX,GACrF3H,QAAemI,EAAiBI,aAAazB,EAAW/B,QAAQhC,GAAUX,GAChF,GAAIpC,EAAQ,CACV0H,EAAkB,GAClB3J,EAAU+B,IAAWG,SAAUvD,cAACwD,IAAwB,CAACC,QAAQ,2BAA2BC,OAAQJ,EAAOK,cACtFL,EAAOM,SAE1BkH,GAAW,GACX3J,EACEiC,IAAWS,QACX7D,cAACwD,IAAwB,CAACC,QAAQ,kCAAkCC,OAAQJ,EAAOK,cAE/E3B,IAEV,CACF,CAAE,MAAOK,GACPyI,GAAW,GACX1J,EAAWgC,IAAWC,OAAS,OAADhB,QAAC,IAADA,OAAC,EAADA,EAAGoG,OACnC,IACC,CACDrC,EACAC,EACA5E,EAAgB6G,gBAChBtG,EACAiJ,EACA7J,EACAC,EACAF,EACA4J,IAMFe,qBAAU,KAENV,EAAqB,KACrBD,EAA6B,IAC7BJ,GAAkB,GAClBA,EAAkBrJ,EAAgB8C,iBAClCqG,EAEAD,GAAiB,GAEjBA,GAAiB,EACnB,GACC,CAAClJ,EAAgB8C,gBAAiB4G,EAAoBD,EAA4BN,EAASE,IAE9Fe,qBAAU,KACR,MAAMC,EAAoBvJ,OAAO,IAADwJ,OAAKjB,IACrCnJ,EAAwBY,OAAOyJ,MAAMF,GAAqB,EAAIA,EAAkB,GAC/E,CAACnK,EAAyBmJ,IAE7B,MAAMnE,EAAcC,mBAAQ,IACnB,CACL,CACE7D,SAAUvB,EAAgBkD,cAAcC,mBAAmB5B,SAC3DqE,MAAO5F,EAAgBkD,cAAcC,mBAAmBC,OACxD8C,QAASjG,EAAgB8C,gBACzB8C,KAAMA,IACJtH,cAACuH,IAAI,CACHC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAClCJ,MAAO5F,EAAgBkD,cAAcC,mBAAmB8C,KACxD7C,OAAQpD,EAAgBkD,cAAcC,mBAAmBC,SAG7D+C,gBAAiB,CACf,CACE5E,SAAUvB,EAAgBkD,cAAcC,mBAAmB5B,SAC3DqE,MAAO5F,EAAgBkD,cAAcC,mBAAmBC,OACxD8C,QAAShH,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,QAC7EyC,KAAMA,IACJtH,cAACuH,IAAI,CACHC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAClCJ,MAAO5F,EAAgBkD,cAAcC,mBAAmB8C,KACxD7C,OAAQpD,EAAgBkD,cAAcC,mBAAmBC,cAOpE,CAACnD,EAAiBD,EAAiBd,IAEtC,OACEoD,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAACiE,IAAO,CACNsB,YAxDWlD,IACf2I,EAAkB3I,EAAEI,OAAOvD,MAAM,EAwD7BsG,MAAOA,KACL,MAAM0G,EAAQ,GAAKzK,EAAgB0K,eAAeC,mBAAmBC,WAC/DC,EACJ9J,OAAOd,EAAgB8C,iBACtBqD,YAAaqE,EAAOzK,EAAgBkD,cAAcC,mBAAmB5B,UAAU,GAEhFgI,EADEsB,EAAKjB,EACWA,EAEAiB,EACpB,EAEFpI,WAAYqI,IACZnI,QAASwC,EACTnC,YAAa/C,EAAgB8C,gBAC7BD,aAAc5D,GAAsBA,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,QACxG2H,mBAAoB,GACpB9H,YAAY,OACZ+H,YAAa,GACbC,gBAAiB,IACjB5H,eAAe,OACfO,eAAgB0F,EAChBzF,gBAAiByF,EACjBhG,UAAWZ,MAEbnE,cAACyF,IAAW,CACVC,KAAM,CACJ,CAAC,mBAAoBhE,EAAgBmE,aAAchE,GACnD,CAAC,4BAA6BH,EAAgBqE,gBAAiBjE,MAGlElB,EACCZ,cAACgG,IAAO,CAACb,MAAO,CAAEhG,UAAW,QAAUiB,SAAUuK,EAAe1E,QAASqF,EAA4B7K,SAAC,WAItGT,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,SAAUmB,EACV0E,QAASA,KACPpF,GAAWqF,IACT1E,EAAoB0E,EAAM,GAC1B,EACFzF,SACH,cAIF,EAIQ,SAASkM,GAAmBjO,GACzC,MAAM,QAAE2H,EAAO,QAAED,GAAYuD,eACvB,cAAE/I,EAAa,UAAEC,GAAcnC,GAC/B,OAAEuM,GAAWC,eACb,mBAAEvK,GAAuB2I,eACxByB,EAAgBC,GAAqBhK,mBAAiB,IACvD,WAAE4L,GAAe1B,eAEhBjD,EAAmB4E,GAAwB7L,mBAEhD,CACA2G,QAAS,EACTN,MAAOyF,IAAgBpK,KACvBM,SAAU,EACVqF,QAAS,GACTxD,OAAQiI,IAAgBpK,QAEnByF,EAAoB4E,GAAyB/L,mBAElD,CACA2G,QAAS,EACTN,MAAOyF,IAAgBpK,KACvBM,SAAU,EACVqF,QAAS,GACTxD,OAAQiI,IAAgBpK,QAEnBiI,EAAeC,GAAoB5J,oBAAS,IAE5CO,EAAkBC,GAAuBR,oBAAS,IAEnD,gBAAES,EAAe,yBAAE+E,EAAwB,gBAAE9E,GAAoBC,eACjE,wBACJ8E,EAAuB,0BACvB5E,EAAyB,mBACzBuJ,EAAkB,kCAClBtJ,EAAiC,mBACjCuJ,GACEtJ,eACE,qBAAEC,GAAyBE,eAE3B,WAAEd,EAAU,aAAED,EAAY,UAAEE,GAAcC,eAC1C,SAAEiI,GAAQ,aAAEC,IAAiBC,eAC5BoB,GAASC,IAAc9J,oBAAS,GAEvC8K,qBAAU,KACR,GAAI7D,EAAmB,EACTrF,YACVC,IAAWC,kBAAkBiI,EAAgB9C,EAAkBjF,UAC/DiF,EAAkBjF,UAEXC,UAAY8H,GAAkB9C,EAAkBN,UAAYkD,GACnED,GAAiB,GAEjBA,GAAiB,GAEfQ,GAAsB,KACxBR,GAAiB,EAErB,IACC,CAAC3C,EAAmB8C,EAAgBF,GAASO,IAEhDU,qBAAU,KACR,MAAMC,EAAoBvJ,OAAO,IAADwJ,OAAKjB,IACrCtE,EAAwB,CACtB5B,OAAQoD,EAAkBZ,MAC1BnI,MAAOsD,OAAOyJ,MAAMF,GAAqB,EAAIA,GAC7C,GACD,CAAC9D,EAAmBxB,EAAyBsE,IAEhD,MAAM3C,GAAahG,uBAAYe,UAG7B,GAFA2H,IAAW,GACXF,GAAiB,GACbG,GAAkB,EAGpB,OAFAD,IAAW,QACX1J,EAAWgC,IAAWC,OAAQ,+BAGhC,MAAM2J,EAAsB1C,GAAoBiB,mBAAmB,gBAAiB,CAClFxI,IAAOkF,EAAkBZ,OAAOgB,QAAQhC,GACxCD,EACAxD,YACEC,IAAWC,kBAAkBiI,EAAgB9C,EAAkBjF,UAC/DiF,EAAkBjF,YAGtB,IACE,MAAMyI,EAAmB,IAAIC,IAAOC,SAASlK,EAAgB6G,gBAAiBsD,EAAaX,GACrF3H,QAAemI,EAAiBI,aAAazB,EAAW/B,QAAQhC,GAAU2G,GAChF,GAAI1J,EAAOK,KAAM,CACftC,EACE+B,IAAWG,SACXvD,cAACwD,IAAwB,CAACC,QAAQ,2BAA2BC,OAAQJ,EAAOK,cAEzDL,EAAOM,SAE1BkH,IAAW,GACX3J,EACEiC,IAAWS,QACX7D,cAACwD,IAAwB,CAACC,QAAQ,kCAAkCC,OAAQJ,EAAOK,QAErFqH,EAAkB,SACZhJ,IAEV,CACF,CAAE,MAAOK,GACPyI,IAAW,GACX1J,EAAWgC,IAAWC,OAAS,OAADhB,QAAC,IAADA,OAAC,EAADA,EAAGoG,OACnC,IACC,CACDR,EACA5B,EACAD,EACA2E,EACAtJ,EAAgB6G,gBAChB2C,EACA5J,EACAF,EACAa,EACAZ,IAoCIwF,GAAcC,mBAAQ,KAC1B,MAAM,cAAEC,GAAkBN,EAC1B,OAAIM,EAAc/D,OACTkE,OAAOgG,KAAKnG,EAAc/D,QAAQoE,KAAKC,IAC5C,MAAMC,EAAQP,EAAc/D,OAAOqE,GAC7B8F,EAAU,CACd5F,KAAMA,IAAMtH,cAACuH,IAAI,CAACC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAAQJ,MAAOA,EAAMK,KAAM7C,OAAQwC,EAAMxC,SAC7FwC,MAAOA,EAAMxC,OACb8C,QAASE,YAAaf,EAAcgB,SAASV,GAA0BC,EAAMrE,UAAU,GACvFA,SAAUqE,EAAMrE,SAChBqF,QAAShB,EAAMgB,SAEjB,MAAO,IACF6E,EACHtF,gBAAiB,CACf,IACKsF,EACHvF,QAAShH,EAAmByG,KAGjC,IAGE,EAAE,GACR,CAACZ,EAA0B7F,IAS9B,OAPAmL,qBAAU,KACR,MAAMqB,EACHvG,GAAYwG,MAAMC,GAAOA,EAAGhG,QAAU5F,EAAgBkD,cAAcC,mBAAmBC,UACvF+B,GAAY,GACfiG,EAAqBM,GACrBJ,EAAsBI,EAAY,GACjC,CAAC1L,EAAgBkD,cAAcC,mBAAmBC,OAAQ+B,KAE3D7C,eAAC6F,IAAO,CAAAnJ,SAAA,CACNT,cAAC6J,IAAK,CAAApJ,SAAC,wBACPsD,eAAC+F,IAAS,CAACC,GAAG,UAAUR,SAAuB,YAAbA,GAAwBS,SAAUR,GAAa,WAAW/I,SAAA,CAC1FT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,4DAEdsD,eAACoG,IAAgB,CAAA1J,SAAA,CACfT,cAACiE,IAAO,CACNK,aAAc,CAAC6D,GACfjE,WAAYgF,IACZ9E,QAASwC,GACT8B,gBAAiBT,EAAoBA,EAAkBZ,MAAQ,GAC/DsB,iBAAkBR,EAAqBA,EAAmBd,MAAQ,GAClE9C,aAAc4D,EAAmBR,QACjCtC,eAAgB0F,EAChBzF,gBAAiByF,EACjBjC,WAAaC,IACX8D,EAAqB9D,GACrBgE,EAAsBhE,EAASnB,gBAAgB,GAAG,EAEpDrC,YAAclD,IACZ2I,EAAkB3I,EAAEI,OAAOvD,OACvBmD,EAAEI,OAAOvD,MAAQ,GAAKmD,EAAEI,OAAOvD,OAAS+I,EAAkBN,QAC5DiD,GAAiB,GAEjBA,GAAiB,EACnB,EAEFpF,MAAOA,KA/FFlD,KACb,MAAM,mBAAEsC,GAAuBnD,EAAgBkD,cAC/C,GAAa,IAATrC,EACF,GAAI2F,EAAkBZ,QAAUzC,EAAmBC,OAC7CwG,EAAqBpD,EAAkBN,QACzCqD,EAAkBK,GAElBL,EAAkB/C,EAAkBN,aAEjC,CACL,MAAM2F,EAAYC,YAChBlH,EACA4B,EAAkBZ,MAClBzC,EAAmBC,OACnBjC,YACEC,IAAWC,kBAAkBuI,EAAoBzG,EAAmB5B,UACpE4B,EAAmB5B,UAErB4J,GAEIY,EAA+B3F,YAAayF,EAAWrF,EAAkBjF,UAAU,GACrFwK,EAA+BvF,EAAkBN,QACnDqD,EACExI,OAAOK,IAAWC,kBAAkB0K,EAA8BvF,EAAkBjF,YAGtFgI,EAAkB/C,EAAkBN,QAExC,CACF,EAmEUnC,CAAM,EAAE,EAEVT,UAAWZ,MAEbnE,cAACyF,IAAW,CACVC,KAAM,CACJ,CAACC,IAAcC,gBAAiBlE,EAAgBmE,aAAchE,GAC9D,CACE8D,IAAcG,wBACdpE,EAAgBqE,gBAChBjE,MAILlB,EACCZ,cAACgG,IAAO,CAACb,MAAO,CAAEhG,UAAW,QAAUiB,SAAUuK,EAAe1E,QAASmC,GAAW3H,SAAC,WAIrFT,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,SAAUmB,EACV0E,QAASA,KACPpF,GAAWqF,IACT1E,EAAoB0E,EAAM,GAC1B,EACFzF,SACH,kBAMPsD,eAAC+F,IAAS,CAACC,GAAG,UAAUR,SAAuB,YAAbA,GAAwBS,SAAUR,GAAa,WAAW/I,SAAA,CAC1FT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,kEAEdT,cAACmK,IAAgB,CAAA1J,SACfT,cAAC0K,GAA4B,IAAKhM,WAK5C,C,0CC1bA,MAAM+O,GAAcjP,YAAO,MAAPA,CAAa8B,QAAAC,YAAA,qVAqB3BmN,GAAMlP,YAAO,MAAPA,CAAamP,QAAApN,YAAA,8/BAqDnBqN,GAAOpP,YAAO,MAAPA,CAAaqP,QAAAtN,YAAA,6EAQpBuN,GAAmBtP,YAAOuP,IAAPvP,CAAcwP,QAAAzN,YAAA,sTAYjC0N,GAAiBzP,YAAO,MAAPA,CAAa0P,QAAA3N,YAAA,i1CA+D9B4N,GAAU3P,YAAO,MAAPA,CAAa4P,QAAA7N,YAAA,0SAevB8N,GAAM,MAAK,IAEZC,GAAc,SAAdA,GAAc,OAAdA,EAAc,gBAAdA,EAAc,gBAAdA,CAAc,EAAdA,IAAc,IAKnB,MAAQlE,WAAYmE,IAAelE,IAqbpBmE,OApbf,WACE,MAAM,WAAEC,EAAU,mBAAE9N,GAAuB2I,eACrC,OAAE2B,GAAWC,eACb,OAAExB,EAAM,QAAErD,EAAO,QAAED,GAAYuD,eAC9B/I,EAAe8N,GAAoB1N,oBAAS,IAC5C2N,EAAgBC,GAAqB5N,oBAAS,IAC9C6N,EAAkBC,GAAuB9N,mBAAS,GACnD+N,EAAcC,aAAetF,EAAQuB,IACpCgE,EAAgBC,GAAqBlO,mBAAyBsN,GAAenK,SAE9E,aAAEhD,EAAY,WAAEC,EAAU,UAAEC,GAAcC,eAC1C,iBAAE6N,EAAgB,gBAAE1N,EAAe,yBAAE+E,EAAwB,gBAAE9E,GAAoBC,eACnF,wBAAEyN,EAAuB,iBAAEC,EAAgB,0BAAExN,EAAyB,kCAAEC,EAAiC,sBAAEwN,GAC/GvN,eAEI,qBAAEC,GAAyBE,eAE3B,cAAEqN,GAAkBC,YAAWpJ,EAAwB,OAAf3E,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAc0D,UACvE,eAAEoH,GAAmBC,cAErB7O,EAAYuB,uBAAYe,UAC5B,IACE,MAAMwM,QAAaJ,EAA6B,OAAf9N,QAAe,IAAfA,OAAe,EAAfA,EAAiB6G,iBAElD,GADAoG,GAAiB,GACbiB,EAAKhM,KAAM,OACQgM,EAAK/L,QAExBzC,EAAa,kBAEjB,CACF,CAAE,OAAO,QAAEyO,IACTlB,GAAiB,GACjBtN,EAAWgC,IAAWC,OAAO,GAAD2I,OAAK4D,GACnC,IACC,CAACL,EAA8B,OAAf9N,QAAe,IAAfA,OAAe,EAAfA,EAAiB6G,gBAAiBnH,EAAcC,IAE7DyO,EAA2BhJ,mBAAQ,KACvC,MAAMjC,EAAoC,OAAfnD,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAcC,mBAC1D,OAA4B,OAAxB4B,QAAwB,IAAxBA,KAA0BM,cACrB,CACL,CAAClC,EAAmBC,QAASrC,OAC3BK,IAAWiN,mBACTtN,OACEqF,YACErB,EAAyBM,cAAcgB,SAASlD,EAAmBC,QACnED,EAAmB5B,aAK3B,CAACmM,GAAmB3M,OAClBK,IAAWiN,mBACTtN,OACEqF,YACErB,EAAyBM,cAAcgB,SAASrG,EAAgBkD,cAAcE,QAC9EpD,EAAgBkD,cAAc3B,cAOnC,CACL,CAAC4B,EAAmBC,QAAS,EAC7B,CAACsK,GAAmB,EACrB,GACA,CAACA,EAAkB1N,EAAiB+E,IAEjCuJ,EAAe3N,uBAAYe,UAC/B,GAAI1B,EAAgBuO,SAAU,CAC5B,MAAM1M,QAAemM,EACnBrJ,EACA3E,EAAgBkD,cAAc0D,QAC9B5G,EAAgB6G,iBAElBoG,EAAiBpL,GAAUA,EAAO2M,KAAO,EAC3C,IACC,CAAC7J,EAAS3E,EAAiBgO,IAExBS,EAA2B9N,uBAC/BwG,IAAiB,IAAhB,OAAEnG,GAAQmG,EACT,MAAM,MAAE1J,GAAUuD,EACZ0N,EAAY1O,EAAgBkD,cAAc3B,SAChD8L,EAAoB5P,GACpB,MAAMkR,EAAYlR,EAAQsD,OAAO,IAADwJ,OAAK9M,IAAW,EAChDkQ,EAAwBgB,GACxB,MAAMC,EAAOxI,YAAapG,EAAgBkG,QAASlG,EAAgBkD,cAAc3B,UAC3EsN,EAAoBpR,EAAQyB,EAAmBwO,IAAqBjQ,EAAQ,GAAKA,GAASmR,EAC1FE,EAAyBrR,EAAQ2Q,EAAyBV,IAAqBjQ,EAAQ,GAAKA,GAASmR,EAO3G,GALIpB,IAAmBX,GAAenK,OACpCyK,GAAmB0B,GAEnB1B,GAAmB2B,GAEjBrR,EAAQ,EAAG,CACb,MAAMsR,EAAgB5N,YACpBC,IAAWC,kBAAkB5D,EAAOuC,EAAgBkD,cAAc3B,UAClEmN,GAGElB,IAAmBX,GAAenK,OACpCyK,GAAmB0B,GAAqBE,EAAcvN,UAEtD2L,GAAmB2B,GAA0BC,EAAcvN,SAE/D,IAEF,CACEmM,EACAS,EACAV,EACAxO,EACAsO,EACAxN,IAIEgP,EAAerO,uBAAYe,UAC/B,IAAKwL,EAAgB,CACnB,MACMjJ,EADS,IAAI6E,QAAMC,UAAU+D,GAAW9D,KAC1Bc,mBAAmB,qBAAsB,CAC3D3I,YAAa8N,OAAO7B,GAAmBpN,EAAgBkD,cAAc3B,UACrEiM,IAAmBX,GAAenK,SAEpC,GAAI4K,EACF,IACE,MAAMY,QAAaZ,EAAYlD,aAAa0C,GAAWlG,QAAQhC,GAAUX,GACzE,GAAIiK,EAAM,CACRf,GAAkB,GAClBE,EAAoB,GACpBzN,EAAU+B,IAAWG,gBACAoM,EAAK/L,SAExB6K,GAAYvI,IAAWA,IACvB/E,EAAaiC,IAAWS,SACxB+K,GAAkB,GAClBQ,EAAwB,SAClBpN,IAEV,CACF,CAAE,MAAOK,GACPjB,EAAWgC,IAAWC,QAAS,OAADhB,QAAC,IAADA,OAAC,EAADA,EAAGoG,UAAW,OAADpG,QAAC,IAADA,OAAC,EAADA,EAAGuN,SAChD,CAEJ,IACC,CACDjB,EACAE,EACApN,EAAgBkD,cAAc3B,SAC9BiM,EACAF,EACA1I,EACAhF,EACAoN,EACAtN,EACAiO,EACApN,EACAZ,IAOF,OAJA0K,qBAAU,KACRiE,GAAc,GACb,CAACA,IAGFhM,eAAAC,WAAA,CAAAvD,SAAA,CACEsD,eAAC0J,GAAW,CAAAhN,SAAA,CACVT,cAAC2Q,IAAM,CACLlE,YAAa0C,EACbyB,WAAY,CAAE/R,MAAO,QACrBuF,QAAS,CACP,IACoB,OAAf3C,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cACpB0C,MAAO5F,EAAgBkD,cAAcE,SAGzCgM,YAAahC,EACbtJ,YAAa2K,EACbY,SAAO,IAET9Q,cAAC4N,GAAI,CAACpF,IAAI,MAAK/H,SACbT,cAAC+Q,KAAU,CACT9K,QAASA,KACP,MAAMoK,EAAOxI,YAAapG,EAAgBkG,QAASlG,EAAgBkD,cAAc3B,UACjF,GAAIiM,IAAmBX,GAAenK,OAAQ,CAC5C,MAAMjF,EAAQ8R,KAAKC,IAAIzO,OAAO7B,EAAmBwO,IAAoB3M,OAAO6N,IAC5EH,EAAyB,CAAEzN,OAAQ,CAAEvD,UACvC,KAAO,CACL,MAAMA,EAAQ8R,KAAKC,IAAIzO,OAAOqN,EAAyBV,IAAoB3M,OAAO6N,IAClFH,EAAyB,CAAEzN,OAAQ,CAAEvD,UACvC,GACAuB,SACH,UAIHsD,eAACkK,GAAc,CAAAxN,SAAA,CACbT,cAAA,MAAAS,SAAI,8BACJsD,eAAA,OAAKmN,UAAU,UAASzQ,SAAA,CACtBT,cAAA,OACEkR,UAAS,aAAAlF,OAAeiD,IAAmBX,GAAenK,OAAS,SAAW,IAC9E8B,QAASA,KACPiJ,EAAkBZ,GAAenK,QAC7B0K,EAAmB,GACrBD,EACES,EAAmB1O,EAAmB+B,MACpCmM,EAAmBlO,EAAmBwO,GAE5C,EAEFgC,QAASA,IAAM,KACfC,SAAU,EACVC,KAAK,SAAQ5Q,SAEbsD,eAAA,OAAKmN,UAAU,cAAazQ,SAAA,CAC1BsD,eAAA,MAAAtD,SAAA,CACET,cAACsR,IAAU,IAAG,gBAEhBvN,eAAA,KAAAtD,SAAA,CACET,cAAA,QAAAS,SAAO0O,IACPnP,cAAA,QACEmF,MAAO,CACLxG,MACGsQ,IAAmBX,GAAenK,QACjCxD,GACAkO,EAAmBlO,EAAmBwO,IACtCd,IACF,IACF5N,SAEAE,GAAsBkC,IAAWiN,mBAAmBnP,EAAmBwO,KAAuB,OAGpGpL,eAAA,KAAAtD,SAAA,CACET,cAAA,QAAAS,SAAOgB,EAAgBkD,cAAcC,mBAAmBC,SACxD7E,cAAA,QACEmF,MAAO,CACLxG,MACEsQ,IAAmBX,GAAenK,QAClCxD,GACA0O,EAAmB1O,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,QACnFwJ,GACA,IACN5N,SAEAE,GAAsBkC,IAAWiN,mBAAmBnP,EAAmB+B,OAAU,YAM3F1C,cAAA,OACEkR,UAAS,aAAAlF,OAAeiD,IAAmBX,GAAeiD,OAAS,SAAW,IAC9EtL,QAASA,KACPiJ,EAAkBZ,GAAeiD,QAC7B1C,EAAmB,GACrBD,EACEC,EAAmBgB,EAAyBV,IAC1CE,EACEQ,EAAyBpO,EAAgBkD,cAAcC,mBAAmBC,QAElF,EAEFsM,QAASA,IAAM,KACfC,SAAU,EACVC,KAAK,SAAQ5Q,SAEbsD,eAAA,OAAKmN,UAAU,cAAazQ,SAAA,CAC1BsD,eAAA,MAAAtD,SAAA,CACET,cAACkJ,IAAU,IAAG,gBAGhBnF,eAAA,KAAAtD,SAAA,CACET,cAAA,QAAAS,SAAO0O,IACPnP,cAAA,QACEmF,MAAO,CACLxG,MACGsQ,IAAmBX,GAAeiD,QACjC1C,EAAmBgB,EAAyBV,IAC5Cd,IACF,IACF5N,SAEDoP,EAAyBpO,EAAgBkD,cAAcE,aAG5Dd,eAAA,KAAAtD,SAAA,CACET,cAAA,QAAAS,SAAOgB,EAAgBkD,cAAcC,mBAAmBC,SACxD7E,cAAA,QACEmF,MAAO,CACLxG,MACGsQ,IAAmBX,GAAeiD,QACjClC,EACEQ,EAAyBpO,EAAgBkD,cAAcC,mBAAmBC,SAC5EwJ,IACF,IACF5N,SAEDoP,EAAyBpO,EAAgBkD,cAAcC,mBAAmBC,2BAQzFd,eAAC2J,GAAG,CAAAjN,SAAA,CACD6O,EACDvL,eAAA,SAAOmN,UAAU,aAAaM,YAAa,GAAIC,YAAa,GAAGhR,SAAA,CAC7DsD,eAAA,SAAAtD,SAAA,CACEsD,eAAA,MAAAtD,SAAA,CACET,cAAA,MAAIkR,UAAU,OAAOQ,QAAS,EAAEjR,SAAC,SAGjCT,cAAA,MAAIkR,UAAU,KAAIzQ,SAAC,UAErBsD,eAAA,MAAAtD,SAAA,CACET,cAAA,MAAIkR,UAAU,QAAOzQ,SAAC,qBACtBT,cAAA,MAAIkR,UAAU,OAAMzQ,SACjBoC,IAAWiN,mBACVtN,OAAOqF,YAA4B,OAAfpG,QAAe,IAAfA,OAAe,EAAfA,EAAiBkG,QAAwB,OAAflG,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAc3B,cAGjFhD,cAAA,MAAIkR,UAAU,KAAIzQ,SACfoC,IAAWiN,mBACVtN,OAAOqF,YAA4B,OAAfpG,QAAe,IAAfA,OAAe,EAAfA,EAAiBkG,QAAwB,OAAflG,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAc3B,WAC3E6L,WAKV9K,eAAA,SAAAtD,SAAA,CACEsD,eAAA,MAAAtD,SAAA,CACET,cAAA,MAAIkR,UAAU,QAAOzQ,SAAEkF,IAAcC,kBACrC5F,cAAA,MAAIkR,UAAU,OAAMzQ,SAAEiB,EAAgBmE,eACtC7F,cAAA,MAAIkR,UAAU,KAAIzQ,SAAEoB,OAEtBkC,eAAA,MAAAtD,SAAA,CACET,cAAA,MAAIkR,UAAU,QAAOzQ,SAAEkF,IAAcG,0BACrC9F,cAAA,MAAIkR,UAAU,OAAMzQ,SAAEiB,EAAgBqE,kBAEtC/F,cAAA,MAAIkR,UAAU,KAAIzQ,SAAEqB,OAEtBiC,eAAA,MAAImN,UAAU,SAAQzQ,SAAA,CACpBT,cAAA,MAAIkR,UAAU,QAAOzQ,SAAC,4BACtBsD,eAAA,MACEmN,UAAU,KACVQ,QAAS,EACTvM,MAAO,CACLxG,MACGsQ,IAAmBX,GAAenK,QACjCxD,GACA0O,EAAmB1O,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,SACxFoK,IAAmBX,GAAeiD,QACjClC,EACEQ,EAAyBpO,EAAgBkD,cAAcC,mBAAmBC,QAC1EwJ,GACA,IACN5N,SAAA,CAEA4O,EAAoB,SAAArD,OAAOqD,GAAR,EAA2B,uBAM1DtL,eAACoK,GAAO,CAAA1N,SAAA,CACJwO,IAAmBX,GAAenK,QAClCxD,GACA0O,EAAmB1O,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,SACxFoK,IAAmBX,GAAeiD,QACjClC,EAAmBQ,EAAyBpO,EAAgBkD,cAAcC,mBAAmBC,QAC7Fd,eAAA,OAAKlF,MAAM,KAAKD,OAAO,KAAK+S,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4BpR,SAAA,CAC5FT,cAAA,QACE8R,EAAE,+GACFF,KAAK,YAEP5R,cAAA,QACE+R,SAAS,UACTC,SAAS,UACTF,EAAE,udACFF,KAAK,aAIT7N,eAAA,OAAKlF,MAAM,KAAKD,OAAO,KAAK+S,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4BpR,SAAA,CAC5FT,cAAA,QACE8R,EAAE,+GACFF,KAAK,YAEP5R,cAAA,QACE+R,SAAS,UACTC,SAAS,UACTF,EAAE,ydACFF,KAAK,aAKX5R,cAAA,KACEmF,MAAO,CACLxG,MACGsQ,IAAmBX,GAAenK,QACjCxD,GACA0O,EAAmB1O,EAAmBc,EAAgBkD,cAAcC,mBAAmBC,SACxFoK,IAAmBX,GAAeiD,QACjClC,EAAmBQ,EAAyBpO,EAAgBkD,cAAcC,mBAAmBC,QAC3FwJ,GACA,IACN5N,SACH,uFAIFwO,IAAmBX,GAAeiD,OACjCvR,cAAC8N,GAAgB,CAAC1N,SAAUuO,EAAgB1I,QAASwK,EAAahQ,SAAC,eAInET,cAAAgE,WAAA,CAAAvD,SACGG,EACCZ,cAAC8N,GAAgB,CAAC1N,SAAUuO,EAAgB1I,QAASwK,EAAahQ,SAAC,eAInET,cAAC8N,GAAgB,CAAC1N,SAAUQ,EAAeqF,QAASpF,EAAUJ,SAAC,gBAQ3E,EC7fewR,OA7Gf,SAAgCvT,GAAQ,IAADwT,EACrC,MAAM,cAAEtR,EAAa,UAAEC,GAAcnC,GAC9BoC,EAAaC,GAAkBC,mBAAiB,IAChDC,EAAYC,GAAeF,oBAAS,IACrC,aAAEG,EAAY,WAAEC,EAAU,UAAEC,GAAcC,eAC1C,gBAAEI,EAAe,gBAAED,EAAe,yBAAE+E,GAA6B7E,eACjE,wBAAEC,EAAuB,kCAAEE,GAAsCC,eACjE,qBAAEC,EAAoB,qBAAEC,GAAyBC,cACjDuC,EAAcoC,mBAAQ,KAAO,IAADsL,EAAAC,EAChC,OAAOvK,YACoG,QADxFsK,EACqB,QADrBC,EACjB5L,EAAyBM,qBAAa,IAAAsL,OAAA,EAAtCA,EAAwCtK,SAASrG,EAAgBkD,cAAcC,mBAAmBC,eAAO,IAAAsN,IAAI,EAC7G1Q,EAAgBkD,cAAcC,mBAAmB5B,UACjD,EACD,GACA,CAACvB,EAAgBkD,cAAcC,mBAA0D,QAAxCsN,EAAE1L,EAAyBM,qBAAa,IAAAoL,OAAA,EAAtCA,EAAwCpK,WAExF3F,EAAoBC,uBACxB,CAACC,EAAGC,KACF,MAAMC,EAAqB,IAATD,EAAaE,OAAOH,EAAEI,OAAOvD,OAASuF,EAClD9B,EAAkBC,YACtBC,IAAWC,kBAAkBP,EAAWQ,IAAOL,KAAKM,UACpDD,IAAOL,KAAKM,UAEVT,EAAYkC,GAAelC,GAAa,GAAKI,EAAgBM,SAC/D/B,GAAY,GAEZA,GAAY,GAEdH,EAAwB,IAATuB,EAAaD,EAAEI,OAAOvD,MAAQqD,GAC7CX,EAAwBW,EAAU,GAEpC,CAACkC,EAAa7C,IAEVsB,EAAWd,uBAAYe,UAC3B,IACE,IAAKrC,GAAgBA,EAAc2D,GAAe3D,GAAe,EAE/D,YADAM,EAAWgC,IAAWC,OAAQ,+BAGhCnC,GAAY,GACZ,MAAMoC,QAAerB,EAAqBnB,GAC1CO,EACE+B,IAAWG,SACXvD,cAACwD,IAAwB,CAACC,QAAQ,2BAA2BC,OAAQJ,EAAOK,cAEzDL,EAAOM,SAE1BzC,EACEiC,IAAWS,QACX7D,cAAC8D,IAAsB,CAACL,QAAQ,yBAAyBC,OAAQJ,EAAOK,QAE1EzC,GAAY,GACZH,EAAe,GACfa,EAAwB,SAClBI,IAEV,CAAE,MAAOqQ,GACPnR,GAAY,EACd,IACC,CACDJ,EACA2D,EACAxC,EACAZ,EACAF,EACAa,EACAJ,EACAR,IAGF,OACE2C,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAACiE,IAAO,CACNC,WAAYgF,IACZ9E,QAASC,IACTE,aAAc7C,EAAgB8C,gBAC9BF,aAAcD,IACdI,YAAaA,EACbC,YAAajD,EAAgBkD,cAAcC,mBAAmBC,OAC9DC,eAAgBrD,EAAgBkD,cAAcC,mBAAmBC,OACjEE,UAAWwH,IACXlH,eAAgBvE,EAChBwE,gBAAiBxE,EACjByE,YAAclD,IACZF,EAAkBE,EAAG,EAAE,EAEzBmD,MAAOA,KACLrD,EAAkB,CAAC,EAAG,EAAE,IAG5BnC,cAACyF,IAAW,CACVC,KAAM,CAEJ,CAACC,IAAcC,gBAAiBlE,EAAgBmE,aAAcnE,EAAgBmE,cAE9E,CAACF,IAAcG,wBAAyBpE,EAAgBqE,gBAAiBjE,MAG7E9B,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,UAAWQ,GAAiBK,KAAgBH,EAAc,GAC1DmF,QAASrF,EAAgBsC,EAAWrC,EAAUJ,SAE7CG,EAAgB,SAAW,cAIpC,EC/Ge,SAAS0R,GAAqB5T,GAC3C,MAAM,cAAEkC,EAAa,UAAEC,GAAcnC,GAC/B,OAAEgL,EAAM,QAAErD,EAAO,QAAED,GAAYuD,eAC/B,mBAAEhJ,GAAuB2I,eACzB,SAAEC,EAAQ,aAAEC,GAAiBC,cACnC,OACE1F,eAAC6F,IAAO,CAAAnJ,SAAA,CACNT,cAAC6J,IAAK,CAAApJ,SAAC,sCACPsD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,6DAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GACCvJ,cAACU,EAAsB,CACrBgJ,OAAQA,EACRtD,QAASA,EACTC,QAASA,EACT1F,mBAAoBA,EACpBE,UAAWA,EACXD,cAAeA,SAKvBmD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,mEAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GACCvJ,cAACiS,GAAsB,CACrBvI,OAAQA,EACRtD,QAASA,EACTC,QAASA,EACT1F,mBAAoBA,EACpBE,UAAWA,EACXD,cAAeA,SAKvBmD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,4CAEdT,cAACmK,IAAgB,CAAA1J,SAAe,WAAb8I,GAAyBvJ,cAACwO,GAAc,WAInE,CClDe,SAAS+D,GAAuB7T,GAC7C,MAAM,SAAE6K,EAAQ,aAAEC,GAAiBC,eAC7B,cAAE7I,EAAa,UAAEC,GAAcnC,GAC/B,mBAAEiC,GAAuB2I,eACzB,OAAEI,EAAM,QAAErD,EAAO,QAAED,GAAYuD,cACrC,OACE5F,eAAC6F,IAAO,CAAAnJ,SAAA,CACNT,cAAC6J,IAAK,CAAApJ,SAAC,6BACPsD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,6DAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GACCvJ,cAACU,EAAsB,CACrBgJ,OAAQA,EACRtD,QAASA,EACTC,QAASA,EACT1F,mBAAoBA,EACpBE,UAAWA,EACXD,cAAeA,SAKvBmD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,uDAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GACCvJ,cAACmG,EAAmB,CAClBuD,OAAQA,EACRtD,QAASA,EACTC,QAASA,EACT1F,mBAAoBA,EACpBE,UAAWA,EACXD,cAAeA,SAKvBmD,eAAC+F,IAAS,CAACC,GAAG,SAASR,SAAuB,WAAbA,EAAuBS,SAAUR,EAAa,UAAU/I,SAAA,CACvFT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,4CAEdT,cAACmK,IAAgB,CAAA1J,SACD,WAAb8I,GAAyBvJ,cAACwS,GAAa,WAKlD,C,qEC5BA,MAAMC,GAASjU,YAAOuP,IAAPvP,CAAc8B,QAAAC,YAAA,4RAarB6J,WAAU,mBAAEsI,IAAoBrI,IAClCC,GAAsB,IAAIC,QAAMC,UAAUJ,GAAWK,KACrDkI,GAA2B,IAAIpI,QAAMC,UAAUkI,GAAgBjI,KAC/DmI,GAAYA,CAACC,EAAQC,EAASC,EAAYC,KAC9C,IAAKH,EAAOI,YAAa,OACzB,MAAM,OAAEC,EAAM,YAAED,GAAgBJ,EAChC,GAAIK,EAAOC,cAAgBF,EAAYE,YAAa,CAClD,MAAMC,EAAeN,EAAQI,EAAOC,aAC9BE,EAAaP,EAAQG,EAAYE,aACjCG,EAAc,IAAIF,EAAaG,OAC/BC,EAAY,IAAIH,EAAWE,QAC1BE,GAAWH,EAAYI,OAAOR,EAAOS,MAAO,GACnDH,EAAUE,OAAOT,EAAYU,MAAO,EAAGF,GACvCV,EAAW,IAAIM,EAAYG,GAC7B,KAAO,CACL,MAAMI,EAAc,IAAId,IACjBW,GAAWG,EAAYF,OAAOR,EAAOS,MAAO,GACnDC,EAAYF,OAAOT,EAAYU,MAAO,EAAGF,GACrCG,EAAYzM,KAAKkG,GAAOA,EAAGwG,MAAQ,IAAGC,UAAS,GACjDd,GAAY,GAEZA,GAAY,GAEdD,EAAWa,EACb,GAGa,SAAStB,GAAqB5T,GAC3C,MAAM,UAAEmC,EAAS,cAAED,GAAkBlC,GAC/B,QAAE2H,GAAYsD,eACd,UAAEtI,EAAS,WAAED,EAAU,aAAED,GAAiBG,eAC1C,OAAE2J,EAAM,WAAE2B,GAAe1B,eACxB4H,EAASC,GAAc/R,mBAmB5B,KACI,SAAEuI,EAAQ,aAAEC,GAAiBC,eAC5BsK,EAAgBf,GAAehS,oBAAS,IACxCO,EAAkBC,GAAuBR,oBAAS,IACnD,6BACJgT,EAA4B,0BAC5BnS,EAAyB,mBACzBuJ,EAAkB,kCAClBtJ,GACEC,eACE,qBAAEC,GAAyBE,eAC3B,yBAAEsE,EAAwB,gBAAE9E,EAAe,gBAAED,GAAoBE,cAEjEsS,EAAYpN,mBAahB,KACA,GAA4B,OAAxBL,QAAwB,IAAxBA,KAA0B0N,WAAY,CACxC,MAAM,cAAEpN,GAAkBN,EACpB2N,EAAOlN,OAAOC,OAAOJ,EAAc/D,QAAQoE,KAAKkG,IACpD,MAAM1F,GACU,OAAbb,QAAa,IAAbA,OAAa,EAAbA,EAAegB,WACbD,aAA0B,OAAbf,QAAa,IAAbA,OAAa,EAAbA,EAAegB,SAASuF,EAAGxI,UAAW,EAAGwI,EAAGrK,UAAU,IACtE,EACF,MAAO,CACLA,SAAUqK,EAAGrK,SACbqE,MAAOgG,EAAGxI,OACV8C,UACAL,KAAMA,IAAMtH,cAACuH,IAAI,CAACC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAAQJ,MAAOgG,EAAG3F,KAAM7C,OAAQwI,EAAGxI,SACvF+C,gBAAiB,GAClB,IAEH,OAAOuM,EAAKhN,KAAKC,IACR,IACFA,EACHQ,gBAAiBuM,EAAKC,QAAQ/G,GAAOA,EAAGhG,QAAUD,EAAKC,WAG7D,CACA,MAAO,EAAE,GACR,CAACb,IACE6N,EAAajS,uBAAY,KAC7B2Q,GAAY7M,IACV,MAAMR,EAAO,IACRQ,EACH,CACE6D,GAAIuK,OACJT,MAAO,EACPU,OAAQ,EACRC,WAAYP,EAAU,GACtBQ,YAAaR,EAAU,GAAGrM,gBAAgB,KAQ9C,OALIlC,EAAKyB,KAAKkG,GAAOA,EAAGwG,MAAQ,IAAGC,UAAS,GAC1Cd,GAAY,GAEZA,GAAY,GAEPtN,CAAI,GACX,GACD,CAACuO,IAEE/Q,EAAWd,uBAAYe,UAC3B,MAAM4L,EAAc2F,YAAYzJ,EAAQW,EAAanK,EAAgB6G,iBACrE,IACE,GAAIyG,EAAa,CAEf,GADiB+D,EAAQsB,QAAQ/G,GAAOA,EAAGwG,OAAS,IACvC3L,OAEX,YADA9G,EAAWgC,IAAWC,OAAQ,+BAIhC2P,GAAY,GACZ,MAAM2B,EAAU7B,EAAQ3L,KAAKkG,IAC3B,MAAMuH,EAAchS,YAAa8N,OAAOrD,EAAGwG,OAAQxG,EAAGmH,WAAWxR,UAC3D6R,EAAejS,YAAa8N,OAAOrD,EAAGkH,QAASlH,EAAGoH,YAAYzR,WAC9D,iBAAE8R,GAAqBC,YAAS,CACpC1O,UACAW,KAAMqG,EAAGmH,WAAWnN,MACpB2N,GAAI3H,EAAGoH,YAAYpN,QASrB,OANAkB,QAAQ0M,IAAI5H,EAAGmH,WAAWnN,MAAOgG,EAAGoH,YAAYpN,MAAO,CACrDuN,EACA,IACAE,EACA,oBAEK,CACL1K,GAAW/B,QAAQhC,GACnBiE,GAAoBiB,mBAAmB,2BAA4B,CACjEqJ,EACAC,EACAC,EACA,oBAEH,IAEGI,EAAYvC,GAAyBpH,mBAAmB,YAAa,CAACoJ,IACtEQ,QAAoBpG,EAAYlD,aAAa6G,GAAgBrK,QAAQhC,GAAU6O,GACjFC,EAAYxR,MACdtC,EACE+B,IAAWG,SACXvD,cAACwD,IAAwB,CAACC,QAAQ,2BAA2BC,OAAQyR,EAAYxR,QAIrF,SADqBwR,EAAYvR,OACrB,CACVoP,GAAY,GACZgB,EAA6B,GAC7B7S,EACEiC,IAAWS,QACX7D,cAAC8D,IAAsB,CAACL,QAAQ,kCAAkCC,OAAQyR,EAAYxR,QAExF,UACQ3B,GACR,CAAE,MAAOqQ,GACP9J,QAAQ8J,MAAM,2BAA4BA,EAC5C,CACF,CACF,CACF,CAAE,MAAOA,GACPW,GAAY,GACZ5R,EACE,SACApB,cAACoV,IAAQ,CAACjQ,MAAO,CAAEkQ,cAAe,UAAW5U,SAC3CT,cAAA,KACEmF,MAAO,CACLmQ,UAAW,aACX7U,SAED4R,EAAM5J,WAIf,IACC,CACDwC,EACAxJ,EAAgB6G,gBAChBwK,EACAzM,EACAhF,EACA2S,EACA7S,EACAa,EACAZ,IAGF0K,qBAAU,KACJmI,EAAU/L,QACZ6K,GAAW,IACF,CACL,CACEhJ,GAAIuK,OACJT,MAAO,EACPU,OAAQ,EACRC,WAAYP,EAAU,GACtBQ,YAAaR,EAAU,GAAGrM,gBAAgB,MAIlD,GACC,CAACqM,IACJ,MAAMsB,EAAsBnT,uBAC1B,CACEC,EACA+E,KAmBA,MAAMlI,EAAQ2D,IAAWC,kBAAkBN,OAAOH,EAAEI,OAAOvD,OAAQkI,EAAKoN,WAAWxR,UACnF,GAAIR,OAAOtD,GAASsD,OAAOgT,iBAEzB,YADAxC,GAAY,GAGd,MAAMyC,EACJlI,YACElH,EACAe,EAAKoN,WAAWnN,MAChBD,EAAKqN,YAAYpN,MACjBzE,YAAa1D,EAAOkI,EAAKoN,WAAWxR,UACpC4J,IACG,EACPmG,GAAY7M,IACV,MAAMR,EAAOQ,EAAMiB,KAAKkG,IACR,IACTA,EACHwG,MAAOxG,EAAGtD,KAAO3C,EAAK2C,GAAK1H,EAAEI,OAAOvD,MAAQmO,EAAGwG,MAC/CU,OAAQlH,EAAGtD,KAAO3C,EAAK2C,GAAMlC,YAAa4N,EAAKrO,EAAKqN,YAAYzR,UAAU,GAAmBqK,EAAGkH,WAcpG,OAVI7O,EAAKyB,KAAKkG,GAAOA,EAAGwG,MAAQ,GAAKxG,EAAGkH,OAAS,GAAKlH,EAAGwG,MAAQxG,EAAGmH,WAAW7M,UAASmM,UAAS,KAGvE,IAAxB5U,EAAMwW,QAAQ,MACdhF,OAAOxR,GAAOyW,MAAMzW,EAAMwW,QAAQ,KAAO,GAAGxN,OAASd,EAAKoN,WAAWxR,SAHrEgQ,GAAY,GAOZA,GAAY,GAEPtN,CAAI,GACX,GAEJ,CAACW,EAASuG,IAENgJ,EAAgBxT,uBACpB,CAAC2G,EAAUgB,EAAIzH,KACbyQ,GAAY7M,GACHA,EAAMiB,KAAKC,IAChB,GAAIA,EAAK2C,KAAOA,EAAI,CAClB,MAAMrE,EAAO,IAAK0B,EAAM,CAAC9E,GAAOyG,GAChC,GAAIrD,EAAKmO,MAAO,CACd,MAAM4B,EAAMlI,YACVlH,EACAX,EAAK8O,WAAWnN,MAChB3B,EAAK+O,YAAYpN,MACjBzE,YACEC,IAAWC,kBAAkB4C,EAAKmO,MAAOnO,EAAK8O,WAAWxR,UACzD0C,EAAK8O,WAAWxR,UAElB4J,GAEFlH,EAAK6O,OAAS1M,YAAa4N,EAAK/P,EAAK+O,YAAYzR,UAAU,EAC7D,CACA,OAAO0C,CACT,CACA,OAAO0B,CAAI,KAEb,GAEJ,CAACf,EAASuG,IAENiJ,EAAazT,uBAAY,CAAC0T,EAAQnC,KACtCZ,GAAY7M,GACHA,EAAMiB,KAAI,CAACC,EAAM2O,KACtB,GAAIA,IAAMpC,EAAO,CACf,MAAMjO,EAWF,IACC0B,EAAKqN,YACR7M,gBAAiB,IAEnBlC,EAAKkC,gBAAkB,IAAIR,EAAKoN,WAAW5M,iBAC3ClC,EAAKkC,gBAAgBoO,KAAK5O,EAAKoN,YAC/B9O,EAAKkC,gBAAkBlC,EAAKkC,gBAAgBwM,QAAQ/G,GAAOA,EAAGhG,QAAUD,EAAKqN,YAAYpN,QAQzF,MAAO,IAPQ,IACVD,EACHqN,YAAarN,EAAKoN,WAClBA,WAAY,IAAK9O,EAAMiC,QAASP,EAAKqN,YAAY9M,SACjDkM,MAAO,EACPU,OAAQ,GAGZ,CACA,OAAOnN,CAAI,KAEb,GACD,IAuCH,OArCA0E,qBAAU,KACR,MAAM,WAAEoI,GAAe1N,EACvB,GAAI0N,EAAY,CACd,MAAM+B,EAAWnD,EAAQ3L,KAAKkG,IAAE,CAC9BrG,KAAMqG,EAAGmH,WAAWnN,MACpB2N,GAAI3H,EAAGoH,YAAYpN,MACnB6O,aAAc7I,EAAGmH,WAAWxR,SAC5BmT,WAAY9I,EAAGoH,YAAYzR,SAC3BoT,WAAY5T,OAAO6K,EAAGwG,OACtBwC,YAAa7T,OAAO6K,EAAGkH,YAEzB,IAAI+B,EAAQ,EACZL,EAASM,SAASnP,IAChBkP,GACElP,EAAKgP,WACJvO,YACCqM,EAAW9M,EAAKJ,MAAMwP,MACtB/U,EAAgBkD,cAAcC,mBAAmB5B,UACjD,GAEJsT,GACElP,EAAKiP,YACJxO,YACCqM,EAAW9M,EAAK4N,IAAIwB,MACpB/U,EAAgBkD,cAAcC,mBAAmB5B,UACjD,EACU,IAEhBgR,EAA6BsC,EAC/B,IACC,CACDxD,EACArR,EAAgBkD,cAAcC,mBAAmB5B,SACjDwD,EACAwN,IAIAjQ,eAAC6F,IAAO,CAAAnJ,SAAA,CACNT,cAAC6J,IAAK,CAAApJ,SAAC,+BACPsD,eAAC+F,IAAS,CAACC,GAAG,UAAUR,SAAuB,YAAbA,EAAwBS,SAAUR,EAAa,WAAW/I,SAAA,CAC1FT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,2CAEdsD,eAACoG,IAAgB,CAAA1J,SAAA,CACfT,cAACyW,KAAe,CAAC7D,UAAYC,GAAWD,GAAUC,EAAQC,EAASC,EAAYC,GAAavS,SAC1FT,cAAC0W,KAAS,CAACvD,YAAY,cAAa1S,SAChCkW,GAEE5S,eAAA,UAAS4S,EAASC,eAAgBC,IAAKF,EAASG,SAASrW,SAAA,CACtDqS,EAAQ3L,KAAI,CAACC,EAAMuM,IAEhB3T,cAAC+W,KAAS,CAAeC,YAAa5P,EAAK2C,GAAI4J,MAAOA,EAAOsD,eAA0B,IAAVtD,EAAYlT,SACrFyW,IACA,MAAMC,EACHvK,EAAW1E,QACVqF,YACElH,EACAe,EAAKoN,WAAWnN,MAChBD,EAAKqN,YAAYpN,MACjBzE,YAAa,IAAKwE,EAAKoN,WAAWxR,UAClC4J,IAEJ,EACI4J,EAAQ3O,YAAasP,EAAW/P,EAAKqN,YAAYzR,UAAU,GAC3DoU,EAAWvU,IAAWiN,mBAAmB0G,GAC/C,OACEzS,eAAA,OACE8S,IAAKK,EAAUJ,YACXI,EAAUG,kBACVH,EAAUI,gBACdnS,MAAO,CACLrF,QAAS,OACTyX,WAAY,SACZC,WAAY,OACZC,OAAQ,eACLP,EAAUG,eAAelS,MAC5B9F,SAAU,UACVoB,SAAA,CAEFsD,eAAA,OAAKoB,MAAO,CAAEtG,MAAO,OAAQQ,SAAU,WAAYqY,aAAc/D,GAAS,EAAI,GAAK,GAAIlT,SAAA,CACrFT,cAACiE,IAAO,CACNC,WAAYgF,IACZ7D,eAAgB+B,EAAKyM,MACrBvO,gBAAiB8B,EAAKmN,OACtBoD,YAAU,EACV9B,WAAYA,KACVA,EAAWzO,EAAMuM,EAAM,EAEzBvP,QAAS6P,EACTvL,gBAAiBtB,EAAKoN,WAAWnN,MACjC5C,YAAa2C,EAAKoN,WAAW7M,QAC7BgB,iBAAkBvB,EAAKqN,YAAYpN,MACnC9C,aAAc6C,EAAKqN,YAAY9M,QAC/BrD,aAAc8C,EAAKoN,WAAW5M,gBAC9B8E,gBAAiB,IACjBkL,kBAAmB,EAAC,GAAO,GAC3B7S,UAAWmE,IACX2O,mBAAoB,EAAC,GAAO,GAC5BtS,YAAclD,IACZkT,EAAoBlT,EAAG+E,EAAK,EAE9B0B,WAAaC,IACX6M,EAAc7M,EAAU3B,EAAK2C,GAAI,aAAa,EAEhD+N,YAAc/O,IACZ6M,EAAc7M,EAAU3B,EAAK2C,GAAI,cAAc,EAEjDvE,MAAOA,KACL+P,EAAoB,CAAE9S,OAAQ,CAAEvD,MAAOkI,EAAKoN,WAAW7M,UAAaP,EAAK,EAE3E2Q,WAAY3Q,EAAKoN,WAAWnN,MAC5B3C,YAAa0C,EAAKqN,YAAYpN,QAEhCtD,eAAA,KACEoB,MAAO,CACL9F,SAAU,WACVJ,OAAQ,EACR+Y,MAAOrE,GAAS,EAAI,GAAK,GACzBhV,MAAO,qBACPe,SAAU,IACVe,SAAA,IAAAuL,OAEE,EAAC,IAAI5E,EAAKoN,WAAWnN,OAAQ,WAAG,GAAA2E,OAAIoL,EAAQ,KAAApL,OAAI5E,EAAKqN,YAAYpN,aAGxEsM,EAAQ,EACP5P,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAACiY,KAAU,CACThS,QAASA,KACP,MAAMP,EAAO,IAAIoN,GACjBpN,EAAKgO,OAAOC,EAAO,GACfjO,EAAKyB,KAAKkG,GAAOA,EAAGwG,MAAQ,IAAGC,UAAS,GAC1Cd,GAAY,GAEZA,GAAY,GAEdD,EAAWrN,EAAK,EAElBP,MAAO,CAAE+S,OAAQ,UAAWC,UAAW,EAAGC,WAAY,GAAIzY,QAAS,GAAIc,SAEvET,cAACqY,IAAU,MAEbrY,cAACiY,KAAU,CAAC9S,MAAO,CAAEgT,UAAW,EAAGC,WAAY,EAAGzY,QAAS,GAAIc,SAC7DT,cAACsY,IAAa,CAACnT,MAAO,CAAEyM,KAAM,eAGhC,OACA,GAhGIxK,EAAK2C,MAsGxB4M,EAAS4B,mBAMpBvY,cAACyS,GAAM,CAACxM,QAASoO,EAAW5T,SAC1BT,cAACwY,KAAO,MAEVxY,cAACyF,IAAW,CACVC,KAAM,CACJ,CACEC,IAAcC,gBACdlE,EAAgBmE,aAAa,GAADmG,OAED,IAAvBZ,GAA4BA,IAAuB5I,OAAOiW,kBAAqB,SAAM,GAAE,KAAAzM,OACvFnK,IAGN,CACE8D,IAAcG,wBACdpE,EAAgBqE,gBAChBjE,MAILlB,EACCZ,cAACgG,IAAO,CAACb,MAAO,CAAEhG,UAAW,QAAUiB,SAAU2T,EAAgB9N,QAAS/C,EAASzC,SAAC,WAIpFT,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,SAAUmB,EACV0E,QAASA,KACPpF,GAAWqF,IACT1E,EAAoB0E,EAAM,GAC1B,EACFzF,SACH,oBASb,C,iBCnjBA,MAAMiY,GAAcla,YAAO,MAAPA,CAAa8B,QAAAC,YAAA,i8CAoEhC,IAEIoY,GAAW,SAAXA,GAAW,OAAXA,EAAW,qBAAXA,EAAW,sBAAXA,EAAW,8BAAXA,CAAW,EAAXA,IAAW,IAMhB,MAAMC,GAAsB,CAC1B,CACEtW,KAAMqW,GAAYE,SAClBxR,MAAO,YACP0C,GAAI,uCACJzC,KAAMnD,KAER,CACE7B,KAAMqW,GAAYG,WAClBzR,MAAO,mBACPC,KAAMiF,IACNxC,GAAI,wCAEN,CACEzH,KAAMqW,GAAYI,SAClB1R,MAAO,aACPC,KAAM4B,IACNa,GAAI,0CAIAK,WAAW,IAAIC,IAEjBC,GAAsB,IAAIoB,IAAOnB,MAAMC,UAAUJ,GAAWK,KAC5DuO,GAAoBnU,IACxB,MAAMoU,EAAMC,IAAcrU,GAC1B,OAAOsU,IAAaF,GAAKjW,QAAQ,EAGpB,SAASoW,GAAgB1a,GACtC,MAAM,cAAEkC,EAAa,UAAEC,GAAcnC,GAC9B2a,EAAYC,GAAiBtY,oBAAS,IACtCO,EAAkBC,GAAuBR,oBAAS,IAEnD,OAAEiK,EAAM,WAAE2B,GAAe1B,eACzB,mBAAEvK,EAAkB,WAAE8N,GAAenF,eACpCuB,EAASC,GAAc9J,oBAAS,IACjC,UAAEK,EAAS,aAAEF,EAAY,WAAEC,GAAeE,eAE1C,gBAAEG,EAAe,yBAAE+E,EAAwB,gBAAE9E,GAAoBC,eACjE,wBACJ8E,EAAuB,wBACvB7E,EAAuB,0BACvBC,EAAyB,kCACzBC,EAAiC,mBACjCsJ,EAAkB,2BAClBD,GACEpJ,eACE,qBAAEC,GAAyBE,eAE1BqX,EAAYC,GAAiBxY,mBAAS,CAC3C,CACEyY,YAAad,GAAYE,SACzBa,UAAWjY,EAAgBkD,cAAcE,OACzC/D,YAAa,EACbiJ,GAAI,uCACJ4P,qBAAqB,EACrBxF,KAAM,IAAIyE,IACVvR,MAAO5F,EAAgBkD,cAAcC,mBAAmBC,OACxD7B,SAAUvB,EAAgBkD,cAAcC,mBAAmB5B,UAE7D,CACEyW,YAAad,GAAYI,SACzBW,UAAWjY,EAAgBkD,cAAcE,OACzC/D,YAAa,EACbiJ,GAAI,uCACJ4P,qBAAqB,EACrBxF,KAAM,IAAIyE,IACVvR,MAAO5F,EAAgBkD,cAAcC,mBAAmBC,OACxD7B,SAAUvB,EAAgBkD,cAAcC,mBAAmB5B,YAIzD4W,EAAkB/S,mBAAQ,KAC9B,GAAIL,EAAyBM,cAAe,CAC1C,MAAM,SAAEgB,EAAQ,OAAE/E,GAAWyD,EAAyBM,cACtD,OAAOG,OAAOgG,KAAKnF,GAAU+R,QAAO,CAACC,EAAKb,KACjC,IACFa,EACH,CAACb,GAAMpR,YAAaC,EAASmR,GAAMlW,EAAOkW,GAAKjW,UAAU,MAE1D,CAAC,EACN,CACA,OAAOiE,OAAOgG,KAAKiM,KAAeW,QAAO,CAACC,EAAKb,KACtC,IACFa,EACH,CAACb,GAAM,KAER,CAAC,EAAE,GACL,CAACzS,EAAyBM,gBAEvBmN,EAAYpN,mBAAQ,KACxB,GAAIL,EAAyBM,cAAe,CAC1C,MAAM,OAAE/D,GAAWyD,EAAyBM,cAC5C,OAAOG,OAAOgG,KAAKlK,GAAQoE,KAAK8R,IACvB,CACL5R,MAAO4R,EACPjW,SAAUD,EAAOkW,GAAKjW,SACtBqF,QAAStF,EAAOkW,GAAK5Q,QACrBf,KAAMA,IAAMtH,cAACuH,IAAI,CAACC,SAAU,CAAErC,MAAO,CAAEsC,YAAa,KAAQJ,MAAOtE,EAAOkW,GAAKvR,KAAM7C,OAAQoU,OAGnG,CACA,MAAO,EAAE,GACR,CAACzS,EAAyBM,gBAEvBJ,EAAWC,eACX,SAAE4C,EAAQ,aAAEC,GAAiBC,eAC7B,OAAEC,EAAM,QAAErD,GAAO,QAAED,IAAYuD,cAC/BoF,GAAcC,aAAetF,EAAQuB,GAErC/H,GAAWd,uBAAYe,UAC3B,IAAK4L,GAAa,OAElBjE,GAAW,GAEX,IAAIpF,EAAO,KACPqU,GAAa,EACjB,MAAMC,EAAuB,IACtBC,EAAcC,GAAiBX,GAC9BG,UAAWS,EAAW,YAAEV,EAAW,YAAE3Y,GAAgBmZ,EACvDG,EAAmBpB,GAAiBmB,GACpCpP,EAAiBnI,YAAaC,IAAWC,kBAAkBhC,EAAasZ,GAAmBA,GAC3FC,EAAeC,IAAajU,IAAStD,OAAOoX,GAAa9R,QAC/D,GAAI0C,EAAe9H,SACjB,OAGF,MAkBMsX,EAAoBC,IACxB1P,GAAW,GACX0P,EAAQjE,SAAS1D,IACoB,IAAD4H,EAAAC,EAAZ,aAAlB7H,EAAO8H,OACTvZ,EAAW,UAAuB,QAAbqZ,EAAA5H,EAAOpK,cAAM,IAAAgS,OAAA,EAAbA,EAAehS,UAAuB,QAAjBiS,EAAI7H,EAAOpK,cAAM,IAAAiS,OAAA,EAAbA,EAAe9K,WAE7DzO,EAAa,WACbsN,GAAYvI,IAAWA,IACzB,GACA,EAGE0U,EAAoBzX,UACxB,IACE,MAAMG,QAAeyL,GAAYlD,aAAazB,GAAW/B,QAAQhC,IAAUwU,GACvEvX,IACFjC,EACE+B,IAAWG,SACXvD,cAACwD,IAAwB,CAACC,QAAQ,2BAA2BC,OAAQJ,EAAOK,aApC/DR,WACnB,MAAM0P,QAAevP,EAAOM,OACxBiP,IACF1R,EACEiC,IAAWS,QACX7D,cAAC8D,IAAsB,CAACL,QAAQ,kCAAkCC,OAAQmP,EAAOlP,QAEnFmH,GAAW,GACXwO,GAAc,SACRtX,IACR,EA4BU8Y,CAAaxX,GAEvB,CAAE,MAAO+O,GA3BSzJ,KAA0B,IAAzB,QAAEgH,EAAO,OAAEnH,GAAQG,EACtCxH,EAAW,SAAS,GAAD4K,OAAKvD,GAAUmH,IAClC9E,GAAW,EAAM,EA0BfiQ,CAAY1I,EACd,GAGEoH,IAAgBd,GAAYE,SAC1BqB,EAAcT,cAAgBd,GAAYG,WAC5CpT,EAAO4E,GAAoBiB,mBAAmB,eAAgB,CAACR,GAAgB,IACtEmP,EAAcT,cAAgBd,GAAYI,WACnDiB,EAAqBhE,KAAKtP,EAASN,GAASiU,EAAc5Y,EAAgB6G,gBAAiByC,IAC3FgP,GAAa,GAENN,IAAgBd,GAAYI,SACjCmB,EAAcT,cAAgBd,GAAYE,SAC5CnT,EAAO4E,GAAoBiB,mBAAmB,gBAAiB,CAAC8O,EAAcjU,GAAS2E,IAC9EmP,EAAcT,cAAgBd,GAAYG,aACnDpT,EAAO4E,GAAoBiB,mBAAmB,eAAgB,CAACR,GAAgB,KAExE0O,IAAgBd,GAAYG,aACjCoB,EAAcT,cAAgBd,GAAYE,SAC5CnT,EAAO4E,GAAoBiB,mBAAmB,gBAAiB,CAACnF,GAAS2E,IAChEmP,EAAcT,cAAgBd,GAAYI,WACnDrT,EAAO4E,GAAoBiB,mBAAmB,gBAAiB,CAAC9J,EAAgB6G,gBAAiByC,OAIhGgP,GAAcrU,QACXkV,EAAkBlV,GAExBsV,QAAQC,WAAWjB,GAChBkB,KAAKX,GACLY,OAAO9Y,IACNjB,EAAWgC,IAAWC,OAAQhB,EAAEoG,QAChCqC,GAAW,EAAM,GAEvB,GACC,CACDiE,GACAwK,EACAlT,GACAlF,EACAa,EACAZ,EACAqN,EACApN,EACAqF,EACAN,GACA3E,EAAgB6G,kBAGZ8S,GAAchZ,uBAAY,CAAAiZ,EAAavF,KAAY,IAAxB,OAAErT,GAAQ4Y,EACzC,MAAM,MAAEnc,GAAUuD,EAClB+W,GAAetT,GACAA,EAAMiB,KAAKC,IAAI,IAAWA,EAAMtG,YAAa5B,OAE1D,GACD,IAEH4M,qBAAU,KACR,MAAOwP,EAAMC,GAAUhC,EACvB,OAAQ+B,EAAK7B,aACX,KAAKd,GAAYE,SACX0C,EAAO9B,cAAgBd,GAAYG,WACrClX,EAAwB0Z,EAAKxa,aAE7B2F,EAAwB,CACtB5B,OAAQyW,EAAK5B,UACbxa,MAAOsD,OAAO8Y,EAAKxa,eAGvB,MACF,KAAK6X,GAAYI,SACf,GAAIwC,EAAO9B,cAAgBd,GAAYE,SAAU,CAC/C,MAAM3Z,EAAQsD,OAAO8Y,EAAKxa,aAC1B2F,EAAwB,CACtB5B,OAAQyW,EAAK5B,UACbxa,MAAOA,EAAQsD,OAAO,IAADwJ,OAAK9M,IAAWA,GAEzC,KAAO,CACL,MAAMA,EAAQsD,OAAO8Y,EAAKxa,aAC1B2F,EAAwB,CACtB5B,OAAQyW,EAAK5B,UACbxa,MAAOA,EAAQsD,OAAO,IAADwJ,OAAK9M,IAAWA,IAEvC0C,EAAwB0Z,EAAKxa,YAC/B,CACA,MACF,KAAK6X,GAAYG,WACf,GAAIyC,EAAO9B,cAAgBd,GAAYE,SAAU,CAC/C,MAAM3Z,EAAQsD,OAAO8Y,EAAKxa,aAC1Bc,EAAwB1C,EAAQsD,OAAO,IAADwJ,OAAK9M,IAAWA,EACxD,KAAO,CACL,MAAMA,EAAQsD,OAAO8Y,EAAKxa,aAC1Bc,EAAwB1C,EAAQsD,OAAO,IAADwJ,OAAK9M,IAAWA,GACtDuH,EAAwB,CACtB5B,OAAQyW,EAAK5B,UACbxa,MAAOsD,OAAO8Y,EAAKxa,cAEvB,CACA,MACF,QACEyH,QAAQ0M,IAAI,GAChB,GACC,CAACsE,EAAY9S,EAAyB7E,IAEzC,MAAM4Z,GAAkBpZ,uBACtB,CAACqZ,EAAK3F,EAAQC,KACZyD,GAAetT,IACb,MAAMR,EAAOQ,EAAMiB,KAAKC,IAAI,IACvBA,EACHqS,YAAarS,EAAK2C,KAAO+L,EAAO/L,GAAK0R,EAAMrU,EAAKqS,YAChDC,UACE+B,IAAQ9C,GAAYG,WAAarX,EAAgBkD,cAAcC,mBAAmBC,OAASuC,EAAKsS,UAClG5Y,YAAa0B,aAMf,OAJU,IAANuT,IACFrQ,EAAK,GAAGyO,KAAOyE,GAAoBxE,QAAQ/G,GAAOA,EAAG/K,OAASoD,EAAK,GAAG+T,cACtE/T,EAAK,GAAGiU,oBAAsBjU,EAAK,GAAG+T,cAAgBd,GAAYG,YAE7DpT,CAAI,GACX,GAEJ,CAACjE,EAAgBkD,cAAcC,mBAAmBC,SAG9C+Q,GAAgBxT,uBACpB,CAACqZ,EAAKC,KACJlC,GAAetT,IACb,MAAMyV,EAAYzV,EAAMiB,KAAKkG,IAAE,IAAWA,EAAIqM,UAAW+B,EAAK3a,YAAa0B,aAE3E,GAAIiZ,IAAQha,EAAgBkD,cAAcC,mBAAmBC,OAC3D8W,EAAU,GAAGxH,KAAOwH,EAAU,GAAGxH,KAAKC,QAAQ/G,GAAOA,EAAG/K,OAASqW,GAAYG,iBACxE,CACL,MAAM8C,EAAahD,GAAoBxL,MAAMC,GAAOA,EAAG/K,OAASqW,GAAYG,aAC7D6C,EAAU,GAAGxH,KAAKlL,WAAWoE,GAAOA,EAAG/K,OAASqW,GAAYG,cAC3D,GACd6C,EAAU,GAAGxH,KAAK6B,KAAK4F,EAE3B,CACA,OAAOD,CAAS,GAChB,GAEJ,CAACla,EAAgBkD,cAAcC,mBAAmBC,SAG9CW,GAAQpD,uBACX0T,IACC0D,GAAetT,IACb,MAAMR,EAAO,IAAIQ,IASX,mBAAEtB,GAAuBnD,EAAgBkD,eACzC,kBAAEkX,EAAiB,mBAAEzP,EAAkB,gBAAE0P,GAAoBra,EAAgB0K,eAC7E4P,EAAoB/C,GAAiBlD,EAAO4D,WAClD,GAAI5D,EAAO2D,cAAgBd,GAAYE,SAAU,CAC/C,MAAMlR,EAAUhH,EAAmBmV,EAAO4D,YAAc,EACxDhU,EAAK,GAAG5E,YAAc6G,CACxB,MAAO,GAAImO,EAAO2D,cAAgBd,GAAYI,SAAU,CACtD,MAAMiD,EAAmBpC,EAAgB9D,EAAO4D,YAAc,EACxDuC,EAAuBzZ,OAC3BK,IAAWC,kBAAkB,IAAMN,OAAOqF,YAAagU,EAAmBjX,EAAmB5B,WAAY,IAE3G,GAAIgZ,EAAmB,EAAG,CACxB,GAA6B,IAAzBC,EAGF,OAFAvW,EAAK,GAAG5E,YAAckb,EACtBtW,EAAK,GAAG5E,YAAckb,EACftW,EAET,MAAMwW,EAAwBD,EAAuBva,EAAgB8C,gBAWrE,GAVIkB,EAAK,GAAG+T,cAAgBd,GAAYG,aAElCoD,EAAwBF,GAC1BtW,EAAK,GAAG5E,YAAckb,EACtBtW,EAAK,GAAG5E,YAAckb,IAEtBtW,EAAK,GAAG5E,YAAcob,EACtBxW,EAAK,GAAG5E,YAAcob,IAGtBxW,EAAK,GAAG+T,cAAgBd,GAAYE,SAAU,CAChD,MAAMsD,EAAiB5O,YACrBlH,GACAyP,EAAO4D,UACP9U,EAAmBC,OACnBjC,YAAaoZ,EAAkBD,GAC/BnP,GAEIwP,EAAiBN,EAAgBO,IAAIF,GACrCG,EACJJ,EAAwB1Z,OAAOqF,YAAauU,EAAgBxX,EAAmB5B,WAE3EuZ,EAA0BhP,YAC9BlH,GACAzB,EAAmBC,OACnBiR,EAAO4D,UACP9W,YACEC,IAAWC,kBAAkBwZ,EAAuB1X,EAAmB5B,UACvE4B,EAAmB5B,UAErB4J,GAGI4P,EAA0B3U,YAAa0U,EAAyBR,GAAmB,GAErFS,EAA0BR,GAC5BtW,EAAK,GAAG5E,YAAckb,EACtBtW,EAAK,GAAG5E,YAAckb,GACbQ,EAA0B,GACnC9W,EAAK,GAAG5E,YAAckQ,KAAKyL,MAAMT,EAAmBQ,GACpD9W,EAAK,GAAG5E,YAAckQ,KAAKyL,MAAMT,EAAmBQ,KAEpD9W,EAAK,GAAG5E,YAAckb,EACtBtW,EAAK,GAAG5E,YAAckb,EAE1B,CACF,CACF,MAAO,GAAIlG,EAAO2D,cAAgBd,GAAYG,WAAY,CACxD,GAAIpT,EAAK,GAAG+T,cAAgBd,GAAYE,SAAU,CAChD,MAAM6D,EACJ,GAAKla,OAAOqF,YAAauE,EAAmBC,WAAYzH,EAAmB5B,WACvE2Z,EAA2Bjb,EAAgB8C,gBAAkBkY,EAE/DC,EAA2B,IAC7BjX,EAAK,GAAG5E,YAAc0B,OACpBK,IAAWC,kBAAkB6Z,EAA0B/X,EAAmB5B,WAGhF,CACA,GAAI0C,EAAK,GAAG+T,cAAgBd,GAAYI,SAAU,CAChD,MAAM2D,EACJ,GAAKla,OAAOqF,YAAauE,EAAmBC,WAAYzH,EAAmB5B,WACvE2Z,EAA2Bjb,EAAgB8C,gBAAkBkY,EAC/DC,EAA2B,IAC7BjX,EAAK,GAAG5E,YAAc6b,EAE1B,CACF,CACA,OAAOjX,CAAI,GACX,GAEJ,CACEkU,EACAvT,GACA3E,EACAD,EAAgBkD,cAChBlD,EAAgB0K,eAChBS,EACAjM,IA4EJ,OAxEAmL,qBAAU,KACR0N,GAAetT,GACN,CACLA,EAAM,GACN,IACKA,EAAM,GACTiO,KAAMyE,GAAoBxE,QAAQ/G,GAAOA,EAAG/K,OAAS4D,EAAM,GAAGuT,iBAGlE,GACD,IAEH3N,qBAAU,KACR,GAAIjB,EAEF,YADAyO,GAAc,GAGhB,MAAOha,GAAQia,GACT,SAAEvW,GAAa1D,EACrB,IAAKA,IAAS0D,EAAU,OACxB,IAAIyB,EAAc,EAClB,MAAM,YAAE3D,GAAgBxB,EAClBsd,EAAgBha,YACpBC,IAAWC,kBAAkBhC,EAAaqY,IAAaD,IAAc5Z,EAAKoa,YAAY1W,UACtFmW,IAAaD,IAAc5Z,EAAKoa,YAAY1W,UAE9C,GAAI4Z,EAAc3Z,SAChBqW,GAAc,QAMhB,GAHIha,EAAKma,cAAgBd,GAAYE,WACnCpU,EAAc9D,EAAmBrB,EAAKoa,YAAc,GAElDpa,EAAKma,cAAgBd,GAAYG,YAAcxZ,EAAKma,cAAgBd,GAAYI,SAwBhFzZ,EAAKwB,aAAe,GAAKxB,EAAKwB,YAAc2D,GAAeoG,EAC7DyO,GAAc,GAEdA,GAAc,OA3BhB,CACE,GAAIha,EAAKma,cAAgBd,GAAYG,WAAY,CAE/C,MAAM,mBAAE+D,GAAuBpb,EAAgB0K,eAC/C,GAAIyQ,EAAcE,GAAGD,GAEnB,YADAvD,GAAc,EAGlB,CACA,GAAIha,EAAKma,cAAgBd,GAAYI,SAAU,CAE7C,GAAIjY,GADQ8Y,EAAgBta,EAAKoa,YAAc,GAG7C,YADAJ,GAAc,EAGlB,CAEEA,EADElO,EAAqB,KAAOD,EAA6B,GAM/D,CAMA,GACC,CACDoO,EACAK,EACAnY,EAAgB0K,eAChBf,EACAD,EACAN,EACAlK,IAIAoD,eAAC6F,IAAO,CAAAnJ,SAAA,CACNT,cAAC6J,IAAK,CAAApJ,SAAC,qBACPsD,eAAC+F,IAAS,CAACC,GAAG,UAAUR,SAAuB,YAAbA,EAAwBS,SAAUR,EAAa,WAAW/I,SAAA,CAC1FT,cAACiK,IAAgB,CAAC,gBAAc,kBAAiBxJ,SAC/CT,cAACkK,IAAU,CAAAzJ,SAAC,mCAEdsD,eAACoG,IAAgB,CAAA1J,SAAA,CACd8Y,EAAWpS,KAAI,CAACC,EAAMuM,KACrB,IAAIoJ,EAAsBnD,GAAmBA,EAAgBxS,EAAKsS,YAAe,EAC7EsD,EAAsBrc,GAAsBA,EAAmByG,EAAKsS,YAAe,EASvF,OARIhJ,OAAOqM,GAAoBjJ,SAAS,OACtCiJ,EAAqBla,IAAWiN,mBAAmBiN,IAGjDrM,OAAOsM,GAAoBlJ,SAAS,OACtCkJ,EAAqBna,IAAWiN,mBAAmBkN,IAInDjZ,eAAA,OAAAtD,SAAA,CACEsD,eAAC2U,GAAW,CAAAjY,SAAA,CACVsD,eAAA,OAAKmN,UAAU,eAAczQ,SAAA,CAC3BT,cAAA,QAAMkR,UAAU,QAAOzQ,SAAC,cACvB2G,EAAKqS,cAAgBd,GAAYI,UAChChV,eAAA,QAAAtD,SAAA,CACGsc,EAAmB,IAAE3V,EAAKsS,aAG9BtS,EAAKqS,cAAgBd,GAAYE,UAChC9U,eAAA,QAAAtD,SAAA,CACGuc,EAAmB,IAAE5V,EAAKsS,aAG9BtS,EAAKqS,cAAgBd,GAAYG,YAChC/U,eAAA,QAAAtD,SAAA,CAAOoC,IAAWiN,mBAAmBpO,EAAgB8C,iBAAiB,IAAE/C,EAAgBkD,cAAcC,mBAAmBC,aAG7Hd,eAAA,OAAKmN,UAAU,UAASzQ,SAAA,CACtBT,cAAC2Q,IAAM,CACLvM,QAASgD,EAAK+M,KACdnK,SAAWyR,IACTD,GAAgBC,EAAKrU,EAAMuM,EAAM,EAEnClH,YAAarF,EAAKqS,cAEpBzZ,cAAC2Q,IAAM,CACLvM,QAAS6P,EACTjK,SAAWyR,IACT7F,GAAc6F,EAAK9H,EAAM,EAE3BlH,YAAarF,EAAKsS,UAClBuD,eAA0B,IAAVtJ,GAAqBvM,EAAKuS,sBAE5C3Z,cAACkd,KAAK,CACJhe,MAAOkI,EAAKtG,YACZwB,KAAK,SACL6a,QAAU9a,IACR+Y,GAAY/Y,EAAG+E,EAAK,EAEtBhH,SAAoB,IAAVuT,OAId3T,cAAA,OAAKod,OAAkB,IAAVzJ,EAAazC,UAAU,OAAMzQ,SACxCT,cAAA,QACEiG,QAASA,KACPT,GAAM4B,EAAK,EAEb+J,QAASA,IAAM,KACfC,SAAU,EACVC,KAAK,SAAQ5Q,SACd,aAMM,IAAVkT,EACC3T,cAAA,OAAKmF,MAAO,CAAErF,QAAS,OAAQyX,WAAY,SAAU3Y,OAAQ,GAAIye,eAAgB,UAAW5c,SAC1FT,cAACsd,IAAa,CACZrX,QAASA,KACPuT,GAAetT,IACb,MAAMqX,EAAQrX,EAAM,GACdsX,EAAQtX,EAAM,GAEpB,OADaA,EAAMuX,UACPtW,KAAI,CAACkG,EAAI0I,KAAC,IACjB1I,EACH8G,KACQ,IAAN4B,EACIwH,EAAMpJ,KACNyE,GAAoBxE,QAAQsJ,GAAQA,EAAIpb,OAASkb,EAAM/D,cAC7DE,oBAA2B,IAAN5D,EAAUwH,EAAM5D,oBAAsB6D,EAAM7D,uBAChE,GACH,EAEJxU,MAAO,CAAEyM,KAAM,OAAQxS,UAAW,gBAAiB8Y,OAAQ,UAAWrZ,MAAO,QAG/E,OA/EIuI,EAAK2C,GAgFT,IAGV/J,cAACyF,IAAW,CACVC,KAAM,CACJ,CAACC,IAAcC,gBAAiBlE,EAAgBmE,aAAchE,GAC9D,CACE8D,IAAcG,wBACdpE,EAAgBqE,gBAChBjE,MAILlB,EACCZ,cAACgG,IAAO,CAACb,MAAO,CAAEhG,UAAW,QAAUiB,SAAUiZ,EAAYpT,QAAS/C,GAASzC,SAAC,WAIhFT,cAACgG,IAAO,CACNb,MAAO,CAAEhG,UAAW,QACpBiB,SAAUmB,EACV0E,QAASA,KACPpF,GAAWqF,IACT1E,EAAoB0E,EAAM,GAC1B,EACFzF,SACH,oBAQb,C,mBCnsBA,MAAMkd,GAAMnf,YAAO,MAAPA,CAAa8B,QAAAC,YAAA,oYAyBnBqd,GAAWpf,YAAOqf,IAAPrf,CAAYmP,QAAApN,YAAA,qzBAgDvBud,GAAWtf,YAAO,MAAPA,CAAaqP,QAAAtN,YAAA,4vCAqExB4I,GAAU3K,YAAOof,GAAPpf,CAAgBwP,QAAAzN,YAAA,yCAI1Bwd,GAAqBvf,YAAO,MAAPA,CAAa0P,QAAA3N,YAAA,q+EAiHlCyd,GAAiB9e,GACb,EAARA,GAAa,IAAM,oBAA8B,EAARA,EAAY,IAAM,mBAAqB,kBAsYnE+e,oBApYf,WACE,MAAMC,EAA8BC,IAAMC,UACpC,SAAE7U,GAAaE,eACd7I,EAAe8N,GAAoB1N,oBAAS,IAE7C,gBAAES,EAAe,yBAAE+E,EAAwB,iBAAE2I,GAAqBxN,eAClE,4BAAE0c,GAAgCnc,eAClC,QAAEkE,EAAO,QAAEC,GAAYsD,eACvB,aAAExI,EAAY,WAAEC,GAAeE,cAE/B0I,EAAW5H,uBACdqZ,IACC4C,EAA4B5C,EAAI,GAElC,CAAC4C,KAEG,cAAE9O,GAAkBC,YAAWpJ,EAAwB,OAAf3E,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAcC,mBAAmByD,UAC1F,eAAEoH,GAAmBC,cACrBK,EAAe3N,uBAAYe,UAC/B,GAAI1B,GAAmBA,EAAgBuO,SAAU,CAC/C,MAAM1M,QAAemM,EACnBrJ,EACA3E,EAAgBkD,cAAcC,mBAAmByD,QACjD5G,EAAgB6G,iBAOlB,OALIhF,GAAUA,EAAO2M,KAAO,EAC1BvB,GAAiB,GAEjBA,GAAiB,GAEZpL,CACT,CACA,OAAO,CAAC,GACP,CAAC8C,EAAS3E,EAAiBgO,IAExB5O,EAAYuB,uBAChBe,UACE,GAAI1B,GAAmBA,EAAgBuO,SACrC,IACMsO,GACFA,GAAS,GAEX,MAAM3O,QAAaJ,EAAc9N,EAAgB6G,iBACjD,GAAIqH,EAAKhM,KAAM,OACQgM,EAAK/L,QAExBmM,IAAemL,MAAMqD,IACfA,EAAuBtO,KAAO,GAC5BqO,GACFA,GAAS,GAEXnd,EAAa,oBAEbC,EAAW,OACb,GAGN,CACF,CAAE,MAAOod,GACPpd,EAAW,SAAS,GAAD4K,OAAKwS,GAC1B,CACF,GAEF,CAAC/c,EAAiB8N,EAAeQ,EAAc5O,EAAcC,IAGzDqd,EAAkB5X,mBAAQ,IAC1BpF,GAAmBA,EAAgBgd,gBACjChd,EAAgBgd,kBAAoBjc,OAAOiW,kBACtC,UAEF5V,IAAWC,kBAAkBrB,EAAgBgd,gBAAiB,GAEhE,KACN,CAAChd,IACEid,EAA0B7X,mBAAQ,IAClCpF,GAAmBA,EAAgBid,wBACjCjd,EAAgBid,0BAA4Blc,OAAOiW,kBAC9C,UAEF5V,IAAWC,kBAAkBrB,EAAgBid,wBAAyB,GAExE,KACN,CAACjd,IACE+C,EAAkBqC,mBAAQ,KAC9B,GAAIpF,EAAiB,CACnB,MAAM6K,EAAKzE,YACTpG,EAAgB0K,eAAe0Q,mBAC5BR,IAAI5a,EAAgB0K,eAAewS,YACnCtC,IAAI5a,EAAgB0K,eAAeyS,WACnCvC,IAAI5a,EAAgB0K,eAAe0S,0BACtCpd,EAAgBkD,cAAcC,mBAAmB5B,UAEnD,OAAOH,IAAWC,kBAAkBN,OAAO8J,GAAK,EAClD,CACA,OAAO,CAAC,GACP,CAAC7K,IAEJqK,qBAAU,KACRiE,IACIxG,IAAkC,IAAtB/G,OAAO+G,IACjB2U,GAAqB,WAAb3U,GAAsC,WAAbA,GACnCuV,YAAW,KACT,MAAMC,EAAQC,SAASC,cAAc,IAADjT,OAAKzC,IAErCwV,GACFA,EAAMG,gBACR,GACC,IAEP,GACC,CAACnP,EAActO,EAAiB8H,IAEnC,MAAM4V,EAAgBtY,mBAAQ,KAAO,IAADsL,EAClC,IAAK3L,EACH,OAAO,KAET,MAAM4Y,EAAoB5Y,EAAyB0N,WAC7CmL,EAAuB7Y,EAAyBM,cAChDwY,EAAmE,QAAzCnN,EAAG3L,EAAyBM,qBAAa,IAAAqL,OAAA,EAAtCA,EAAwCrK,SACrEyX,EAAO/Y,EAAyBgZ,UACtC,OAAOvY,OAAOC,OAAOmY,EAAqBtc,QAAQoE,KAAKsY,IAAS,IAAAC,EAAA,OAC9D3b,eAAA,OAAKmN,UAAU,gBAAezQ,SAAA,CAC5BsD,eAAA,OAAKmN,UAAU,cAAazQ,SAAA,CAC1BT,cAACuH,IAAI,CACHF,MAAOoY,EAAU/X,KACjB7C,OAAQ4a,EAAU5a,OAClB2C,SAAU,CACRrC,MAAO,CACLsC,YAAa,OAIlBgY,EAAU5a,UAEbd,eAACqR,IAAQ,CAAClE,UAAU,UAAU/L,MAAO,CAAEkQ,cAAe,SAAUkC,WAAY,YAAa9W,SAAA,CACvFT,cAAA,QAAAS,SACI6e,GACAzX,YAAayX,EAA2BG,EAAU5a,QAAS4a,EAAUzc,WACrE,IAEJe,eAAA,QAAAtD,SAAA,CAAM,SACF,IACA6e,GACAzc,IAAW8c,0BACRL,EAA2BG,EAAU5a,QAAQwH,YACT,QADmBqT,EACtDN,EAAkBK,EAAU5a,eAAO,IAAA6a,OAAA,EAAnCA,EAAqClJ,MAAMnK,YAC3CkT,EACA,IAAM,IAEV,UA5B4BE,EAAU5a,OA+BxC,GACN,GACD,CAAC2B,IAEEoZ,EAAa/Y,mBAAQ,KACzB,GAAIgZ,YAAmBxZ,GAAU,CAC/B,MAAMyZ,EAAUC,IAAsB1Z,GAA6BtD,OACnE,OAAOkE,OAAOgG,KAAK8S,IAAsB1Z,GAA6BtD,QAAQoE,KAAK8R,IAC1E,CACL5R,MAAOyY,EAAQ7G,GAAqBpU,OACpCwD,QAASyX,EAAQ7G,GAAqB5Q,QACtCrF,SAAU8c,EAAQ7G,GAAqBjW,SACvCsE,KAAMA,IAAKtH,cAACuH,IAAI,CAACC,SAAU,CAACrC,MAAO,CAACsC,YAAa,KAAMJ,MAAOyY,EAAQ7G,GAAqBvR,KAAM7C,OAAQib,EAAQ7G,GAAqBpU,YAG5I,CACA,MAAO,EAAE,GACR,CAACwB,IAEJ,OACEtC,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAAC6J,IAAK,CAAC1E,MAAO,CAAE6a,aAAc,GAAIvf,SAAC,0BACnCT,cAACQ,EAAQ,CAAAC,SAAC,qJAIVT,cAAC2Q,IAAM,CACLG,SAAS,EACT1M,QAASwb,EACTnT,YAAa0C,EACbnF,SAAUA,IAEZhK,cAAC2d,GAAG,CAAAld,SACe,OAAfgB,QAAe,IAAfA,KAAiBuO,SAMjBjM,eAACkc,IAAI,CAACC,WAAS,EAACC,QAAS,IAAI1f,SAAA,CAC3BT,cAACigB,IAAI,CAAC7Y,MAAI,EAACgZ,GAAI,EAAE3f,SACfsD,eAACsc,IAAa,CAACxJ,IAAKqH,EAAKzd,SAAA,CACvBsD,eAACoF,GAAO,CAAA1I,SAAA,CACNsD,eAAC+Z,GAAQ,CAAArd,SAAA,CACPsD,eAAA,OAAKuc,MAAK,qBAAAtU,OAAuByS,GAAkBhe,SAAA,CACjDT,cAAA,MAAAS,SAAI,qBACFgB,EAAgBgd,gBAKhBze,cAAA,KAAGkR,UAAU,MAAKzQ,SACfgB,EAAgBgd,gBACf1a,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAAA,QACEmF,MAAO,CACLxG,MAAOqf,GAA6B,OAAfvc,QAAe,IAAfA,OAAe,EAAfA,EAAiBgd,kBACtChe,SAEDge,KAEa,OAAfhd,QAAe,IAAfA,OAAe,EAAfA,EAAiBgd,mBAAoBjc,OAAOiW,kBAAoB,KAC/DzY,cAAA,OACEmF,MAAO,CACLxG,MAAOqf,GAA6B,OAAfvc,QAAe,IAAfA,OAAe,EAAfA,EAAiBgd,kBACtChe,SACH,SAMLT,cAAA,QACEmF,MAAO,CACLxG,MAAO,mBACP8B,SACH,QA7BLT,cAAA,KAAGkR,UAAU,MAAM/L,MAAO,CAAE1F,WAAY,QAASgB,SAAC,+BAmCpDsD,eAAA,KAAGmN,UAAU,MAAKzQ,SAAA,CAAC,0BAAmB8f,IAA0BC,MAAM,UAExExgB,cAACygB,EAAK,CACJtb,MAAO,CAAEvG,OAAQ,QACjBM,MACEuC,EAAgBuO,UAAgC,MAApByO,IACR,OAAfhd,QAAe,IAAfA,OAAe,EAAfA,EAAiBgd,iBAAkB,KAAO,EAC3C,OAIV1a,eAAC+Z,GAAQ,CAAArd,SAAA,CACPsD,eAAA,OAAKuc,MAAK,8BAAAtU,OAAgC0S,EAAuB,SAAQje,SAAA,CACvET,cAAA,MAAAS,SAAI,8BACFgB,EAAgBid,wBAKhB1e,cAAA,KAAGkR,UAAU,gBAAezQ,SACzBgB,EAAgBid,wBACf3a,eAAAC,WAAA,CAAAvD,SAAA,CACET,cAAA,OACEmF,MAAO,CACLxG,MAAOqf,GAAcvc,EAAgBid,0BACrCje,SACH,WAGDT,cAAA,QACEmF,MAAO,CACLxG,MAAOqf,GAAcvc,EAAgBid,0BACrCje,SAEDie,IAEFjd,EAAgBid,0BAA4Blc,OAAOiW,kBAAoB,KACtEzY,cAAA,OACEmF,MAAO,CACLxG,MAAOqf,GAAcvc,EAAgBid,0BACrCje,SACH,YAMLT,cAAA,QACEmF,MAAO,CACLxG,MAAO,mBACP8B,SACH,QApCLT,cAAA,KAAGkR,UAAU,MAAM/L,MAAO,CAAE1F,WAAY,QAASgB,SAAC,+BA0CpDsD,eAAA,KAAGmN,UAAU,MAAKzQ,SAAA,CAAC,0BAAwB8f,IAA0BG,KAAK,WAErE,OAEP1gB,cAACygB,EAAK,CAACtb,MAAO,CAAEvG,OAAQ,QAAUM,MAAOuC,EAAgBid,wBAA0B,UAIvF1e,cAACqJ,EAAgB,CAACxI,UAAWA,EAAWD,cAAeA,IACvDZ,cAAC2gB,GAAoB,CAAC9f,UAAWA,EAAWD,cAAeA,IAC3DZ,cAACuS,GAAsB,CAAC1R,UAAWA,EAAWD,cAAeA,IAC7DZ,cAAC4gB,GAAoB,CAAC/f,UAAWA,EAAWD,cAAeA,IAC3DZ,cAAC2M,GAAkB,CAAC9L,UAAWA,EAAWD,cAAeA,IACzDZ,cAACoZ,GAAe,CAACvY,UAAWA,EAAWD,cAAeA,SAO1DmD,eAACkc,IAAI,CAAC7Y,MAAI,EAACgZ,GAAI,EAAGlP,UAAU,gBAAezQ,SAAA,CACzCsD,eAACga,GAAkB,CAAAtd,SAAA,CACjBT,cAAA,MAAIkR,UAAU,UAASzQ,SAAC,qBACxBsD,eAAA,OAAKmN,UAAU,iBAAgBzQ,SAAA,CAC7BT,cAAA,OAAKkR,UAAU,OAAMzQ,SACnBsD,eAAA,MAAImN,UAAU,aAAYzQ,SAAA,CACxBT,cAAA,OAAKgF,IAAKC,IAAOC,gBAAiBE,IAAI,KAAK,wBAI/CrB,eAAA,OAAKmN,UAAU,gBAAezQ,SAAA,CAC5BsD,eAAA,QAAMmN,UAAU,cAAazQ,SAAA,CAC3BT,cAACuH,IAAI,CACHF,MAAsB,OAAf5F,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAcC,mBAAmB8C,KACzD7C,OAAuB,OAAfpD,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAcC,mBAAmBC,SAE5D7E,cAAA,QACEmF,MAAO,CACLiT,WAAY,QACZ3X,SAEc,OAAfgB,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAcC,mBAAmBC,YAGvD7E,cAAA,QAAAS,SAAO+D,UAGXT,eAAA,OAAKmN,UAAU,cAAc/L,MAAO,CAAE6a,aAAc,IAAKvf,SAAA,CACvDT,cAAA,OAAKkR,UAAU,OAAMzQ,SACnBsD,eAAA,MAAImN,UAAU,aAAYzQ,SAAA,CACxBT,cAAA,OAAKgF,IAAKC,IAAO4b,WAAYzb,IAAI,KAAK,kBAI1CrB,eAAA,OAAKmN,UAAU,iBAAgBzQ,SAAA,CAC7BT,cAAA,QAAAS,SAAM,WACNT,cAAA,QAAAS,SAAM,gCAEP0e,KAEHpb,eAAA,OAAKmN,UAAU,iBAAgBzQ,SAAA,CAC7BT,cAAA,QAAAS,SAAM,yCAAgD,IACtDT,cAAC8gB,IAAe,CAACC,QAAuB,OAAftf,QAAe,IAAfA,OAAe,EAAfA,EAAiB6G,kBAAmB,GAAG7H,SAC7DgB,EAAe,GAAAuK,OACM,OAAfvK,QAAe,IAAfA,OAAe,EAAfA,EAAiB6G,gBAAgBqN,MAAM,EAAG,GAAE,OAAA3J,OAAqB,OAAfvK,QAAe,IAAfA,OAAe,EAAfA,EAAiB6G,gBAAgBqN,OACnF,IAEH,WAIV5R,eAACga,GAAkB,CAAAtd,SAAA,CACjBT,cAAA,MAAIkR,UAAU,mBAAkBzQ,SAAC,wBACjCsD,eAACqR,IAAQ,CAAClE,UAAU,kBAAkB/L,MAAO,CAAEoS,WAAY,SAAU8F,eAAgB,iBAAkB5c,SAAA,CACrGsD,eAACqR,IAAQ,CAACjQ,MAAO,CAAEoS,WAAY,UAAW9W,SAAA,CACxCT,cAACghB,IAAU,CAAC9P,UAAU,SACN,OAAfzP,QAAe,IAAfA,OAAe,EAAfA,EAAiBkD,cAAcE,UAElC7E,cAAA,QAAAS,SACGoC,IAAWiN,mBACVtN,OAAOqF,YAAapG,EAAgBkG,QAASlG,EAAgBkD,cAAc3B,oBAKnFhD,cAAC+d,GAAkB,CAAC5Y,MAAO,CAAExF,QAAS,IAAKc,SACzCT,cAAA,OAAKgF,IAAKC,IAAOgc,iBAAkB9b,MAAO,CAAEtG,MAAO,QAAUuG,IAAI,aA/LvErB,eAACmd,IAAI,CAAClM,GAAG,cAAc7P,MAAO,CAAExG,MAAO,WAAY8B,SAAA,CAAC,qCAElDT,cAACmhB,IAAS,IAAI,WAqM1B,IC/pBeC,UANf,WACE,OACEphB,cAACqhB,GAAM,GAEX,C,6nBCEO,MAAMzX,EAAUpL,YAAOqf,IAAPrf,CAAY8B,MAAAC,YAAA,mEAKtBsJ,EAAQrL,YAAO,KAAPA,CAAYmP,MAAApN,YAAA,4LAUpBuJ,EAAYtL,aAAQE,GAC/BsB,cAACshB,IAAY,CAACC,gBAAc,EAACC,UAAW,EAAGC,QAAM,KAAK/iB,KAD/BF,EAEtB,MACDkjB,aAAc,qBACd5iB,WAAY,QACZK,UAAW,OACX,eAAgB,CACduiB,aAAc,GAEhB,WAAY,CACV5hB,QAAS,QAEX,sDAAuD,CACrDV,UAAW,qBAIF6K,EAAmBzL,aAAQE,GACtCsB,cAAC2hB,IAAmB,CAACC,WAAY5hB,cAAC6hB,IAAY,CAAC1c,MAAO,CAAExG,MAAO,gBAAqBD,KADtDF,EAE7B,MACDmB,QAAS,EACT,wDAAyD,CACvDP,UAAW,iBAEb,iCAAkC,CAChCqY,OAAQ,SACRqK,EAAG,CACDnjB,MAAO,OACPe,SAAU,OACVqiB,WAAY,kCACZC,WAAY,IACZviB,WAAY,aAKL0K,EAAmB3L,YAAOyjB,IAAPzjB,EAA4B,MAC1DmB,QAAS,aACTuiB,WAAY,UAQDlc,GAJaxH,YAAO,MAAPA,CAAaqP,MAAAtN,YAAA,+DAIhB/B,YAAOuP,IAAPvP,CAAcwP,MAAAzN,YAAA,qPA4DxB6I,GAnDY5K,YAAOuP,IAAPvP,CAAc0P,MAAA3N,YAAA,sPASf/B,YAAO,MAAPA,CAAa4P,MAAA7N,YAAA,gRAqBZ/B,YAAO,MAAPA,CAAa2jB,MAAA5hB,YAAA,wWAqBd/B,YAAO,SAAPA,CAAgB4jB,MAAA7hB,YAAA,mQAa3B4I,EAAU3K,YAAO,MAAPA,CAAa6jB,MAAA9hB,YAAA,8UAmBvB+hB,EAAW9jB,YAAO,OAAPA,CAAc+jB,MAAAhiB,YAAA,kIAOzB6U,EAAW5W,YAAO,MAAPA,CAAagkB,MAAAjiB,YAAA,4BAGxB+G,EAAOA,CAACmb,EAAOC,IACnB,SAAchkB,GACnB,OACEsB,cAAAgE,WAAA,CAAAvD,SACET,cAACyiB,EAAK,IAAK/jB,EAAK+B,SAAGiiB,KAGzB,EAGWC,EAAcnkB,YAAOokB,IAAPpkB,CAAoBqkB,MAAAtiB,YAAA,mXAYlCuiB,EAAStkB,YAAO,KAAPA,CAAYukB,MAAAxiB,YAAA,2KAUrB8f,EAAgB7hB,YAAO,MAAPA,CAAawkB,MAAAziB,YAAA,+I,mCC5M1C,oBAae+I,IAVWA,KACxB,MAAM2Z,EAAiBC,qBAAWC,KAElC,QAAuBC,IAAnBH,EACF,MAAM,IAAII,MAAM,oCAGlB,OAAOJ,CAAc,C,mCCVvB,kDAEe,SAAS1b,EAAK7I,GAC3B,OAAOsB,cAAA,UAAStB,EAAM8I,SAAUxC,IAAKtG,EAAM2I,MAAOjC,IAAK1G,EAAMmG,QAC/D,C,mCCJA,oGAKO,MAAMrB,EAA0EoF,IAAA,IAAC,OAAElF,EAAM,QAAED,GAASmF,EAAA,OACzG7E,eAAA,OAAAtD,SAAA,CACET,cAAA,KAAGmF,MAAO,CAAE6a,aAAc,IAAKvf,SAAEgD,IACjCzD,cAACoV,IAAQ,CAACjQ,MAAO,CAAEkQ,cAAe,eAAgB5U,SAChDT,cAAC2iB,IAAW,CACV1c,QAASA,KACPqd,OAAOC,KAAK,GAADvX,OAAIwX,IAAU,KAAAxX,OAAItI,GAAS,EACtCjD,SACH,yBAIC,EAGKqD,EAAwEuX,IAAA,IAAC,OAAE3X,EAAM,QAAED,GAAS4X,EAAA,OACvGtX,eAAA,OAAAtD,SAAA,CACET,cAAA,KAAGmF,MAAO,CAAE6a,aAAc,IAAKvf,SAAEgD,IACjCzD,cAACoV,IAAQ,CAACjQ,MAAO,CAAEkQ,cAAe,eAAgB5U,SAChDT,cAAC2iB,IAAW,CACV1c,QAASA,KACPqd,OAAOC,KAAK,GAADvX,OAAIwX,IAAU,KAAAxX,OAAItI,GAAS,EACtCjD,SACH,yBAIC,C,mCC/BR,sDAGe,SAASgJ,IACtB,MAAMF,EAAWka,aAAgBvd,GAASA,EAAMwd,iBAAiBna,WAC3Doa,EAAWC,cASjB,MAAO,CAACra,WAASC,aARKuV,GACb,CAAC8E,EAA6BC,KACnCH,EAASI,YAAa,CAACxa,SAASua,EAAc/E,EAAQ,OAAO,EAMnCiF,YAHTjF,IACnB4E,EAASI,YAAa,CAACxa,SAASwV,GAAS,OAAO,EAGpD,C,sECbA,MAAMnV,EAAUpL,YAAO,MAAPA,CAAa8B,MAAAC,YAAA,olBA2EdkF,IAzBf,SAAqB/G,GACnB,MAAM,KAAEgH,GAAShH,EACjB,OACEsB,cAAC4J,EAAO,CAAAnJ,SACNT,cAAA,SAAAS,SACEsD,eAAA,SAAAtD,SAAA,CACEsD,eAAA,MAAAtD,SAAA,CACET,cAAA,MAAIkR,UAAU,OAAOQ,QAAS,EAAEjR,SAAC,SAGjCT,cAAA,MAAIkR,UAAU,KAAIzQ,SAAC,UAEpBiF,EAAKyB,KAAKC,GACTrD,eAAA,MAAImN,UAAW9J,EAAK,GAAK,YAAc,GAAG3G,SAAA,CACxCT,cAAA,MAAIkR,UAAU,QAAOzQ,SAAE2G,EAAK,KAC5BpH,cAAA,MAAIkR,UAAU,OAAMzQ,SAAE2G,EAAK,KAC3BpH,cAAA,MAAIkR,UAAU,KAAIzQ,SAAE2G,EAAK,OAHqBA,EAAK,YAUjE,C,8ICpEA,MAAM6c,EAAazlB,YAAO,MAAPA,CAAa8B,MAAAC,YAAA,uHAO1B2jB,EAAY1lB,YAAO,MAAPA,CAAamP,MAAApN,YAAA,2aA0BP/B,YAAO,SAAPA,CAAgBqP,MAAAtN,YAAA,0JA0BzB,SAAS4jB,EAAMzlB,GAC5B,MAAM,QACJ0F,EAAO,YACPK,EAAW,WACXkT,EAAU,WACV9B,EAAU,MACVrQ,EAAK,YACLD,EAAW,iBACX6e,EAAgB,WAChBlgB,EAAU,UACVa,EAAS,eACTM,EAAc,gBACdC,EAAe,aACff,EAAY,mBACZsT,EAAkB,WAClB/O,EAAU,YACVgP,EAAW,kBACXF,EAAoB,EAAC,GAAO,GAAM,gBAClClP,EAAe,iBACfC,EAAgB,aAChBrE,EAAY,WACZyT,EAAU,YACVrT,EAAW,kBACX2f,GAAoB,EAAI,SACxBC,EAAQ,UACRC,GACE7lB,GAIG8lB,EAAiBC,GAAUzjB,mBAASoD,GAAWA,EAAQ8D,OAAS9D,EAAQ,GAAK,CAAC,IAC9EsgB,EAAWC,GAAgB3jB,mBAASoD,GAAWA,EAAQ8D,OAAS9D,EAAQ,GAAGwD,gBAAkB,KAC7Fgd,EAAUC,GAAe7jB,mBAAS0jB,EAAYA,EAAU,GAAK,CAAC,GAGrE5Y,qBAAU,KACJ1H,GAAWA,EAAQ8D,QAAUQ,GAAmBC,IAClD8b,EAAOrgB,EAAQgQ,QAAQ/G,GAAOA,EAAGhG,QAAUqB,IAAiB,IAAMtE,EAAQ,IAC1EugB,EAAavgB,EAAQ,GAAGwD,iBACxBid,EAAYzgB,EAAQ,GAAGwD,gBAAgBwM,QAAQ/G,GAAOA,EAAGhG,QAAUsB,IAAkB,IAAMvE,EAAQ,GAAGwD,gBAAgB,IACxH,GACC,CAACc,EAAiBtE,EAASuE,IAE9B,MAAMmc,EAAgBje,mBAAQ,KAC5B,MAAMke,EAAgBxgB,GAAgBqgB,GAAYA,EAASjd,SAAW,EAChEqd,EAAevgB,GAAe+f,EAAgB7c,SAAW,EAC/D,MAAO,CACLqQ,MAAO,CACLiN,eAAgBF,EAChBpd,QAAS9E,IAAWiN,mBAAmBiV,GACvClgB,OAAQH,IAAgBkgB,GAAY3d,OAAOgG,KAAK2X,GAAYA,EAASvd,MAAQ,SAE/E/H,KAAM,CACJ2lB,eAAgBD,EAChBrd,QAAS9E,IAAWiN,mBAAmBkV,GACvCngB,OAAQkT,GAAcyM,EAAgBnd,OAAS,QAElD,GACA,CAACmd,EAAiB/f,EAAasT,EAAYxT,EAAcG,EAAakgB,IACzE,OACE5kB,cAAAgE,WAAA,CAAAvD,SACEsD,eAACkgB,EAAU,CAAAxjB,SAAA,CACTsD,eAACmgB,EAAS,CAAAzjB,SAAA,CACRsD,eAAA,KAAGuc,MAAK,GAAAtU,OAAK8Y,EAAcxlB,KAAKuF,OAAM,cAAAmH,OAAa8Y,EAAcxlB,KAAK2lB,gBAAiBxkB,SAAA,CACrFT,cAACkE,EAAU,IACXH,eAAA,QAAMmN,UAAU,UAASzQ,SAAA,CACtBqkB,EAAcxlB,KAAKqI,QAAQ,IAAEmd,EAAcxlB,KAAKuF,aAGrD7E,cAAC2Q,IAAM,CAELlE,YAAa/D,GAAmB8b,EAAgBnd,MAChD6d,aAActN,GAAsBA,EAAkB,IAAMA,EAAkB,GAC9EuN,eAAgBvN,GAAqBA,EAAkB,GACvDqF,gBAAiBrF,GAAqBA,EAAkB,GACxD5N,SAAWyR,IACT,MAAM1S,EAAW3E,EAAQgQ,QAAQ/G,GAAOA,EAAGhG,QAAUoU,IAAK,GAC1DkJ,EAAa5b,EAASnB,iBACtBid,EAAY9b,EAASnB,gBAAgB,IACrC6c,EAAO1b,GACHD,GACFA,EAAWC,EACb,EAEFxD,YAAaA,EACbsL,YAAaxL,EACbjB,QAASA,EACTwM,WAAY,CAAE/R,MAAO,QACrBiS,SAAO,GAlBF,GAoBP/M,eAACqR,IAAQ,CAACjQ,MAAO,CAAEkY,eAAgB,gBAAiB9F,WAAY,UAAW9W,SAAA,CACxE6jB,GAAYA,EACbtkB,cAAA,KAAGwI,IAAI,MAAMrD,MAAO,CAAEtG,MAAO,QAAUqS,UAAU,SAAQzQ,SACvDT,cAAA,QACEiG,QAASA,KACHT,GACFA,EAAMgf,EACR,EAEFrT,QAASA,IAAM,KACfC,SAAU,EACVC,KAAK,SACLlM,MAAO,CAAE+S,OAAQ,UAAWvZ,MAAO,UAAWe,SAAU,UAAW8X,WAAY,QAAS/W,SACzF,gBAMNkX,EACC3X,cAACsd,IAAa,CAACrX,QAAS4P,EAAY1Q,MAAO,CAAEyM,KAAM,OAAQsG,OAAQ,UAAWrZ,MAAO,GAAIsZ,UAAW,KAEpGnY,cAAColB,IAAU,CAACjgB,MAAO,CAAEyM,KAAM,OAAQ/S,MAAO,GAAIsZ,UAAW,KAG3DpU,eAACmgB,EAAS,CAAAzjB,SAAA,CACRsD,eAAA,KAAGuc,MAAO+D,EAAiB,GAAArY,OAAM8Y,EAAc9M,MAAMnT,OAAM,cAAAmH,OAAa8Y,EAAc9M,MAAMiN,gBAAmB,GAAGxkB,SAAA,CAChHT,cAAC+E,EAAS,IACTsf,EACCtgB,eAAA,QAAMmN,UAAU,UAASzQ,SAAA,CACtBqkB,EAAc9M,MAAMrQ,QAAS,IAC7Bmd,EAAc9M,MAAMnT,UAErB,QAEN7E,cAAC2Q,IAAM,CAELlE,YAAa9D,IAAqBic,EAAWA,EAASvd,MAAQ,QAC9DjD,QAASE,GAAgBogB,EACzB7T,YAAavL,EACbsL,WAAY,CAAE/R,MAAO,QACrBiS,SAAO,EACPoU,aAAcrN,GAAuBA,EAAmB,IAAMA,EAAmB,GACjFsN,eAAgBtN,GAAsBA,EAAmB,GACzDoF,gBAAiBpF,GAAsBA,EAAmB,GAC1DtS,YAAa6e,EACbpa,SAAWyR,IACT,GAAI+I,EAAiB,CACnB,MAAMzb,EAAWyb,EAAgB5c,gBAAgBwM,QAAQ/G,GAAOA,EAAGhG,QAAUoU,IAAK,GAC9E3D,GACFA,EAAY/O,GAEd8b,EAAY9b,EACd,KAAO,CACL,MAAMA,EAAW3E,EAAQ,GAAGgQ,QAAQ/G,GAAOA,EAAGhG,QAAUoU,IAAK,GACzD3D,GACFA,EAAY/O,GAEd8b,EAAY9b,EACd,IAvBG,GA0BPhF,eAACqR,IAAQ,CAACjQ,MAAO,CAAEkY,eAAgB,gBAAiB9F,WAAY,UAAW9W,SAAA,CACxE8jB,GAAaA,EACdvkB,cAAA,KAAGwI,IAAI,MAAMrD,MAAO,CAAEtG,MAAO,QAAUqS,UAAU,qBAM7D,C,mCCnOA,wHAOO,SAASxB,IACd,MAAM,OAAEhG,GAAWC,eACb,OAACsB,GAAUC,cAwBjB,MAAO,CAAEuE,eAtBarN,uBACpBe,MAAOiD,EAAiBif,EAAiB5iB,KACvC,GAAIiH,EACF,IAIE,MAAM4b,EAAW5Q,YAAYzJ,EAAQsa,EAAOF,GAC5C,GAAIC,EAAU,CAEZ,aADwBA,EAASE,UAAUpf,EAAS3D,EAEtD,CACF,CAAE,MAAO4P,GAEP,OADA9J,QAAQ8J,MAAM,2BAA4BA,GACnC,IACT,CAEF,OAAO,IAAI,GAEb,CAAC3I,EAAQuB,IAIb,CAKO,SAASuE,EAAWiW,EAAOJ,GAChC,MAAM,OAAE3b,EAAM,QAAEgc,EAAO,QAAErf,GAAYsD,cAkBrC,MAAO,CAAE4F,cAhBanN,uBACpBe,UACE,GAAIuG,GAAUrD,EAAS,CACrB,MAAM4E,EAAS0a,YAAUD,EAASD,GAE5BH,EAAW5Q,YAAYzJ,EAAQsa,EAAOF,GAA8B,kBAAZA,EAAuBA,EAAQhf,GAAWgf,GAExG,GAAIC,EACF,OAAOA,EAASM,QAAQnjB,EAAQiJ,IAAOma,UAAUC,WAErD,CACA,OAAO,IAAI,GAEb,CAACpc,EAAQrD,EAASqf,EAASD,EAAOJ,IAItC,C,mCC3DA,oEAAO,MAKM9E,EAA4B,CACvCG,KAAM,GACNF,MAAO,KAGIuF,EAAsB,CACjCrF,KAAM,GACNF,MAAO,I,mCCZT,sEAKe,SAASxR,EAAetF,EAAOuB,GAC5C,MAAOqa,EAASU,GAAehlB,mBAAS,MAClCilB,EAAaxC,aAAevd,GAAQA,EAAMwd,iBAAiBwC,aASjE,OAPApa,qBAAU,KACR,GAAIpC,GAAUuB,GAAUgb,GAAczjB,OAAOyjB,EAAW5mB,UAAW,CACjE,MAAM8mB,EAAYzR,YAAYzJ,EAAQW,EAAaqa,EAAW5mB,UAC9D2mB,EAAYG,EACd,IACC,CAACzc,EAAQuc,EAAYhb,IAEjBqa,CACT,C,wDCfA,MAAMzb,EAAQrL,YAAO,KAAPA,CAAY8B,MAAAC,YAAA,2KAUXsJ,K","file":"static/js/15.fa24c551.chunk.js","sourcesContent":["import * as React from 'react'\nimport Slider from '@mui/material/Slider'\nimport { styled } from '@mui/material/styles'\n\nconst PrettoSlider = styled(Slider)((props) => {\n  return () => ({\n    color: '#52af77',\n    height: 320,\n    width: 6,\n    '& .MuiSlider-rail': {\n      background: 'linear-gradient(180deg, #1DCADA, #FFCC04 40%, #FF6308)',\n      opacity: '1',\n    },\n    '& .MuiSlider-track': {\n      border: 'none',\n      background: 'transparent',\n      // background:'linear-gradient(90deg, #FF4D00 0%, #FF730D 31.52%, #FFBD12 44.08%, #FFD900 97.25%)',\n    },\n    '& .MuiSlider-thumb': {\n      // eslint-disable-next-line no-nested-ternary\n      bottom: props.value === 0 ? '2px !important' : props.value > 100 ? 'calc(100% - 2px) !important' : '',\n      height: 6,\n      width: 6,\n      boxShadow: '0px 8px 10px rgba(0, 0, 0, 0.25)',\n      background: '#fff',\n      transform: 'translate(-24px,50%)',\n      // background:'linear-gradient(90deg, #FF4D00 0%, #FF730D 31.52%, #FFBD12 44.08%, #FFD900 97.25%)',\n      border: '2px solid #000',\n      '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n        boxShadow: 'inherit',\n      },\n      '&:before': {\n        position: 'absolute',\n        left: 2,\n        zIndex: -1,\n        width: 20,\n        height: 2,\n        background: '#000',\n        borderRadius: 1,\n      },\n    },\n    '& .MuiSlider-valueLabel': {\n      lineHeight: 1.2,\n      fontSize: 12,\n      background: 'unset',\n      padding: 0,\n      width: 32,\n      height: 32,\n      borderRadius: '50% 50% 50% 0',\n      backgroundColor: '#52af77',\n      transformOrigin: 'left',\n      transform: 'translate(50%, -100%) rotate(-90deg) scale(0)',\n      '&:before': { display: 'none' },\n      '&.MuiSlider-valueLabelOpen': {\n        display: 'none',\n        transform: 'translate(50%, -100%) rotate(-90deg) scale(1)',\n      },\n      '& > *': {\n        transform: 'rotate(45deg)',\n      },\n    },\n  })\n})\n\nexport default function CustomizedSlider(props) {\n  return (\n    <PrettoSlider\n      valueLabelDisplay=\"auto\"\n      aria-label=\"pretto slider\"\n      orientation=\"vertical\"\n      defaultValue={90}\n      disabled\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nconst Content = styled('p')`\n  font-family: 'Heebo Regular', serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  color: rgba(0, 0, 0, 0.5);\n`\nfunction SubTitle(props) {\n  const { children } = props\n  return <Content {...props}>{children}</Content>\n}\n\nexport default SubTitle\n","import React, { useCallback, useState } from 'react'\nimport Methods from 'components/Methods'\nimport { Approve } from 'components/CommonComponent'\nimport tokens, { poolData } from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport Assets from 'assets'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport DataWrapper from 'components/DataWrapper'\nimport { TokenUtils, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo, usePositionAction } from 'hooks/news/usePoistion'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\n\nfunction AddGuaranteeFromWallet(props) {\n  const { walletTokenBalance, approveStatus, onApprove } = props\n  const [transferVal, setTransferVal] = useState<number>(0)\n  const [isDisabled, setDisabled] = useState(false)\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { currentPosition, collateralIndex } = usePositionInfo()\n  const { onUpdatePrepaidInterest, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage } =\n    useComputedIndexAction()\n  const { handleUpdatePosition, onAddPrepaidInterest } = usePositionAction()\n\n  const changeTransferVal = useCallback(\n    (e, type) => {\n      const numberVal = type === 0 ? Number(e.target.value) : walletTokenBalance.WBTC\n      const _transferAmount = toSmallUnits(\n        TokenUtils.formatTokenAmount(numberVal, tokens.WBTC.decimals),\n        tokens.WBTC.decimals,\n      )\n      if (numberVal > walletTokenBalance.WBTC || numberVal <= 0 || _transferAmount.isZero()) {\n        setDisabled(true)\n      } else {\n        setDisabled(false)\n      }\n      onUpdatePrepaidInterest(numberVal)\n      setTransferVal(type === 0 ? e.target.value : numberVal)\n    },\n    [onUpdatePrepaidInterest, walletTokenBalance.WBTC],\n  )\n\n  const onSubmit = useCallback(async () => {\n    try {\n      if (!transferVal || (transferVal <= 0 && transferVal > walletTokenBalance.WBTC)) {\n        toastError(ToastTitle.failed, 'Please enter a valid amount')\n        return\n      }\n      setDisabled(true)\n      const txInfo = await onAddPrepaidInterest(transferVal)\n      toastInfo(\n        ToastTitle.submited,\n        <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n      )\n      const result = await txInfo.wait()\n      if (result) {\n        toastSuccess(\n          ToastTitle.success,\n          <TransactionSuccessInfo content=\"Add settlement success\" txHash={txInfo.hash} />,\n        )\n        setDisabled(false)\n        setTransferVal(0)\n        onUpdatePrepaidInterest(0)\n        await handleUpdatePosition()\n      }\n    } catch (e: any) {\n      setDisabled(false)\n    }\n  }, [\n    transferVal,\n    walletTokenBalance,\n    onAddPrepaidInterest,\n    toastError,\n    toastInfo,\n    toastSuccess,\n    onUpdatePrepaidInterest,\n    handleUpdatePosition,\n  ])\n\n  return (\n    <>\n      <Methods\n        SelectIcon={Wallet}\n        options={poolData}\n        rightOptions={poolData}\n        rightBalance={collateralIndex.prepaidInterest}\n        leftBalance={walletTokenBalance ? walletTokenBalance.WBTC : 0}\n        rightSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        selectedSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        RightIcon={() => <img src={Assets.PrepaidInterest} style={{ width: 20 }} alt=\"\" />}\n        leftInputValue={transferVal}\n        rightInputValue={transferVal}\n        selectInput={(e) => {\n          changeTransferVal(e, 0)\n        }}\n        onMax={() => {\n          changeTransferVal({}, 1)\n        }}\n      />\n      <DataWrapper\n        data={[\n          [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n          [DataIndexName.PrepaidInterestCoverage, collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={isDisabled || transferVal <= 0} onClick={onSubmit}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nexport default AddGuaranteeFromWallet\n","import React, { useCallback, useMemo, useState } from 'react'\nimport tokens from 'config/constants/tokens'\nimport Methods from 'components/Methods'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport { AvatarIcon } from 'components/uikit'\nimport { Approve, IconWrap, TipWrap } from 'components/CommonComponent'\nimport { useTransfer } from 'hooks/useManager'\nimport DataWrapper from 'components/DataWrapper'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { ToastTitle } from 'config/constants/contants'\nimport { useComputedIndexAction, usePositionInfo, usePositionAction } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { tokenKey } from 'config/constants/tokenConfig'\nimport useToast from 'hooks/useToast'\n\nfunction AddCurrencyToAvatar(props) {\n  const { onApprove, approveStatus, account, chainId, walletTokenBalance } = props\n\n  const [transferVal, setTransferVal] = useState(0)\n  const [submitStatus, setSubmitStatus] = useState(true)\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { toastError, toastSuccess } = useToast()\n  const { currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const { onUpdateCollateralValue, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage } =\n    useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n  const transfer = useTransfer()\n\n  const tradingList = useMemo(() => {\n    const { allowedTokens } = currentPositionTokenInfo\n    const tokenList = Array.from(Object.values(allowedTokens.tokens)).map((item) => {\n      return {\n        ...item,\n        token: item.symbol,\n        icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={item.logo} symbol={item.symbol} />,\n        balance: walletTokenBalance[item.symbol],\n        rightOptionList: [\n          {\n            ...item,\n            token: item.symbol,\n            icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={item.logo} symbol={item.symbol} />,\n            balance: toLargeUnits(allowedTokens.balances[item.symbol], item.decimals),\n          },\n        ],\n      }\n    })\n    return tokenList\n  }, [currentPositionTokenInfo, walletTokenBalance])\n  const [selectIndex, setSelectIndex] = useState<number>(0)\n\n  const leftSelectedToken = useMemo(() => {\n    return (\n      (tradingList.length && tradingList[selectIndex]) || {\n        ...currentPosition.mintTokenInfo.settlementCurrency,\n        balance: walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n      }\n    )\n  }, [currentPosition.mintTokenInfo.settlementCurrency, selectIndex, tradingList, walletTokenBalance])\n  const rightSelectedToken = useMemo(() => {\n    return (\n      (tradingList.length && tradingList[selectIndex].rightOptionList[0]) || {\n        ...currentPosition.mintTokenInfo.settlementCurrency,\n        balance: toLargeUnits(\n          currentPositionTokenInfo.allowedTokens.balances[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n          currentPosition.mintTokenInfo.settlementCurrency.decimals,\n        ),\n      }\n    )\n  }, [\n    currentPosition.mintTokenInfo.settlementCurrency,\n    currentPositionTokenInfo.allowedTokens.balances,\n    selectIndex,\n    tradingList,\n  ])\n  const onTransfer = useCallback(async () => {\n    try {\n      setSubmitStatus(true)\n      const tx = await transfer(\n        account,\n        tokens[leftSelectedToken.symbol].address[chainId],\n        currentPosition.positionAddress,\n        toSmallUnits(\n          TokenUtils.formatTokenAmount(transferVal, tokens[leftSelectedToken.symbol].decimals),\n          tokens[leftSelectedToken.symbol].decimals,\n        ),\n      )\n      if (tx) {\n        setSubmitStatus(false)\n        setTransferVal(0)\n        toastSuccess(ToastTitle.success)\n        onUpdateCollateralValue({\n          symbol: leftSelectedToken.symbol as tokenKey,\n          value: 0,\n        })\n        await handleUpdatePosition()\n      }\n    } catch (e: any) {\n      console.dir(e)\n      toastError(ToastTitle.failed, e?.reason)\n      setSubmitStatus(false)\n    }\n  }, [\n    transfer,\n    account,\n    leftSelectedToken,\n    chainId,\n    currentPosition,\n    transferVal,\n    toastSuccess,\n    onUpdateCollateralValue,\n    handleUpdatePosition,\n    toastError,\n  ])\n  return (\n    <>\n      <Methods\n        options={tradingList}\n        rightOptions={tradingList}\n        leftInputValue={transferVal}\n        leftBalance={leftSelectedToken.balance}\n        leftSelectValue={leftSelectedToken.symbol}\n        rightInputValue={transferVal}\n        rightBalance={rightSelectedToken.balance}\n        rightSelectValue={rightSelectedToken.symbol}\n        SelectIcon={Wallet}\n        selectInput={({ target }) => {\n          setTransferVal(target.value)\n          if (target.value > 0 && target.value <= leftSelectedToken.balance) {\n            const _transferVal = toSmallUnits(\n              TokenUtils.formatTokenAmount(target.value, leftSelectedToken.decimals),\n              leftSelectedToken.decimals,\n            )\n            setSubmitStatus(_transferVal.isZero())\n          } else {\n            setSubmitStatus(true)\n          }\n\n          onUpdateCollateralValue({\n            symbol: leftSelectedToken.symbol as tokenKey,\n            value: target.value,\n          })\n        }}\n        leftChange={(selected) => {\n          const _index = tradingList.findIndex((item) => item.symbol === selected.symbol)\n          setSelectIndex(_index)\n          setTransferVal(0)\n          onUpdateCollateralValue({\n            symbol: selected.symbol,\n            value: 0,\n          })\n        }}\n        onMax={() => {\n          if (walletTokenBalance) {\n            if (leftSelectedToken.balance) {\n              setTransferVal(leftSelectedToken.balance)\n              onUpdateCollateralValue({\n                symbol: leftSelectedToken.symbol as tokenKey,\n                value: leftSelectedToken.balance,\n              })\n              if (leftSelectedToken.balance > 0) {\n                setSubmitStatus(false)\n              }\n            }\n          }\n        }}\n        RightIcon={AvatarIcon}\n      />\n      <DataWrapper\n        data={[\n          ['Collateral Ratio', collateralIndex.displayRatio, newDisplayCollateralRatio],\n          ['Prepaid Interest Coverage', collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      <TipWrap>\n        <IconWrap style={{ background: '#FF7D00', color: '#fff' }}>!</IconWrap>\n        <p>\n          Add asset to Collateral won’t effect the Prepaid Interest Coverage, so you might need to add the specific\n          asset in method 1 first.\n        </p>\n      </TipWrap>\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={submitStatus || transferVal <= 0} onClick={onTransfer}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nexport default AddCurrencyToAvatar\n","import React from 'react'\nimport { Typography } from '@mui/material/'\nimport { useWeb3React } from 'web3-react-core'\nimport usePanel from 'hooks/usePanel'\n\nimport { Wrapper, Title, Accordion, AccordionSummary, AccordionDetails } from 'components/CommonComponent'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport AddGuaranteeFromWallet from './AddGuaranteeFromWallet'\nimport AddCurrencyToAvatar from './AddCurrencyToAvatar'\n\nexport default function BeforeMintAction(props) {\n  const { approveStatus, onApprove } = props\n  const { walletTokenBalance } = useHashPowerToken()\n  const { expanded, handleChange } = usePanel()\n  const { active, chainId, account } = useWeb3React()\n\n  return (\n    <Wrapper>\n      <Title>Add collateral before mint</Title>\n      <Accordion id=\"panel1\" expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Add asset from my wallet to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel1' && (\n            <AddGuaranteeFromWallet\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel2\" expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Add asset from my wallet to Collateral</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel2' && (\n            <AddCurrencyToAvatar\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Typography } from '@mui/material/'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport Methods from 'components/Methods'\nimport { useWeb3React } from 'web3-react-core'\nimport { AvatarIcon, GuaranteeIcon } from 'components/uikit'\nimport DataWrapper from 'components/DataWrapper'\nimport {\n  Wrapper,\n  Title,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Approve,\n} from 'components/CommonComponent'\nimport usePanel from 'hooks/usePanel'\nimport tokens from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport contracts from 'config/constants/contracts'\nimport { ethers, utils } from 'ethers'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useSystemParams from 'hooks/useSystemParams'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport PositionABI from 'config/abi/Position.json'\nimport Logo from 'components/Logo'\nimport { SupportedTokens, TokenConfig } from 'config/constants/tokenConfig'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { getSwapQuote } from 'config/constants/pool'\n\n\nconst { ActionUser } = contracts\nconst ActionUserInterface = new utils.Interface(ActionUser.abi)\nconst WidrawFromCollateralToWallet = (props: { approveStatus: boolean; onApprove: any }) => {\n  const { approveStatus, onApprove } = props\n  const [actionDisable, setActionDisable] = useState(true)\n  const { chainId, account } = useWeb3React()\n  const { currentPosition, collateralIndex } = usePositionInfo()\n  const [trading, setTrading] = useState(false)\n  const [transferAmount, setTransferAmount] = useState<number>(0)\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const { walletTokenBalance } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n  const {\n    onUpdatePrepaidInterest,\n    newDisplayCollateralRatio,\n    newPrepaidInterestCoverage,\n    newCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n    minCollateralValue,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n  const onGuaranteeCurrencyToWallet = useCallback(async () => {\n    try {\n      setTrading(true)\n      const data = ActionUserInterface.encodeFunctionData('moveGuarantee', [\n        account,\n        toSmallUnits(transferAmount.toString(), tokens.WBTC.decimals),\n      ])\n      const positionContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n      const txInfo = await positionContract.delegateCall(ActionUser.address[chainId], data)\n      if (txInfo) {\n        setTransferAmount(0)\n        toastInfo(ToastTitle.submited, <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />)\n        const result = await txInfo.wait()\n        if (result) {\n          setTrading(false)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSubmittedInfo content=\"The transactions was successful\" txHash={txInfo.hash} />,\n          )\n          await handleUpdatePosition()\n        }\n      }\n    } catch (e: any) {\n      setTrading(false)\n      toastError(ToastTitle.failed, e?.reason)\n    }\n  }, [\n    account,\n    chainId,\n    currentPosition.positionAddress,\n    handleUpdatePosition,\n    signer,\n    toastError,\n    toastInfo,\n    toastSuccess,\n    transferAmount,\n  ])\n\n  const onInput = (e) => {\n    setTransferAmount(e.target.value)\n  }\n  useEffect(() => {\n    if (\n      newCollateralRatio < 120 ||\n      newPrepaidInterestCoverage < 20 ||\n      transferAmount <= 0 ||\n      transferAmount > (collateralIndex.prepaidInterest as number) ||\n      trading\n    ) {\n      setActionDisable(true)\n    } else {\n      setActionDisable(false)\n    }\n  }, [collateralIndex.prepaidInterest, newCollateralRatio, newPrepaidInterestCoverage, trading, transferAmount])\n\n  useEffect(() => {\n    const transferAmountVal = Number(`-${transferAmount}`)\n    onUpdatePrepaidInterest(Number.isNaN(transferAmountVal) ? 0 : transferAmountVal)\n  }, [onUpdatePrepaidInterest, transferAmount])\n\n  const tradingList = useMemo(() => {\n    return [\n      {\n        decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n        token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n        balance: collateralIndex.prepaidInterest,\n        icon: () => (\n          <Logo\n            imgprops={{ style: { marginRight: 10 } }}\n            token={currentPosition.mintTokenInfo.settlementCurrency.logo}\n            symbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n          />\n        ),\n        rightOptionList: [\n          {\n            decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n            balance: walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n            icon: () => (\n              <Logo\n                imgprops={{ style: { marginRight: 10 } }}\n                token={currentPosition.mintTokenInfo.settlementCurrency.logo}\n                symbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n              />\n            ),\n          },\n        ],\n      },\n    ]\n  }, [collateralIndex, currentPosition, walletTokenBalance])\n\n  return (\n    <>\n      <Methods\n        selectInput={onInput}\n        onMax={() => {\n          const pimin = 20 * currentPosition.positionStatus.estimatedDailyDebt.toNumber()\n          const pi =\n            Number(collateralIndex.prepaidInterest) -\n            (toLargeUnits(pimin, currentPosition.mintTokenInfo.settlementCurrency.decimals, true) as number)\n          if (pi > minCollateralValue) {\n            setTransferAmount(minCollateralValue)\n          } else {\n            setTransferAmount(pi)\n          }\n        }}\n        SelectIcon={GuaranteeIcon}\n        options={tradingList}\n        leftBalance={collateralIndex.prepaidInterest}\n        rightBalance={walletTokenBalance && walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]}\n        rightSelectedValue={42}\n        rightSymbol=\"WBTC\"\n        selectValue={42}\n        selectedBalance={100}\n        selectedSymbol=\"WBTC\"\n        leftInputValue={transferAmount}\n        rightInputValue={transferAmount}\n        RightIcon={Wallet}\n      />\n      <DataWrapper\n        data={[\n          ['Collateral Ratio', collateralIndex.displayRatio, newDisplayCollateralRatio],\n          ['Prepaid Interest Coverage', collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      {approveStatus ? (\n        <Approve style={{ boxShadow: 'none' }} disabled={actionDisable} onClick={onGuaranteeCurrencyToWallet}>\n          Submit\n        </Approve>\n      ) : (\n        <Approve\n          style={{ boxShadow: 'none' }}\n          disabled={approveBtnStatus}\n          onClick={() => {\n            onApprove((state) => {\n              setApproveBtnStatus(state)\n            })\n          }}\n        >\n          Approve\n        </Approve>\n      )}\n    </>\n  )\n}\n\nexport default function WithdrawCollateral(props) {\n  const { chainId, account } = useWeb3React()\n  const { approveStatus, onApprove } = props\n  const { signer } = useSystemParams()\n  const { walletTokenBalance } = useHashPowerToken()\n  const [transferAmount, setTransferAmount] = useState<number>(0)\n  const { tokenPools } = useSystemParams()\n\n  const [leftSelectedToken, setLeftSelectedToken] = useState<\n    { balance: number; token: SupportedTokens } & Omit<TokenConfig, 'logo'>\n  >({\n    balance: 0,\n    token: SupportedTokens.WBTC,\n    decimals: 8,\n    address: '',\n    symbol: SupportedTokens.WBTC,\n  })\n  const [rightSelectedToken, setRightSelectedToken] = useState<\n    { balance: number; token: SupportedTokens } & Omit<TokenConfig, 'logo'>\n  >({\n    balance: 0,\n    token: SupportedTokens.WBTC,\n    decimals: 8,\n    address: '',\n    symbol: SupportedTokens.WBTC,\n  })\n  const [actionDisable, setActionDisable] = useState(true)\n\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const {\n    onUpdateCollateralValue,\n    newDisplayCollateralRatio,\n    newCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n    minCollateralValue,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const { expanded, handleChange } = usePanel()\n  const [trading, setTrading] = useState(false)\n\n  useEffect(() => {\n    if (leftSelectedToken) {\n      const val = toSmallUnits(\n        TokenUtils.formatTokenAmount(transferAmount, leftSelectedToken.decimals),\n        leftSelectedToken.decimals,\n      )\n      if (!val.isZero() && transferAmount <= leftSelectedToken.balance && !trading) {\n        setActionDisable(false)\n      } else {\n        setActionDisable(true)\n      }\n      if (newCollateralRatio <= 120) {\n        setActionDisable(true)\n      }\n    }\n  }, [leftSelectedToken, transferAmount, trading, newCollateralRatio])\n\n  useEffect(() => {\n    const transferAmountVal = Number(`-${transferAmount}`)\n    onUpdateCollateralValue({\n      symbol: leftSelectedToken.token as any,\n      value: Number.isNaN(transferAmountVal) ? 0 : transferAmountVal,\n    })\n  }, [leftSelectedToken, onUpdateCollateralValue, transferAmount])\n\n  const onTransfer = useCallback(async () => {\n    setTrading(true)\n    setActionDisable(true)\n    if (transferAmount <= 0) {\n      setTrading(false)\n      toastError(ToastTitle.failed, 'Please enter a valid amount')\n      return\n    }\n    const withdrawAssetParams = ActionUserInterface.encodeFunctionData('withdrawAsset', [\n      tokens[leftSelectedToken.token].address[chainId],\n      account,\n      toSmallUnits(\n        TokenUtils.formatTokenAmount(transferAmount, leftSelectedToken.decimals),\n        leftSelectedToken.decimals,\n      ),\n    ])\n    try {\n      const positionContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n      const txInfo = await positionContract.delegateCall(ActionUser.address[chainId], withdrawAssetParams)\n      if (txInfo.hash) {\n        toastInfo(\n          ToastTitle.submited,\n          <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n        )\n        const result = await txInfo.wait()\n        if (result) {\n          setTrading(false)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSubmittedInfo content=\"The transactions was successful\" txHash={txInfo.hash} />,\n          )\n          setTransferAmount(0)\n          await handleUpdatePosition()\n        }\n      }\n    } catch (e: any) {\n      setTrading(false)\n      toastError(ToastTitle.failed, e?.reason)\n    }\n  }, [\n    leftSelectedToken,\n    chainId,\n    account,\n    transferAmount,\n    currentPosition.positionAddress,\n    signer,\n    toastInfo,\n    toastSuccess,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  const onMax = (type) => {\n    const { settlementCurrency } = currentPosition.mintTokenInfo\n    if (type === 1) {\n      if (leftSelectedToken.token === settlementCurrency.symbol) {\n        if (minCollateralValue < leftSelectedToken.balance) {\n          setTransferAmount(minCollateralValue)\n        } else {\n          setTransferAmount(leftSelectedToken.balance)\n        }\n      } else {\n        const unitPrice = getSwapQuote(\n          chainId,\n          leftSelectedToken.token,\n          settlementCurrency.symbol,\n          toSmallUnits(\n            TokenUtils.formatTokenAmount(minCollateralValue, settlementCurrency.decimals),\n            settlementCurrency.decimals,\n          ),\n          tokenPools,\n        )\n        const minCollateralValueTokenPrice = toLargeUnits(unitPrice, leftSelectedToken.decimals, true) as number\n        if (minCollateralValueTokenPrice < leftSelectedToken.balance) {\n          setTransferAmount(\n            Number(TokenUtils.formatTokenAmount(minCollateralValueTokenPrice, leftSelectedToken.decimals)),\n          )\n        } else {\n          setTransferAmount(leftSelectedToken.balance)\n        }\n      }\n    }\n  }\n\n\n  const tradingList = useMemo(() => {\n    const { allowedTokens } = currentPositionTokenInfo\n    if (allowedTokens.tokens) {\n      return Object.keys(allowedTokens.tokens).map((item) => {\n        const token = allowedTokens.tokens[item as SupportedTokens]\n        const current = {\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={token.logo} symbol={token.symbol} />,\n          token: token.symbol,\n          balance: toLargeUnits(allowedTokens.balances[item as SupportedTokens], token.decimals, true) as number,\n          decimals: token.decimals,\n          address: token.address,\n        }\n        return {\n          ...current,\n          rightOptionList: [\n            {\n              ...current,\n              balance: walletTokenBalance[item as SupportedTokens] as number,\n            },\n          ],\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo, walletTokenBalance])\n\n  useEffect(() => {\n    const activeToken =\n      (tradingList.find((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol) as any) ||\n      (tradingList[0] as any)\n    setLeftSelectedToken(activeToken)\n    setRightSelectedToken(activeToken)\n  }, [currentPosition.mintTokenInfo.settlementCurrency.symbol, tradingList])\n  return (\n    <Wrapper>\n      <Title>Withdraw Collateral</Title>\n      <Accordion id=\"panel13\" expanded={expanded === 'panel13'} onChange={handleChange('panel13')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Withdraw asset from Collateral to my wallet</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Methods\n            rightOptions={[rightSelectedToken]}\n            SelectIcon={AvatarIcon}\n            options={tradingList}\n            leftSelectValue={leftSelectedToken ? leftSelectedToken.token : ''}\n            rightSelectValue={rightSelectedToken ? rightSelectedToken.token : ''}\n            rightBalance={rightSelectedToken.balance}\n            leftInputValue={transferAmount}\n            rightInputValue={transferAmount}\n            leftChange={(selected) => {\n              setLeftSelectedToken(selected)\n              setRightSelectedToken(selected.rightOptionList[0])\n            }}\n            selectInput={(e) => {\n              setTransferAmount(e.target.value)\n              if (e.target.value > 0 && e.target.value <= leftSelectedToken.balance) {\n                setActionDisable(false)\n              } else {\n                setActionDisable(true)\n              }\n            }}\n            onMax={() => {\n              onMax(1)\n            }}\n            RightIcon={Wallet}\n          />\n          <DataWrapper\n            data={[\n              [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n              [\n                DataIndexName.PrepaidInterestCoverage,\n                collateralIndex.displayCoverage,\n                newDisplayPrepaidInterestCoverage,\n              ],\n            ]}\n          />\n          {approveStatus ? (\n            <Approve style={{ boxShadow: 'none' }} disabled={actionDisable} onClick={onTransfer}>\n              Submit\n            </Approve>\n          ) : (\n            <Approve\n              style={{ boxShadow: 'none' }}\n              disabled={approveBtnStatus}\n              onClick={() => {\n                onApprove((state) => {\n                  setApproveBtnStatus(state)\n                })\n              }}\n            >\n              Approve\n            </Approve>\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel14\" expanded={expanded === 'panel14'} onChange={handleChange('panel14')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Withdraw asset from Prepaid Interest to my wallet</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <WidrawFromCollateralToWallet {...props} />\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { useWeb3React } from 'web3-react-core'\nimport { ButtonBase } from '@mui/material'\nimport { utils } from 'ethers'\nimport Select from 'components/Select'\nimport WalletIcon from 'components/Menu/icons/Wallet'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport useSystemParams from 'hooks/useSystemParams'\nimport usePosContract from 'hooks/usePosContract'\nimport useToast from 'hooks/useToast'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport contracts from 'config/constants/contracts'\nimport { AvatarIcon, Button } from 'components/uikit'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\n\nconst SelectGroup = styled('div')`\n  button.MuiSelectUnstyled-root {\n    width: 200px;\n  }\n\n  div.MuiInput-root {\n    width: calc(100% - 200px) !important;\n  }\n\n  div.topFunc {\n    display: flex;\n    align-items: center;\n    padding: 5px 10px;\n\n    span {\n      margin-left: 10px;\n      font-size: 12px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n`\nconst Tip = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 18px;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 17px;\n  color: rgba(0, 0, 0, 0.5);\n  background: #def1ff;\n  border-radius: 14px;\n  padding: 16px 19px 11px;\n  p span:first-of-type {\n    margin-right: 10px;\n  }\n\n  & + p {\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 17px;\n    color: #000000;\n    margin-bottom: 30px;\n  }\n\n  .info_panel {\n    width: 100%;\n    text-align: right;\n    .footer {\n      border-top: 0.5px solid rgba(0, 0, 0, 0.12);\n    }\n    td {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-weight: 400;\n      font-size: 12px;\n      padding: 5px 0;\n    }\n    .label {\n      text-align: left;\n      width: 30%;\n    }\n    .from,\n    .to {\n      width: 35%;\n      line-height: 17px;\n    }\n    .to {\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 500;\n      color: #000;\n    }\n  }\n`\nconst Func = styled('div')`\n  padding: 10px 20px 5px;\n\n  button {\n    color: #2aa1ff;\n  }\n`\n\nconst NeutralizeButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px !important;\n  box-shadow: none !important;\n  line-height: 46px !important;\n  height: 46px !important;\n  display: block !important;\n  margin: 30px auto 0 !important;\n  width: 30% !important;\n  color: #000;\n`\n\nconst SelectTypeWrap = styled('div')`\n  h3 {\n    font-size: 16px;\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-bottom: 16px;\n  }\n  .content {\n    display: flex;\n  }\n  .item_wrap {\n    min-width: 200px;\n    padding: 1px;\n    border-radius: 14px;\n    overflow: hidden;\n    margin-right: 16px;\n    background: #e3e8ed;\n    cursor: pointer;\n    user-select: none;\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      color: rgba(0, 0, 0, 0.5);\n      font-size: 12px;\n      line-height: 17px;\n      &:first-of-type {\n        margin-right: 30px;\n      }\n    }\n    &.active {\n      padding: 2px;\n      background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n      span {\n        color: #000;\n      }\n    }\n  }\n  .item {\n    border-radius: 12px;\n    //border: 2px solid #E3E8ED;\n    //border-image: linear-gradient(#7AE9F0 , #61C3F7) 30 30;\n    padding: 14px 14px 9px 10px;\n    background: #fff;\n    width: 100%;\n    height: 100%;\n    //box-sizing: border-box;\n    h4 {\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n      display: flex;\n      align-items: center;\n      line-height: 20px;\n      font-size: 14px;\n      margin-bottom: 22px;\n      svg {\n        margin-right: 8.5px;\n      }\n    }\n    p {\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n`\n\nconst TipInfo = styled('div')`\n  display: flex;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  padding: 16px 20px;\n  p {\n    line-height: 20px;\n    font-size: 14px;\n    font-family: PingFangSC-Regular, sans-serif;\n    margin-left: 16px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nconst RED = 'red'\n\nenum NeutralizeType {\n  Wallet = 'wallet',\n  Avatar = 'avatar',\n}\n\nconst { ActionUser: fbtc20mint } = contracts\nfunction NeutralizeComp() {\n  const { setRefresh, walletTokenBalance } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const { active, chainId, account } = useWeb3React()\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [disabledAction, setDisabledAction] = useState(true)\n  const [neutralizeAmount, setNeutralizeAmount] = useState(0)\n  const posContract = usePosContract(active, signer)\n  const [neutralizeType, setNeutralizeType] = useState<NeutralizeType>(NeutralizeType.Wallet)\n\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const { currentMintToken, currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const { onUpdateNeutralizeValue, newNeutralizeFee, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage, newEstimatedDailyDebt } =\n    useComputedIndexAction()\n\n  const { handleUpdatePosition } = usePositionAction()\n\n  const { handleApprove } = useApprove(account, currentPosition?.mintTokenInfo.address)\n  const { onCheckApprove } = useCheckApprove()\n\n  const onApprove = useCallback(async () => {\n    try {\n      const info = await handleApprove(currentPosition?.positionAddress)\n      setApproveStatus(true)\n      if (info.hash) {\n        const result = await info.wait()\n        if (result) {\n          toastSuccess('Approve Success')\n        }\n      }\n    } catch ({ message }: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${message}`)\n    }\n  }, [handleApprove, currentPosition?.positionAddress, toastSuccess, toastError])\n\n  const settlementCurrencyValues = useMemo(() => {\n    const settlementCurrency = currentPosition?.mintTokenInfo.settlementCurrency\n    if (currentPositionTokenInfo?.allowedTokens) {\n      return {\n        [settlementCurrency.symbol]: Number(\n          TokenUtils.formatFourDecimals(\n            Number(\n              toLargeUnits(\n                currentPositionTokenInfo.allowedTokens.balances[settlementCurrency.symbol],\n                settlementCurrency.decimals,\n              ),\n            ),\n          ),\n        ),\n        [currentMintToken]: Number(\n          TokenUtils.formatFourDecimals(\n            Number(\n              toLargeUnits(\n                currentPositionTokenInfo.allowedTokens.balances[currentPosition.mintTokenInfo.symbol],\n                currentPosition.mintTokenInfo.decimals,\n              ),\n            ),\n          ),\n        ),\n      }\n    }\n    return {\n      [settlementCurrency.symbol]: 0,\n      [currentMintToken]: 0,\n    }\n  }, [currentMintToken, currentPosition, currentPositionTokenInfo])\n\n  const checkApprove = useCallback(async () => {\n    if (currentPosition.isEnable) {\n      const txInfo = await onCheckApprove(\n        account,\n        currentPosition.mintTokenInfo.address,\n        currentPosition.positionAddress,\n      )\n      setApproveStatus(txInfo && txInfo._hex > 0)\n    }\n  }, [account, currentPosition, onCheckApprove])\n\n  const onChangeNeutralizeAmount = useCallback(\n    ({ target }) => {\n      const { value } = target\n      const _decimals = currentPosition.mintTokenInfo.decimals\n      setNeutralizeAmount(value)\n      const actionVal = value ? Number(`-${value}`) : 0\n      onUpdateNeutralizeValue(actionVal)\n      const debt = toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)\n      const isWaletValueVaild = value < walletTokenBalance[currentMintToken] && value > 0 && value <= debt\n      const isCollateralValueVaild = value < settlementCurrencyValues[currentMintToken] && value > 0 && value <= debt\n\n      if (neutralizeType === NeutralizeType.Wallet) {\n        setDisabledAction(!isWaletValueVaild)\n      } else {\n        setDisabledAction(!isCollateralValueVaild)\n      }\n      if (value > 0) {\n        const transferValue = toSmallUnits(\n          TokenUtils.formatTokenAmount(value, currentPosition.mintTokenInfo.decimals),\n          _decimals,\n        )\n\n        if (neutralizeType === NeutralizeType.Wallet) {\n          setDisabledAction(!isWaletValueVaild || transferValue.isZero())\n        } else {\n          setDisabledAction(!isCollateralValueVaild || transferValue.isZero())\n        }\n      }\n    },\n    [\n      onUpdateNeutralizeValue,\n      settlementCurrencyValues,\n      currentMintToken,\n      walletTokenBalance,\n      neutralizeType,\n      currentPosition,\n    ],\n  )\n\n  const onNeutralize = useCallback(async () => {\n    if (!disabledAction) {\n      const interf = new utils.Interface(fbtc20mint.abi)\n      const data = interf.encodeFunctionData('neutralizetBalance', [\n        toSmallUnits(String(neutralizeAmount), currentPosition.mintTokenInfo.decimals),\n        neutralizeType === NeutralizeType.Wallet,\n      ])\n      if (posContract) {\n        try {\n          const info = await posContract.delegateCall(fbtc20mint.address[chainId], data)\n          if (info) {\n            setDisabledAction(true)\n            setNeutralizeAmount(0)\n            toastInfo(ToastTitle.submited)\n            const result = await info.wait()\n            if (result) {\n              setRefresh((state) => !state)\n              toastSuccess(ToastTitle.success)\n              setDisabledAction(false)\n              onUpdateNeutralizeValue(0)\n              await handleUpdatePosition()\n            }\n          }\n        } catch (e: any) {\n          toastError(ToastTitle.failed, e?.reason || e?.message)\n        }\n      }\n    }\n  }, [\n    disabledAction,\n    neutralizeAmount,\n    currentPosition.mintTokenInfo.decimals,\n    neutralizeType,\n    posContract,\n    chainId,\n    toastInfo,\n    setRefresh,\n    toastSuccess,\n    onUpdateNeutralizeValue,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  useEffect(() => {\n    checkApprove()\n  }, [checkApprove])\n\n  return (\n    <>\n      <SelectGroup>\n        <Select\n          selectValue={currentMintToken}\n          groupStyle={{ width: '100%' }}\n          options={[\n            {\n              ...currentPosition?.mintTokenInfo,\n              token: currentPosition.mintTokenInfo.symbol,\n            },\n          ]}\n          actionValue={neutralizeAmount}\n          selectInput={onChangeNeutralizeAmount}\n          isGroup\n        />\n        <Func dir=\"rtl\">\n          <ButtonBase\n            onClick={() => {\n              const debt = toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)\n              if (neutralizeType === NeutralizeType.Wallet) {\n                const value = Math.min(Number(walletTokenBalance[currentMintToken]), Number(debt))\n                onChangeNeutralizeAmount({ target: { value } })\n              } else {\n                const value = Math.min(Number(settlementCurrencyValues[currentMintToken]), Number(debt))\n                onChangeNeutralizeAmount({ target: { value } })\n              }\n            }}\n          >\n            Max\n          </ButtonBase>\n        </Func>\n        <SelectTypeWrap>\n          <h3>Neutralize the asset from</h3>\n          <div className=\"content\">\n            <div\n              className={`item_wrap ${neutralizeType === NeutralizeType.Wallet ? 'active' : ''}`}\n              onClick={() => {\n                setNeutralizeType(NeutralizeType.Wallet)\n                if (neutralizeAmount > 0) {\n                  setDisabledAction(\n                    newNeutralizeFee > walletTokenBalance.WBTC ||\n                      neutralizeAmount > walletTokenBalance[currentMintToken],\n                  )\n                }\n              }}\n              onKeyUp={() => null}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <div className=\"item wallet\">\n                <h4>\n                  <WalletIcon /> My Wallet\n                </h4>\n                <p>\n                  <span>{currentMintToken}</span>\n                  <span\n                    style={{\n                      color:\n                        (neutralizeType === NeutralizeType.Wallet &&\n                          walletTokenBalance &&\n                          neutralizeAmount > walletTokenBalance[currentMintToken] &&\n                          RED) ||\n                        '',\n                    }}\n                  >\n                    {(walletTokenBalance && TokenUtils.formatFourDecimals(walletTokenBalance[currentMintToken])) || 0}\n                  </span>\n                </p>\n                <p>\n                  <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                  <span\n                    style={{\n                      color:\n                        neutralizeType === NeutralizeType.Wallet &&\n                        walletTokenBalance &&\n                        newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n                          ? RED\n                          : '',\n                    }}\n                  >\n                    {(walletTokenBalance && TokenUtils.formatFourDecimals(walletTokenBalance.WBTC)) || 0}\n                  </span>\n                </p>\n              </div>\n            </div>\n\n            <div\n              className={`item_wrap ${neutralizeType === NeutralizeType.Avatar ? 'active' : ''}`}\n              onClick={() => {\n                setNeutralizeType(NeutralizeType.Avatar)\n                if (neutralizeAmount > 0) {\n                  setDisabledAction(\n                    neutralizeAmount > settlementCurrencyValues[currentMintToken] ||\n                      newNeutralizeFee >\n                        settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n                  )\n                }\n              }}\n              onKeyUp={() => null}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <div className=\"item avatar\">\n                <h4>\n                  <AvatarIcon />\n                  Collateral\n                </h4>\n                <p>\n                  <span>{currentMintToken}</span>\n                  <span\n                    style={{\n                      color:\n                        (neutralizeType === NeutralizeType.Avatar &&\n                          neutralizeAmount > settlementCurrencyValues[currentMintToken] &&\n                          RED) ||\n                        '',\n                    }}\n                  >\n                    {settlementCurrencyValues[currentPosition.mintTokenInfo.symbol]}\n                  </span>\n                </p>\n                <p>\n                  <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                  <span\n                    style={{\n                      color:\n                        (neutralizeType === NeutralizeType.Avatar &&\n                          newNeutralizeFee >\n                            settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol] &&\n                          RED) ||\n                        '',\n                    }}\n                  >\n                    {settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol]}\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </SelectTypeWrap>\n      </SelectGroup>\n      <Tip>\n        {newEstimatedDailyDebt}\n        <table className=\"info_panel\" cellSpacing={20} cellPadding={20}>\n          <thead>\n            <tr>\n              <td className=\"from\" colSpan={2}>\n                From\n              </td>\n              <td className=\"to\">To</td>\n            </tr>\n            <tr>\n              <td className=\"label\">Outstanding Debt</td>\n              <td className=\"from\">\n                {TokenUtils.formatFourDecimals(\n                  Number(toLargeUnits(currentPosition?.balance, currentPosition?.mintTokenInfo.decimals)),\n                )}\n              </td>\n              <td className=\"to\">\n                {TokenUtils.formatFourDecimals(\n                  Number(toLargeUnits(currentPosition?.balance, currentPosition?.mintTokenInfo.decimals)) -\n                    neutralizeAmount,\n                )}\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"label\">{DataIndexName.CollateralRatio}</td>\n              <td className=\"from\">{collateralIndex.displayRatio}</td>\n              <td className=\"to\">{newDisplayCollateralRatio}</td>\n            </tr>\n            <tr>\n              <td className=\"label\">{DataIndexName.PrepaidInterestCoverage}</td>\n              <td className=\"from\">{collateralIndex.displayCoverage}</td>\n\n              <td className=\"to\">{newDisplayPrepaidInterestCoverage}</td>\n            </tr>\n            <tr className=\"footer\">\n              <td className=\"label\">Estimate neutralize fee</td>\n              <td\n                className=\"to\"\n                colSpan={2}\n                style={{\n                  color:\n                    (neutralizeType === NeutralizeType.Wallet &&\n                      walletTokenBalance &&\n                      newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ||\n                    (neutralizeType === NeutralizeType.Avatar &&\n                      newNeutralizeFee >\n                        settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol])\n                      ? RED\n                      : '',\n                }}\n              >\n                {!newNeutralizeFee ? 0 : `≈${newNeutralizeFee}`} WBTC\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Tip>\n      <TipInfo>\n        {(neutralizeType === NeutralizeType.Wallet &&\n          walletTokenBalance &&\n          newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ||\n        (neutralizeType === NeutralizeType.Avatar &&\n          newNeutralizeFee > settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ? (\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n              fill=\"#FF2E00\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M8.57852 10.156C8.82398 10.156 9.02296 10.355 9.02296 10.6004V11.756C9.02296 12.0015 8.82398 12.2004 8.57852 12.2004H7.42296C7.1775 12.2004 6.97852 12.0015 6.97852 11.756V10.6004C6.97852 10.355 7.1775 10.156 7.42296 10.156H8.57852ZM8.57852 3.62842C8.82398 3.62842 9.02296 3.8274 9.02296 4.07286V8.74859C9.02296 8.99405 8.82398 9.19303 8.57852 9.19303H7.42296C7.1775 9.19303 6.97852 8.99405 6.97852 8.74859V4.07286C6.97852 3.8274 7.1775 3.62842 7.42296 3.62842H8.57852Z\"\n              fill=\"white\"\n            />\n          </svg>\n        ) : (\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n              fill=\"#73797C\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M7.42295 5.6736C7.17749 5.6736 6.9785 5.47461 6.9785 5.22915V4.0736C6.9785 3.82814 7.17749 3.62915 7.42295 3.62915H8.5785C8.82396 3.62915 9.02295 3.82814 9.02295 4.0736L9.02295 5.22915C9.02295 5.47461 8.82396 5.6736 8.5785 5.6736H7.42295ZM7.42295 12.2012C7.17749 12.2012 6.9785 12.0022 6.9785 11.7567V7.081C6.9785 6.83554 7.17749 6.63656 7.42295 6.63656H8.5785C8.82396 6.63656 9.02295 6.83554 9.02295 7.081V11.7567C9.02295 12.0022 8.82396 12.2012 8.5785 12.2012H7.42295Z\"\n              fill=\"white\"\n            />\n          </svg>\n        )}\n\n        <p\n          style={{\n            color:\n              (neutralizeType === NeutralizeType.Wallet &&\n                walletTokenBalance &&\n                newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]) ||\n              (neutralizeType === NeutralizeType.Avatar &&\n                newNeutralizeFee > settlementCurrencyValues[currentPosition.mintTokenInfo.settlementCurrency.symbol])\n                ? RED\n                : '',\n          }}\n        >\n          A 1.0% fee of the token value will be levied after the position is neutralized.\n        </p>\n      </TipInfo>\n      {neutralizeType === NeutralizeType.Avatar ? (\n        <NeutralizeButton disabled={disabledAction} onClick={onNeutralize}>\n          Neutralize\n        </NeutralizeButton>\n      ) : (\n        <>\n          {approveStatus ? (\n            <NeutralizeButton disabled={disabledAction} onClick={onNeutralize}>\n              Neutralize\n            </NeutralizeButton>\n          ) : (\n            <NeutralizeButton disabled={approveStatus} onClick={onApprove}>\n              Approve\n            </NeutralizeButton>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default NeutralizeComp\n","import React, { useCallback, useMemo, useState } from 'react'\nimport Methods from 'components/Methods'\n\nimport { Approve } from 'components/CommonComponent'\nimport tokens, { poolData } from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport DataWrapper from 'components/DataWrapper'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo, usePositionAction } from 'hooks/news/usePoistion'\nimport { AvatarIcon, GuaranteeIcon } from 'components/uikit'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\n\n\nfunction AddGuaranteeFromAvatar(props) {\n  const { approveStatus, onApprove } = props\n  const [transferVal, setTransferVal] = useState<number>(0)\n  const [isDisabled, setDisabled] = useState(false)\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const { collateralIndex, currentPosition, currentPositionTokenInfo } = usePositionInfo()\n  const { onUpdatePrepaidInterest, newDisplayPrepaidInterestCoverage } = useComputedIndexAction()\n  const { handleUpdatePosition, onAddPrepaidInterest } = usePositionAction()\n  const leftBalance = useMemo(() => {\n    return toLargeUnits(\n      currentPositionTokenInfo.allowedTokens?.balances[currentPosition.mintTokenInfo.settlementCurrency.symbol] ?? 0,\n      currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      true,\n    ) as number\n  }, [currentPosition.mintTokenInfo.settlementCurrency, currentPositionTokenInfo.allowedTokens?.balances])\n\n  const changeTransferVal = useCallback(\n    (e, type) => {\n      const numberVal = type === 0 ? Number(e.target.value) : leftBalance\n      const _transferAmount = toSmallUnits(\n        TokenUtils.formatTokenAmount(numberVal, tokens.WBTC.decimals),\n        tokens.WBTC.decimals,\n      )\n      if (numberVal > leftBalance || numberVal <= 0 || _transferAmount.isZero()) {\n        setDisabled(true)\n      } else {\n        setDisabled(false)\n      }\n      setTransferVal(type === 0 ? e.target.value : numberVal)\n      onUpdatePrepaidInterest(numberVal)\n    },\n    [leftBalance, onUpdatePrepaidInterest],\n  )\n  const onSubmit = useCallback(async () => {\n    try {\n      if (!transferVal || (transferVal > leftBalance && transferVal <= 0)) {\n        toastError(ToastTitle.failed, 'Please enter a valid amount')\n        return\n      }\n      setDisabled(true)\n      const txInfo = await onAddPrepaidInterest(transferVal)\n      toastInfo(\n        ToastTitle.submited,\n        <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n      )\n      const result = await txInfo.wait()\n      if (result) {\n        toastSuccess(\n          ToastTitle.success,\n          <TransactionSuccessInfo content=\"Add settlement success\" txHash={txInfo.hash} />,\n        )\n        setDisabled(false)\n        setTransferVal(0)\n        onUpdatePrepaidInterest(0)\n        await handleUpdatePosition()\n      }\n    } catch (error) {\n      setDisabled(false)\n    }\n  }, [\n    transferVal,\n    leftBalance,\n    onAddPrepaidInterest,\n    toastInfo,\n    toastSuccess,\n    handleUpdatePosition,\n    onUpdatePrepaidInterest,\n    toastError,\n  ])\n\n  return (\n    <>\n      <Methods\n        SelectIcon={AvatarIcon}\n        options={poolData}\n        rightBalance={collateralIndex.prepaidInterest}\n        rightOptions={poolData}\n        leftBalance={leftBalance}\n        rightSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        selectedSymbol={currentPosition.mintTokenInfo.settlementCurrency.symbol}\n        RightIcon={GuaranteeIcon}\n        leftInputValue={transferVal}\n        rightInputValue={transferVal}\n        selectInput={(e) => {\n          changeTransferVal(e, 0)\n        }}\n        onMax={() => {\n          changeTransferVal({}, 1)\n        }}\n      />\n      <DataWrapper\n        data={[\n          // The Collateral Ratio has not changed\n          [DataIndexName.CollateralRatio, collateralIndex.displayRatio, collateralIndex.displayRatio],\n\n          [DataIndexName.PrepaidInterestCoverage, collateralIndex.displayCoverage, newDisplayPrepaidInterestCoverage],\n        ]}\n      />\n      <Approve\n        style={{ boxShadow: 'none' }}\n        disabled={!approveStatus || isDisabled || !(transferVal > 0)}\n        onClick={approveStatus ? onSubmit : onApprove}\n      >\n        {approveStatus ? 'Submit' : 'Approve'}\n      </Approve>\n    </>\n  )\n}\n\nexport default AddGuaranteeFromAvatar\n","import React from 'react'\nimport { Typography } from '@mui/material/'\nimport { Wrapper, Title, Accordion, AccordionSummary, AccordionDetails } from 'components/CommonComponent'\nimport usePanel from 'hooks/usePanel'\nimport NeutralizeComp from 'views/Mint/components/NeutralizeComp'\nimport { useWeb3React } from 'web3-react-core'\nimport AddGuaranteeFromWallet from './AddGuaranteeFromWallet'\nimport AddGuaranteeFromAvatar from './AddGuaranteeFromAvatar'\nimport useHashPowerToken from '../../../hooks/useHashPowerToken'\n\nexport default function CustomizedAccordions(props) {\n  const { approveStatus, onApprove } = props\n  const { active, chainId, account } = useWeb3React()\n  const { walletTokenBalance } = useHashPowerToken()\n  const { expanded, handleChange } = usePanel()\n  return (\n    <Wrapper>\n      <Title>Improve Prepaid Interest Coverage</Title>\n      <Accordion id=\"panel3\" expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Add asset from my wallet to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel3' && (\n            <AddGuaranteeFromWallet\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel4\" expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Transfer asset from Collateral to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel4' && (\n            <AddGuaranteeFromAvatar\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel5\" expanded={expanded === 'panel5'} onChange={handleChange('panel5')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 3. Neutralize outstanding debt</Typography>\n        </AccordionSummary>\n        <AccordionDetails>{expanded === 'panel5' && <NeutralizeComp />}</AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { Typography } from '@mui/material/'\nimport { Wrapper, Title, Accordion, AccordionSummary, AccordionDetails } from 'components/CommonComponent'\nimport { useWeb3React } from 'web3-react-core'\nimport usePanel from 'hooks/usePanel'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport AddGuaranteeFromWallet from './AddGuaranteeFromWallet'\nimport AddCurrencyToAvatar from './AddCurrencyToAvatar'\nimport NetralizeComp from '../../Mint/components/NeutralizeComp'\n\nexport default function ImproveCollateralRatio(props) {\n  const { expanded, handleChange } = usePanel()\n  const { approveStatus, onApprove } = props\n  const { walletTokenBalance } = useHashPowerToken()\n  const { active, chainId, account } = useWeb3React()\n  return (\n    <Wrapper>\n      <Title>Improve Collateral Ratio</Title>\n      <Accordion id=\"panel7\" expanded={expanded === 'panel7'} onChange={handleChange('panel7')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Add asset from my wallet to Prepaid Interest</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel7' && (\n            <AddGuaranteeFromWallet\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel8\" expanded={expanded === 'panel8'} onChange={handleChange('panel8')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 2. Add asset from my wallet to Collateral</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel8' && (\n            <AddCurrencyToAvatar\n              active={active}\n              account={account}\n              chainId={chainId}\n              walletTokenBalance={walletTokenBalance}\n              onApprove={onApprove}\n              approveStatus={approveStatus}\n            />\n          )}\n        </AccordionDetails>\n      </Accordion>\n      <Accordion id=\"panel9\" expanded={expanded === 'panel9'} onChange={handleChange('panel9')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 3. Neutralize outstanding debt</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {expanded === 'panel9' && <NetralizeComp />}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { IconButton, Typography } from '@mui/material/'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport AddIcon from '@mui/icons-material/Add'\nimport uuid from 'uuid/dist/v4'\nimport Methods from 'components/Methods'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Approve,\n  FlexWrap,\n  Title,\n  Wrapper,\n} from 'components/CommonComponent'\nimport DataWrapper from 'components/DataWrapper'\nimport usePanel from 'hooks/usePanel'\nimport { useWeb3React } from 'web3-react-core'\nimport { styled } from '@mui/material/styles'\nimport PositionABI from 'config/abi/Position.json'\nimport { AvatarIcon, Button, DeleteIcon, DroppableIcon } from 'components/uikit'\nimport { getContract } from 'utils/web3React'\nimport { utils } from 'ethers'\nimport useSystemParams from 'hooks/useSystemParams'\nimport contracts from 'config/constants/contracts'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useToast from 'hooks/useToast'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { findPath, getSwapQuote } from 'config/constants/pool'\nimport { SupportedTokens } from 'config/constants/tokenConfig'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\n\nconst AddBtn = styled(Button)`\n  box-shadow: none !important;\n  width: 34px !important;\n  height: 28px !important;\n  padding: 0 !important;\n  background: linear-gradient(90deg, #62c3f7 0%, #7ae9f1 100%) !important;\n  border-radius: 6px !important;\n  svg {\n    color: #000;\n    width: 16px;\n  }\n`\n\nconst { ActionUser, ActionMulticall } = contracts\nconst ActionUserInterface = new utils.Interface(ActionUser.abi)\nconst ActionMulticallInterface = new utils.Interface(ActionMulticall.abi)\nconst onDragEnd = (result, columns, setColumns, setIsSubmit) => {\n  if (!result.destination) return\n  const { source, destination } = result\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId]\n    const destColumn = columns[destination.droppableId]\n    const sourceItems = [...sourceColumn.items]\n    const destItems = [...destColumn.items]\n    const [removed] = sourceItems.splice(source.index, 1)\n    destItems.splice(destination.index, 0, removed)\n    setColumns([...destColumn, destItems])\n  } else {\n    const copiedItems = [...columns]\n    const [removed] = copiedItems.splice(source.index, 1)\n    copiedItems.splice(destination.index, 0, removed)\n    if (copiedItems.map((it) => it.input > 0).includes(false)) {\n      setIsSubmit(true)\n    } else {\n      setIsSubmit(false)\n    }\n    setColumns(copiedItems)\n  }\n}\n\nexport default function CustomizedAccordions(props) {\n  const { onApprove, approveStatus } = props\n  const { chainId } = useWeb3React()\n  const { toastInfo, toastError, toastSuccess } = useToast()\n  const { signer, tokenPools } = useSystemParams()\n  const [columns, setColumns] = useState<\n    {\n      id: string\n      input: number\n      output: number\n      inputToken: {\n        token: SupportedTokens\n        balance: number\n        decimals: number\n        icon: React.FC<JSX.Element>\n        rightOptionList: {\n          token: SupportedTokens\n          balance: number\n          decimals: number\n          icon: React.FC<JSX.Element>\n        }[]\n      }\n      outputToken: { token: SupportedTokens; balance: number; decimals: number; icon: React.FC<JSX.Element> }\n    }[]\n  >([])\n  const { expanded, handleChange } = usePanel()\n  const [isSubmitStatus, setIsSubmit] = useState(true)\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n  const {\n    onUpdateTotalCollateralValue,\n    newDisplayCollateralRatio,\n    newCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n  const { currentPositionTokenInfo, collateralIndex, currentPosition } = usePositionInfo()\n\n  const tokenList = useMemo<\n    {\n      token: SupportedTokens\n      balance: number\n      decimals: number\n      icon: React.FC<JSX.Element>\n      rightOptionList: {\n        token: SupportedTokens\n        balance: number\n        decimals: number\n        icon: React.FC<JSX.Element>\n      }[]\n    }[]\n  >(() => {\n    if (currentPositionTokenInfo?.tokenPrice) {\n      const { allowedTokens } = currentPositionTokenInfo\n      const list = Object.values(allowedTokens.tokens).map((it) => {\n        const balance =\n          (allowedTokens?.balances &&\n            (toLargeUnits(allowedTokens?.balances[it.symbol] || 0, it.decimals, true) as number)) ||\n          0\n        return {\n          decimals: it.decimals,\n          token: it.symbol,\n          balance,\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={it.logo} symbol={it.symbol} />,\n          rightOptionList: [],\n        }\n      })\n      return list.map((item) => {\n        return {\n          ...item,\n          rightOptionList: list.filter((it) => it.token !== item.token),\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo])\n  const addMethods = useCallback(() => {\n    setColumns((state) => {\n      const data = [\n        ...state,\n        {\n          id: uuid(),\n          input: 0,\n          output: 0,\n          inputToken: tokenList[0],\n          outputToken: tokenList[0].rightOptionList[0],\n        },\n      ]\n      if (data.map((it) => it.input > 0).includes(false)) {\n        setIsSubmit(true)\n      } else {\n        setIsSubmit(false)\n      }\n      return data\n    })\n  }, [tokenList])\n\n  const onSubmit = useCallback(async () => {\n    const posContract = getContract(signer, PositionABI, currentPosition.positionAddress)\n    try {\n      if (posContract) {\n        const isSubmit = columns.filter((it) => it.input <= 0)\n        if (isSubmit.length) {\n          toastError(ToastTitle.failed, 'Please enter a valid amount')\n          return\n        }\n\n        setIsSubmit(true)\n        const _params = columns.map((it) => {\n          const inputAmount = toSmallUnits(String(it.input), it.inputToken.decimals)\n          const outputAmount = toSmallUnits(String(it.output), it.outputToken.decimals)\n          const { tokenAddressPath } = findPath({\n            chainId,\n            from: it.inputToken.token,\n            to: it.outputToken.token,\n          })\n\n          console.log(it.inputToken.token, it.outputToken.token, [\n            inputAmount,\n            '0',\n            tokenAddressPath,\n            '999999999999999',\n          ])\n          return [\n            ActionUser.address[chainId],\n            ActionUserInterface.encodeFunctionData('swapExactTokensForTokens', [\n              inputAmount,\n              outputAmount,\n              tokenAddressPath,\n              '999999999999999',\n            ]),\n          ]\n        })\n        const dataMulti = ActionMulticallInterface.encodeFunctionData('multicall', [_params])\n        const transaction = await posContract.delegateCall(ActionMulticall.address[chainId], dataMulti)\n        if (transaction.hash) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={transaction.hash} />,\n          )\n        }\n        const result = await transaction.wait()\n        if (result) {\n          setIsSubmit(true)\n          onUpdateTotalCollateralValue(0)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSuccessInfo content=\"The transaction was successful.\" txHash={transaction.hash} />,\n          )\n          try {\n            await handleUpdatePosition()\n          } catch (error) {\n            console.error('handleUpdatePosition>>>>', error)\n          }\n        }\n      }\n    } catch (error: any) {\n      setIsSubmit(false)\n      toastError(\n        'Failed',\n        <FlexWrap style={{ flexDirection: 'column' }}>\n          <p\n            style={{\n              wordBreak: 'break-all',\n            }}\n          >\n            {error.reason}\n          </p>\n        </FlexWrap>,\n      )\n    }\n  }, [\n    signer,\n    currentPosition.positionAddress,\n    columns,\n    chainId,\n    toastInfo,\n    onUpdateTotalCollateralValue,\n    toastSuccess,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  useEffect(() => {\n    if (tokenList.length) {\n      setColumns(() => {\n        return [\n          {\n            id: uuid(),\n            input: 0,\n            output: 0,\n            inputToken: tokenList[0],\n            outputToken: tokenList[0].rightOptionList[0],\n          },\n        ]\n      })\n    }\n  }, [tokenList])\n  const onChangeInputAmount = useCallback(\n    (\n      e,\n      item: {\n        id: string\n        input: number\n        output: number\n        inputToken: {\n          token: SupportedTokens\n          balance: number\n          decimals: number\n          icon: React.FC<JSX.Element>\n          rightOptionList: {\n            token: SupportedTokens\n            balance: number\n            decimals: number\n            icon: React.FC<JSX.Element>\n          }[]\n        }\n        outputToken: { token: SupportedTokens; balance: number; decimals: number; icon: React.FC<JSX.Element> }\n      },\n    ) => {\n      const value = TokenUtils.formatTokenAmount(Number(e.target.value), item.inputToken.decimals)\n      if (Number(value) > Number.MAX_SAFE_INTEGER) {\n        setIsSubmit(true)\n        return\n      }\n      const res =\n        getSwapQuote(\n          chainId,\n          item.inputToken.token,\n          item.outputToken.token,\n          toSmallUnits(value, item.inputToken.decimals),\n          tokenPools,\n        ) || 0\n      setColumns((state) => {\n        const data = state.map((it) => {\n          const _item = {\n            ...it,\n            input: it.id === item.id ? e.target.value : it.input,\n            output: it.id === item.id ? (toLargeUnits(res, item.outputToken.decimals, true) as number) : it.output,\n          }\n          return _item\n        })\n        if (data.map((it) => it.input > 0 && it.output > 0 && it.input < it.inputToken.balance).includes(false)) {\n          setIsSubmit(true)\n        } else if (\n          value.indexOf('.') !== -1 &&\n          String(value).slice(value.indexOf('.') + 1).length > item.inputToken.decimals\n        ) {\n          setIsSubmit(true)\n        } else {\n          setIsSubmit(false)\n        }\n        return data\n      })\n    },\n    [chainId, tokenPools],\n  )\n  const onChangeToken = useCallback(\n    (selected, id, type) => {\n      setColumns((state) => {\n        return state.map((item) => {\n          if (item.id === id) {\n            const data = { ...item, [type]: selected }\n            if (data.input) {\n              const res = getSwapQuote(\n                chainId,\n                data.inputToken.token,\n                data.outputToken.token,\n                toSmallUnits(\n                  TokenUtils.formatTokenAmount(data.input, data.inputToken.decimals),\n                  data.inputToken.decimals,\n                ),\n                tokenPools,\n              )\n              data.output = toLargeUnits(res, data.outputToken.decimals, true) as number\n            }\n            return data\n          }\n          return item\n        })\n      })\n    },\n    [chainId, tokenPools],\n  )\n  const onExchange = useCallback((record, index) => {\n    setColumns((state) => {\n      return state.map((item, i) => {\n        if (i === index) {\n          const data: {\n            token: SupportedTokens\n            balance: number\n            decimals: number\n            icon: React.FC<JSX.Element>\n            rightOptionList: {\n              token: SupportedTokens\n              balance: number\n              decimals: number\n              icon: React.FC<JSX.Element>\n            }[]\n          } = {\n            ...item.outputToken,\n            rightOptionList: [],\n          }\n          data.rightOptionList = [...item.inputToken.rightOptionList]\n          data.rightOptionList.push(item.inputToken)\n          data.rightOptionList = data.rightOptionList.filter((it) => it.token !== item.outputToken.token)\n          const target = {\n            ...item,\n            outputToken: item.inputToken,\n            inputToken: { ...data, balance: item.outputToken.balance },\n            input: 0,\n            output: 0,\n          }\n          return { ...target }\n        }\n        return item\n      })\n    })\n  }, [])\n\n  useEffect(() => {\n    const { tokenPrice } = currentPositionTokenInfo\n    if (tokenPrice) {\n      const poolPath = columns.map((it) => ({\n        from: it.inputToken.token,\n        to: it.outputToken.token,\n        fromDecimals: it.inputToken.decimals,\n        toDecimals: it.outputToken.decimals,\n        inputValue: Number(it.input),\n        outputValue: Number(it.output),\n      }))\n      let total = 0\n      poolPath.forEach((item) => {\n        total -=\n          item.inputValue *\n          (toLargeUnits(\n            tokenPrice[item.from].price,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            true,\n          ) as number)\n        total +=\n          item.outputValue *\n          (toLargeUnits(\n            tokenPrice[item.to].price,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            true,\n          ) as number)\n      })\n      onUpdateTotalCollateralValue(total)\n    }\n  }, [\n    columns,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPositionTokenInfo,\n    onUpdateTotalCollateralValue,\n  ])\n\n  return (\n    <Wrapper>\n      <Title>Trading through Collateral</Title>\n      <Accordion id=\"panel12\" expanded={expanded === 'panel12'} onChange={handleChange('panel12')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Trading through Collateral</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns, setIsSubmit)}>\n            <Droppable droppableId=\"droppableId\">\n              {(provided) => {\n                return (\n                  <div {...provided.droppableProps} ref={provided.innerRef}>\n                    {columns.map((item, index) => {\n                      return (\n                        <Draggable key={item.id} draggableId={item.id} index={index} isDragDisabled={index === 0}>\n                          {(provideds) => {\n                            const amountOut =\n                              (tokenPools.length &&\n                                getSwapQuote(\n                                  chainId,\n                                  item.inputToken.token,\n                                  item.outputToken.token,\n                                  toSmallUnits('1', item.inputToken.decimals),\n                                  tokenPools,\n                                )) ||\n                              0\n                            const price = toLargeUnits(amountOut, item.outputToken.decimals, true) as number\n                            const priceStr = TokenUtils.formatFourDecimals(price)\n                            return (\n                              <div\n                                ref={provideds.innerRef}\n                                {...provideds.draggableProps}\n                                {...provideds.dragHandleProps}\n                                style={{\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  userSelect: 'none',\n                                  margin: '0 0 8px 0',\n                                  ...provideds.draggableProps.style,\n                                  position: 'static',\n                                }}\n                              >\n                                <div style={{ width: '100%', position: 'relative', paddingRight: index <= 0 ? 58 : 0 }}>\n                                  <Methods\n                                    SelectIcon={AvatarIcon}\n                                    leftInputValue={item.input}\n                                    rightInputValue={item.output}\n                                    isExchange\n                                    onExchange={() => {\n                                      onExchange(item, index)\n                                    }}\n                                    options={tokenList}\n                                    leftSelectValue={item.inputToken.token}\n                                    leftBalance={item.inputToken.balance}\n                                    rightSelectValue={item.outputToken.token}\n                                    rightBalance={item.outputToken.balance}\n                                    rightOptions={item.inputToken.rightOptionList}\n                                    selectedBalance={100}\n                                    leftDisableStatus={[false, false]}\n                                    RightIcon={AvatarIcon}\n                                    rightDisableStatus={[false, true]}\n                                    selectInput={(e) => {\n                                      onChangeInputAmount(e, item)\n                                    }}\n                                    leftChange={(selected) => {\n                                      onChangeToken(selected, item.id, 'inputToken')\n                                    }}\n                                    rightChange={(selected) => {\n                                      onChangeToken(selected, item.id, 'outputToken')\n                                    }}\n                                    onMax={() => {\n                                      onChangeInputAmount({ target: { value: item.inputToken.balance } }, item)\n                                    }}\n                                    leftSymbol={item.inputToken.token}\n                                    rightSymbol={item.outputToken.token}\n                                  />\n                                  <p\n                                    style={{\n                                      position: 'absolute',\n                                      bottom: 0,\n                                      right: index <= 0 ? 73 : 15,\n                                      color: 'rgba(0, 0, 0, 0.5)',\n                                      fontSize: 12,\n                                    }}\n                                  >\n                                    {`${1} ${item.inputToken.token}`} ≈ {`${priceStr} ${item.outputToken.token}`}\n                                  </p>\n                                </div>\n                                {index > 0 ? (\n                                  <>\n                                    <IconButton\n                                      onClick={() => {\n                                        const data = [...columns]\n                                        data.splice(index, 1)\n                                        if (data.map((it) => it.input > 0).includes(false)) {\n                                          setIsSubmit(true)\n                                        } else {\n                                          setIsSubmit(false)\n                                        }\n                                        setColumns(data)\n                                      }}\n                                      style={{ cursor: 'pointer', marginTop: 8, marginLeft: 10, padding: 0 }}\n                                    >\n                                      <DeleteIcon />\n                                    </IconButton>\n                                    <IconButton style={{ marginTop: 8, marginLeft: 8, padding: 0 }}>\n                                      <DroppableIcon style={{ fill: 'none' }} />\n                                    </IconButton>\n                                  </>\n                                ) : null}\n                              </div>\n                            )\n                          }}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )\n              }}\n            </Droppable>\n          </DragDropContext>\n          <AddBtn onClick={addMethods}>\n            <AddIcon />\n          </AddBtn>\n          <DataWrapper\n            data={[\n              [\n                DataIndexName.CollateralRatio,\n                collateralIndex.displayRatio,\n                `${\n                  !(newCollateralRatio === 0 || newCollateralRatio === Number.POSITIVE_INFINITY) ? '≈' : ''\n                } ${newDisplayCollateralRatio}`,\n              ],\n\n              [\n                DataIndexName.PrepaidInterestCoverage,\n                collateralIndex.displayCoverage,\n                newDisplayPrepaidInterestCoverage,\n              ],\n            ]}\n          />\n          {approveStatus ? (\n            <Approve style={{ boxShadow: 'none' }} disabled={isSubmitStatus} onClick={onSubmit}>\n              Submit\n            </Approve>\n          ) : (\n            <Approve\n              style={{ boxShadow: 'none' }}\n              disabled={approveBtnStatus}\n              onClick={() => {\n                onApprove((state) => {\n                  setApproveBtnStatus(state)\n                })\n              }}\n            >\n              Approve\n            </Approve>\n          )}\n          {/* {newTotalAssetsValues} */}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Typography, Input } from '@mui/material/'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport {\n  Wrapper,\n  Title,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Approve,\n} from 'components/CommonComponent'\nimport usePanel from 'hooks/usePanel'\nimport { styled } from '@mui/material/styles'\nimport { AvatarIcon, ExchangeArrow, GuaranteeIcon } from 'components/uikit'\nimport { useWeb3React } from 'web3-react-core'\nimport Select from 'components/Select'\nimport DataWrapper from 'components/DataWrapper'\nimport useSystemParams from 'hooks/useSystemParams'\nimport usePosContract from 'hooks/usePosContract'\nimport contracts from 'config/constants/contracts'\nimport { useTransfer } from 'hooks/useManager'\nimport useToast from 'hooks/useToast'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { chainConfigs, commonTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { getSwapQuote } from 'config/constants/pool'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { ethers } from 'ethers'\n\nconst MethodsWrap = styled('div')`\n  .balance_info {\n    display: flex;\n    align-content: center;\n    padding: 0 12px;\n    margin-bottom: 6px;\n    .label {\n      color: #000;\n      font-size: 14px;\n      font-family: PingFangSC-Medium, sans-serif;\n    }\n    span {\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 400;\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n      margin-left: 7px;\n    }\n  }\n  .content {\n    display: flex;\n    height: 50px;\n    background: rgba(255, 255, 255, 0.4);\n    border: 1px solid rgba(207, 216, 226, 0.5);\n    box-sizing: border-box;\n    border-radius: 11px;\n    padding: 0 12px;\n    .select_custom {\n      margin: 0;\n      padding: 0;\n      border: none;\n      background: unset;\n      width: 200px;\n      flex-shrink: 0;\n    }\n    .select_custom:nth-of-type(2) {\n      width: 130px;\n    }\n    .MuiInput-root,\n    .MuiInput-input {\n      text-align: right;\n      width: 100%;\n      border: none;\n      &:before,\n      &:after {\n        display: none;\n      }\n    }\n    .MuiInput-input {\n      padding: 0 8px;\n      border-left: 1px solid rgba(207, 216, 226, 0.5) !important;\n\n      &::-webkit-inner-spin-button {\n        display: none;\n      }\n    }\n  }\n  .func {\n    font-size: 12px;\n    line-height: 17px;\n    color: #6ed6f3;\n    text-align: right;\n    padding: 0 20px;\n    margin-top: 3px;\n    cursor: pointer;\n    user-select: none;\n  }\n`\n\nenum AccountType {\n  'MyWallet' = 'My Wallet',\n  'Standard' = 'Collateral',\n  'Settlement' = 'Prepaid Interest',\n}\n\nconst accountCategoryList = [\n  {\n    type: AccountType.MyWallet,\n    token: 'My Wallet',\n    id: 'd04155c3-eb41-4c44-b28d-67bb2d515904',\n    icon: Wallet,\n  },\n  {\n    type: AccountType.Settlement,\n    token: 'Prepaid Interest',\n    icon: GuaranteeIcon,\n    id: 'edebd20e-18a1-4bc8-a869-9b44537d810c',\n  },\n  {\n    type: AccountType.Standard,\n    token: 'Collateral',\n    icon: AvatarIcon,\n    id: '763c1484-3fd3-4044-b8b5-3c261947f414',\n  },\n]\n\nconst { ActionUser } = contracts\n\nconst ActionUserInterface = new ethers.utils.Interface(ActionUser.abi)\nconst getTokenDecimals = (symbol: string) => {\n  const key = valueToKeyMap[symbol]\n  return commonTokens[key].decimals\n}\n\nexport default function GeneralTransfer(props) {\n  const { approveStatus, onApprove } = props\n  const [gDisStatus, setGDisStatus] = useState(true)\n  const [approveBtnStatus, setApproveBtnStatus] = useState(false)\n\n  const { signer, tokenPools } = useSystemParams()\n  const { walletTokenBalance, setRefresh } = useHashPowerToken()\n  const [trading, setTrading] = useState(false)\n  const { toastInfo, toastSuccess, toastError } = useToast()\n\n  const { currentPosition, currentPositionTokenInfo, collateralIndex } = usePositionInfo()\n  const {\n    onUpdateCollateralValue,\n    onUpdatePrepaidInterest,\n    newDisplayCollateralRatio,\n    newDisplayPrepaidInterestCoverage,\n    newCollateralRatio,\n    newPrepaidInterestCoverage,\n  } = useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n\n  const [actionData, setActionData] = useState([\n    {\n      accountType: AccountType.MyWallet,\n      tokenType: currentPosition.mintTokenInfo.symbol,\n      transferVal: 0,\n      id: '1fee1a14-b8b3-4b73-b2be-1817a6d228ec',\n      tokenSelectDisabled: false,\n      list: [...accountCategoryList],\n      token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n      decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    },\n    {\n      accountType: AccountType.Standard,\n      tokenType: currentPosition.mintTokenInfo.symbol,\n      transferVal: 0,\n      id: '25897dcf-e843-4630-a5e1-309dc10cb1e5',\n      tokenSelectDisabled: true,\n      list: [...accountCategoryList],\n      token: currentPosition.mintTokenInfo.settlementCurrency.symbol,\n      decimals: currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    },\n  ])\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {})\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const tokenList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(tokens).map((key) => {\n        return {\n          token: key,\n          decimals: tokens[key].decimals,\n          address: tokens[key].address,\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={tokens[key].logo} symbol={key} />,\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const transfer = useTransfer()\n  const { expanded, handleChange } = usePanel()\n  const { active, chainId, account } = useWeb3React()\n  const posContract = usePosContract(active, signer)\n\n  const onSubmit = useCallback(async () => {\n    if (!posContract) return\n\n    setTrading(true)\n\n    let data = null\n    let isTransfer = false\n    const transferTransactions = []\n    const [transferData, recviceTarget] = actionData\n    const { tokenType: tokenSymbol, accountType, transferVal } = transferData\n    const transferDecimals = getTokenDecimals(tokenSymbol)\n    const transferAmount = toSmallUnits(TokenUtils.formatTokenAmount(transferVal, transferDecimals), transferDecimals)\n    const tokenAddress = chainConfigs[chainId].tokens[tokenSymbol].address\n    if (transferAmount.isZero()) {\n      return\n    }\n\n    const handleResult = async (txInfo) => {\n      const result = await txInfo.wait()\n      if (result) {\n        toastSuccess(\n          ToastTitle.success,\n          <TransactionSuccessInfo content=\"The transaction was successful.\" txHash={result.hash} />,\n        )\n        setTrading(false)\n        setGDisStatus(true)\n        await handleUpdatePosition()\n      }\n    }\n\n    const handleError = ({ message, reason }) => {\n      toastError('Failed', `${reason || message}`)\n      setTrading(false)\n    }\n\n    const handleAllSettled = (results) => {\n      setTrading(false)\n      results.forEach((result) => {\n        if (result.status === 'rejected') {\n          toastError('Failed', result.reason?.reason || result.reason?.message)\n        } else {\n          toastSuccess('Success')\n          setRefresh((state) => !state)\n        }\n      })\n    }\n\n    const submitTransaction = async (_data: string) => {\n      try {\n        const txInfo = await posContract.delegateCall(ActionUser.address[chainId], _data)\n        if (txInfo) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n          )\n          await handleResult(txInfo)\n        }\n      } catch (error) {\n        handleError(error as any)\n      }\n    }\n\n    if (accountType === AccountType.MyWallet) {\n      if (recviceTarget.accountType === AccountType.Settlement) {\n        data = ActionUserInterface.encodeFunctionData('addGuarantee', [transferAmount, false])\n      } else if (recviceTarget.accountType === AccountType.Standard) {\n        transferTransactions.push(transfer(account, tokenAddress, currentPosition.positionAddress, transferAmount))\n        isTransfer = true\n      }\n    } else if (accountType === AccountType.Standard) {\n      if (recviceTarget.accountType === AccountType.MyWallet) {\n        data = ActionUserInterface.encodeFunctionData('withdrawAsset', [tokenAddress, account, transferAmount])\n      } else if (recviceTarget.accountType === AccountType.Settlement) {\n        data = ActionUserInterface.encodeFunctionData('addGuarantee', [transferAmount, true])\n      }\n    } else if (accountType === AccountType.Settlement) {\n      if (recviceTarget.accountType === AccountType.MyWallet) {\n        data = ActionUserInterface.encodeFunctionData('moveGuarantee', [account, transferAmount])\n      } else if (recviceTarget.accountType === AccountType.Standard) {\n        data = ActionUserInterface.encodeFunctionData('moveGuarantee', [currentPosition.positionAddress, transferAmount])\n      }\n    }\n\n    if (!isTransfer && data) {\n      await submitTransaction(data)\n    } else {\n      Promise.allSettled(transferTransactions)\n        .then(handleAllSettled)\n        .catch((e) => {\n          toastError(ToastTitle.failed, e.reason)\n          setTrading(false)\n        })\n    }\n  }, [\n    posContract,\n    actionData,\n    chainId,\n    toastSuccess,\n    handleUpdatePosition,\n    toastError,\n    setRefresh,\n    toastInfo,\n    transfer,\n    account,\n    currentPosition.positionAddress,\n  ])\n\n  const onChangeVal = useCallback(({ target }, record) => {\n    const { value } = target\n    setActionData((state) => {\n      const data = state.map((item) => ({ ...item, transferVal: value }))\n      return data\n    })\n  }, [])\n\n  useEffect(() => {\n    const [send, recive] = actionData\n    switch (send.accountType) {\n      case AccountType.MyWallet:\n        if (recive.accountType === AccountType.Settlement) {\n          onUpdatePrepaidInterest(send.transferVal)\n        } else {\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: Number(send.transferVal),\n          })\n        }\n        break\n      case AccountType.Standard:\n        if (recive.accountType === AccountType.MyWallet) {\n          const value = Number(send.transferVal)\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: value ? Number(`-${value}`) : value,\n          })\n        } else {\n          const value = Number(send.transferVal)\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: value ? Number(`-${value}`) : value,\n          })\n          onUpdatePrepaidInterest(send.transferVal)\n        }\n        break\n      case AccountType.Settlement:\n        if (recive.accountType === AccountType.MyWallet) {\n          const value = Number(send.transferVal)\n          onUpdatePrepaidInterest(value ? Number(`-${value}`) : value)\n        } else {\n          const value = Number(send.transferVal)\n          onUpdatePrepaidInterest(value ? Number(`-${value}`) : value)\n          onUpdateCollateralValue({\n            symbol: send.tokenType as any,\n            value: Number(send.transferVal),\n          })\n        }\n        break\n      default:\n        console.log(1)\n    }\n  }, [actionData, onUpdateCollateralValue, onUpdatePrepaidInterest])\n\n  const onChangeAccount = useCallback(\n    (val, record, i) => {\n      setActionData((state) => {\n        const data = state.map((item) => ({\n          ...item,\n          accountType: item.id === record.id ? val : item.accountType,\n          tokenType:\n            val === AccountType.Settlement ? currentPosition.mintTokenInfo.settlementCurrency.symbol : item.tokenType,\n          transferVal: Number(),\n        }))\n        if (i === 0) {\n          data[1].list = accountCategoryList.filter((it) => it.type !== data[0].accountType)\n          data[0].tokenSelectDisabled = data[0].accountType === AccountType.Settlement\n        }\n        return data\n      })\n    },\n    [currentPosition.mintTokenInfo.settlementCurrency.symbol],\n  )\n\n  const onChangeToken = useCallback(\n    (val, __index) => {\n      setActionData((state) => {\n        const nextState = state.map((it) => ({ ...it, tokenType: val, transferVal: Number() }))\n\n        if (val !== currentPosition.mintTokenInfo.settlementCurrency.symbol) {\n          nextState[1].list = nextState[1].list.filter((it) => it.type !== AccountType.Settlement)\n        } else {\n          const settlement = accountCategoryList.find((it) => it.type === AccountType.Settlement)\n          const _index = nextState[1].list.findIndex((it) => it.type === AccountType.Settlement)\n          if (!(_index > -1)) {\n            nextState[1].list.push(settlement)\n          }\n        }\n        return nextState\n      })\n    },\n    [currentPosition.mintTokenInfo.settlementCurrency.symbol],\n  )\n\n  const onMax = useCallback(\n    (record) => {\n      setActionData((state) => {\n        const data = [...state]\n        /* \n          1. wallet send to collateral //// add collateral（transfer）   Total assets increase, prepaid interest remains unchanged, margin ratio increases, and the number of days covered by prepaid interest remains the same.\n          2. wallet send to prepaid interest       // addGuarantee｜    Total assets increase, prepaid interest increases, margin ratio increases, and the number of days covered by prepaid interest remains the same.\n          3. collateral send to wallet //           withdrawAsset｜     Total assets decrease, prepaid interest remains unchanged, margin ratio decreases, and the number of days covered by prepaid interest remains the same.\n          4. collateral send to prepaid interest // addGuarantee |      Total assets remain unchanged, prepaid interest increases, margin ratio remains unchanged, and the number of days covered by prepaid interest increases.\n          5. prepaid interest send to wallet /// moveGuarantee |        Total assets decrease, prepaid interest decreases, margin ratio decreases, and the number of days covered by prepaid interest decreases.\n          6. prepaid interest send to collateral /// add collateral ||  Total assets remain unchanged, prepaid interest decreases, margin ratio remains unchanged, and the number of days covered by prepaid interest decreases.\n          */\n        const { settlementCurrency } = currentPosition.mintTokenInfo\n        const { shortBalanceValue, estimatedDailyDebt, collateralValue } = currentPosition.positionStatus\n        const tokenTypeDecimals = getTokenDecimals(record.tokenType)\n        if (record.accountType === AccountType.MyWallet) {\n          const balance = walletTokenBalance[record.tokenType] || 0\n          data[0].transferVal = balance\n        } else if (record.accountType === AccountType.Standard) {\n          const collateralAssets = avatarAssetList[record.tokenType] || 0\n          const maxActionTotalAssets = Number(\n            TokenUtils.formatTokenAmount(1.2 * Number(toLargeUnits(shortBalanceValue, settlementCurrency.decimals)), 0),\n          )\n          if (collateralAssets > 0) {\n            if (maxActionTotalAssets === 0) {\n              data[0].transferVal = collateralAssets\n              data[1].transferVal = collateralAssets\n              return data\n            }\n            const maxCollateralTransfer = maxActionTotalAssets - collateralIndex.prepaidInterest\n            if (data[1].accountType === AccountType.Settlement) {\n              // If the calculated maximum value exceeds the asset value, use the asset value instead.\n              if (maxCollateralTransfer > collateralAssets) {\n                data[0].transferVal = collateralAssets\n                data[1].transferVal = collateralAssets\n              } else {\n                data[0].transferVal = maxCollateralTransfer\n                data[1].transferVal = maxCollateralTransfer\n              }\n            }\n            if (data[1].accountType === AccountType.MyWallet) {\n              const amountOutPrice = getSwapQuote(\n                chainId,\n                record.tokenType,\n                settlementCurrency.symbol,\n                toSmallUnits(collateralAssets, tokenTypeDecimals),\n                tokenPools,\n              )\n              const otherTokenWbtc = collateralValue.sub(amountOutPrice)\n              const actionCurrentMaxValue =\n                maxCollateralTransfer - Number(toLargeUnits(otherTokenWbtc, settlementCurrency.decimals))\n\n              const amountInCurrentMaxValue = getSwapQuote(\n                chainId,\n                settlementCurrency.symbol,\n                record.tokenType,\n                toSmallUnits(\n                  TokenUtils.formatTokenAmount(actionCurrentMaxValue, settlementCurrency.decimals),\n                  settlementCurrency.decimals,\n                ),\n                tokenPools,\n              )\n              // Calculate the maximum operable value for the current cryptocurrency.\n              const maxTransterCurrentToken = toLargeUnits(amountInCurrentMaxValue, tokenTypeDecimals, true) as number\n              // If the calculated maximum value exceeds the asset value, use the asset value.\n              if (maxTransterCurrentToken > collateralAssets) {\n                data[0].transferVal = collateralAssets\n                data[1].transferVal = collateralAssets\n              } else if (maxTransterCurrentToken > 0) {\n                data[0].transferVal = Math.floor(collateralAssets - maxTransterCurrentToken)\n                data[1].transferVal = Math.floor(collateralAssets - maxTransterCurrentToken)\n              } else {\n                data[0].transferVal = collateralAssets\n                data[1].transferVal = collateralAssets\n              }\n            }\n          }\n        } else if (record.accountType === AccountType.Settlement) {\n          if (data[1].accountType === AccountType.MyWallet) {\n            const maxPrepaidInterest =\n              20 * Number(toLargeUnits(estimatedDailyDebt.toNumber(), settlementCurrency.decimals))\n            const maxActionPrepaidInterest = collateralIndex.prepaidInterest - maxPrepaidInterest\n\n            if (maxActionPrepaidInterest > 0) {\n              data[0].transferVal = Number(\n                TokenUtils.formatTokenAmount(maxActionPrepaidInterest, settlementCurrency.decimals),\n              )\n            }\n          }\n          if (data[1].accountType === AccountType.Standard) {\n            const maxPrepaidInterest =\n              20 * Number(toLargeUnits(estimatedDailyDebt.toNumber(), settlementCurrency.decimals))\n            const maxActionPrepaidInterest = collateralIndex.prepaidInterest - maxPrepaidInterest\n            if (maxActionPrepaidInterest > 0) {\n              data[0].transferVal = maxActionPrepaidInterest\n            }\n          }\n        }\n        return data\n      })\n    },\n    [\n      avatarAssetList,\n      chainId,\n      collateralIndex,\n      currentPosition.mintTokenInfo,\n      currentPosition.positionStatus,\n      tokenPools,\n      walletTokenBalance,\n    ],\n  )\n\n  useEffect(() => {\n    setActionData((state) => {\n      return [\n        state[0],\n        {\n          ...state[1],\n          list: accountCategoryList.filter((it) => it.type !== state[0].accountType),\n        },\n      ]\n    })\n  }, [])\n\n  useEffect(() => {\n    if (trading) {\n      setGDisStatus(true)\n      return\n    }\n    const [left] = actionData\n    const { decimals } = left\n    if (!left || !decimals) return\n    let leftBalance = 0\n    const { transferVal } = left\n    const transferAmout = toSmallUnits(\n      TokenUtils.formatTokenAmount(transferVal, commonTokens[valueToKeyMap[left.tokenType]].decimals),\n      commonTokens[valueToKeyMap[left.tokenType]].decimals,\n    )\n    if (transferAmout.isZero()) {\n      setGDisStatus(true)\n      return\n    }\n    if (left.accountType === AccountType.MyWallet) {\n      leftBalance = walletTokenBalance[left.tokenType] || 0\n    }\n    if (left.accountType === AccountType.Settlement || left.accountType === AccountType.Standard) {\n      if (left.accountType === AccountType.Settlement) {\n        // if ()\n        const { interestGuaranteed } = currentPosition.positionStatus\n        if (transferAmout.gt(interestGuaranteed)) {\n          setGDisStatus(true)\n          return\n        }\n      }\n      if (left.accountType === AccountType.Standard) {\n        const val = avatarAssetList[left.tokenType] || 0\n        if (transferVal > val) {\n          setGDisStatus(true)\n          return\n        }\n      }\n      if (newCollateralRatio < 120 || newPrepaidInterestCoverage < 20) {\n        setGDisStatus(true)\n      } else {\n        setGDisStatus(false)\n      }\n      return\n    }\n\n    if (left.transferVal <= 0 || left.transferVal > leftBalance || trading) {\n      setGDisStatus(true)\n    } else {\n      setGDisStatus(false)\n    }\n  }, [\n    actionData,\n    avatarAssetList,\n    currentPosition.positionStatus,\n    newCollateralRatio,\n    newPrepaidInterestCoverage,\n    trading,\n    walletTokenBalance,\n  ])\n\n  return (\n    <Wrapper>\n      <Title>General Transfer</Title>\n      <Accordion id=\"panel15\" expanded={expanded === 'panel15'} onChange={handleChange('panel15')}>\n        <AccordionSummary aria-controls=\"panel1d-content\">\n          <Typography>Method 1. Freestyle Transfer</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          {actionData.map((item, index) => {\n            let avatarAssetBalance = (avatarAssetList && avatarAssetList[item.tokenType]) || 0\n            let walletAssetBalance = (walletTokenBalance && walletTokenBalance[item.tokenType]) || 0\n            if (String(avatarAssetBalance).includes('.')) {\n              avatarAssetBalance = TokenUtils.formatFourDecimals(avatarAssetBalance)\n            }\n\n            if (String(walletAssetBalance).includes('.')) {\n              walletAssetBalance = TokenUtils.formatFourDecimals(walletAssetBalance)\n            }\n\n            return (\n              <div key={item.id}>\n                <MethodsWrap>\n                  <div className=\"balance_info\">\n                    <span className=\"label\">Balance: </span>\n                    {item.accountType === AccountType.Standard && (\n                      <span>\n                        {avatarAssetBalance} {item.tokenType}\n                      </span>\n                    )}\n                    {item.accountType === AccountType.MyWallet && (\n                      <span>\n                        {walletAssetBalance} {item.tokenType}\n                      </span>\n                    )}\n                    {item.accountType === AccountType.Settlement && (\n                      <span>{TokenUtils.formatFourDecimals(collateralIndex.prepaidInterest)} {currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                    )}\n                  </div>\n                  <div className=\"content\">\n                    <Select\n                      options={item.list}\n                      onChange={(val) => {\n                        onChangeAccount(val, item, index)\n                      }}\n                      selectValue={item.accountType}\n                    />\n                    <Select\n                      options={tokenList}\n                      onChange={(val) => {\n                        onChangeToken(val, index)\n                      }}\n                      selectValue={item.tokenType}\n                      selectDisabled={index === 1 ? true : item.tokenSelectDisabled}\n                    />\n                    <Input\n                      value={item.transferVal}\n                      type=\"number\"\n                      onInput={(e) => {\n                        onChangeVal(e, item)\n                      }}\n                      disabled={index === 1}\n                    />\n                  </div>\n\n                  <div hidden={index === 1} className=\"func\">\n                    <span\n                      onClick={() => {\n                        onMax(item)\n                      }}\n                      onKeyUp={() => null}\n                      tabIndex={0}\n                      role=\"button\"\n                    >\n                      Max\n                    </span>\n                  </div>\n                </MethodsWrap>\n\n                {index === 0 ? (\n                  <div style={{ display: 'flex', alignItems: 'center', height: 30, justifyContent: 'center' }}>\n                    <ExchangeArrow\n                      onClick={() => {\n                        setActionData((state) => {\n                          const list1 = state[0]\n                          const list2 = state[1]\n                          const data = state.reverse()\n                          return data.map((it, i) => ({\n                            ...it,\n                            list:\n                              i === 0\n                                ? list1.list\n                                : accountCategoryList.filter((ele) => ele.type !== list2.accountType),\n                            tokenSelectDisabled: i === 0 ? list1.tokenSelectDisabled : list2.tokenSelectDisabled,\n                          }))\n                        })\n                      }}\n                      style={{ fill: 'none', transform: 'rotate(90deg)', cursor: 'pointer', width: 22 }}\n                    />\n                  </div>\n                ) : null}\n              </div>\n            )\n          })}\n          <DataWrapper\n            data={[\n              [DataIndexName.CollateralRatio, collateralIndex.displayRatio, newDisplayCollateralRatio],\n              [\n                DataIndexName.PrepaidInterestCoverage,\n                collateralIndex.displayCoverage,\n                newDisplayPrepaidInterestCoverage,\n              ],\n            ]}\n          />\n          {approveStatus ? (\n            <Approve style={{ boxShadow: 'none' }} disabled={gDisStatus} onClick={onSubmit}>\n              Submit\n            </Approve>\n          ) : (\n            <Approve\n              style={{ boxShadow: 'none' }}\n              disabled={approveBtnStatus}\n              onClick={() => {\n                onApprove((state) => {\n                  setApproveBtnStatus(state)\n                })\n              }}\n            >\n              Approve\n            </Approve>\n          )}\n        </AccordionDetails>\n      </Accordion>\n    </Wrapper>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { MutableRefObject, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useWeb3React } from 'web3-react-core'\nimport { Link, withRouter } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport { Grid } from '@mui/material'\nimport Slide from 'components/Slide'\nimport Select from 'components/Select'\nimport Card from 'components/Card'\nimport { ArrowLine, Fbtc20Icon } from 'components/uikit'\nimport { FlexWrap, ScrollWrapper } from 'components/CommonComponent'\nimport CopyToClipboard from 'components/uikit/components/WalletModal/CopyToClipboard'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport useToast from 'hooks/useToast'\nimport Assets from 'assets'\nimport SubTitle from 'components/SubTitle'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { isSupportedChainId } from 'utils/web3React'\nimport { LiquidationThresholdValue } from '../../../config/constants/thresholdValue'\nimport Title from './Title'\nimport BeforeMintAction from './BeforeMintAction'\nimport WithdrawCollateral from './WithdrawCollateral'\nimport ImproveGuaranteeDays from './ImproveGuaranteeDays'\nimport ImproveCollateralRatio from './ImproveCollateralRatio'\nimport TradingThroughAvatar from './TradingThroughAvatar'\nimport GeneralTransfer from './GeneralTransfer'\nimport usePanel from '../../../hooks/usePanel'\n\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 18px;\n  padding-right: 44px;\n  overflow: auto;\n\n  & > .MuiGrid-root {\n    min-width: 1024px;\n  }\n\n  .account_panel {\n    height: calc(100vh - 189px);\n    padding-bottom: 100px;\n    overflow: auto;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .asset_info {\n    padding: 0;\n    margin-top: 26px;\n  }\n`\nconst CardWrap = styled(Card)`\n  position: relative;\n  padding: 23px 0;\n  display: flex;\n  margin-bottom: 20px;\n\n  .avatar_info {\n    .avatar {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-size: 12px;\n      line-height: 17px;\n      color: #000000;\n\n      & + svg {\n        margin-left: 10px;\n      }\n    }\n  }\n\n  .token_item {\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 0;\n\n    svg {\n      margin-right: 10px;\n\n      & + span {\n        margin-top: 5px;\n      }\n    }\n\n    .balance {\n      font-family: PingFangSC-Regular, sans-serif;\n\n      span:first-of-type {\n        font-size: 14px;\n        line-height: 20px;\n      }\n\n      span:last-of-type {\n        font-size: 12px;\n        line-height: 17px;\n        color: #747879;\n      }\n    }\n  }\n`\nconst TipPanel = styled('div')`\n  width: 50%;\n  padding: 0 30px 0 40px;\n  display: flex;\n  justify-content: space-between;\n\n  font-family: PingFangSC-Semibold, sans-serif;\n\n  > div {\n    width: calc(100% - 50px);\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 0.2px;\n    height: 70%;\n    background-color: #2da3ff;\n  }\n\n  h2 {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-weight: 550;\n    font-size: 1rem;\n    line-height: 22px;\n    color: #000000;\n  }\n\n  .num {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-weight: 550;\n    font-size: 50px;\n    line-height: 1;\n    color: #6ed6f3;\n    display: flex;\n    align-items: flex-end;\n    margin-bottom: 20px;\n    margin-top: 15px;\n    width: 100%;\n\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      display: block;\n      max-width: 80%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    sub {\n      margin-bottom: 5px;\n      font-size: 20px;\n      font-weight: 500;\n    }\n  }\n\n  .tip {\n    font-size: 12px;\n    line-height: 17px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n\n  .num.guarantee {\n    color: #efd71e;\n  }\n`\nconst TipWrap = styled(CardWrap)`\n  padding: 23px 0 !important;\n`\n\nconst CollateralInfoWrap = styled('div')`\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.4);\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  margin-bottom: 20px;\n  .m_title {\n    font-size: 22px;\n    line-height: 31px;\n    font-weight: 500;\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-bottom: 13px;\n  }\n  .list {\n    background: rgba(42, 161, 255, 0.07);\n    border-radius: 8px;\n    padding: 16px 16px 0;\n    margin-bottom: 18px;\n  }\n  .item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    svg {\n      margin-right: 10px;\n    }\n    .item_title {\n      font-size: 18px;\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n      line-height: 25px;\n      display: flex;\n      align-items: center;\n      margin-bottom: 20px;\n      img {\n        width: 24px;\n        margin-right: 10px;\n      }\n    }\n    .icon_symbol {\n      display: flex;\n      align-items: center;\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 500;\n      font-size: 14px;\n    }\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-size: 14px;\n    }\n    &.currency {\n      padding: 22px 0;\n      border-top: 0.5px solid rgba(0, 0, 0, 0.13);\n    }\n    &.item_head {\n      padding-bottom: 14px;\n      span {\n        font-family: PingFangSC-Medium, sans-serif;\n        font-weight: 500;\n        font-size: 12px;\n        line-height: 17px;\n        color: rgba(0, 0, 0, 0.6);\n      }\n    }\n    .balance span {\n      line-height: 20px;\n      &:last-of-type {\n        opacity: 0.5;\n      }\n    }\n  }\n  .avatar .currency {\n    padding: 15px 0;\n  }\n  .avatar_address {\n    display: flex;\n    align-items: center;\n    padding-left: 16px;\n    line-height: 17px;\n    * {\n      font-size: 12px;\n      font-weight: normal !important;\n      color: #000 !important;\n      font-family: PingFangSC-Regular, sans-serif !important;\n    }\n  }\n\n  .asset_list_title {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    font-size: 22px;\n    line-height: 22px;\n    color: #000000;\n    margin-bottom: 22px;\n  }\n  .outstandingDebt {\n    span {\n      font-size: 14px;\n    }\n    div {\n      font-family: PingFangSC-Medium, sans-serif;\n      font-weight: 500;\n      margin-bottom: 5px;\n      svg {\n        margin-right: 10px;\n      }\n    }\n    span:last-of-type {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-weight: 400;\n    }\n  }\n`\nconst getValueColor = (value: number) =>\n  value * 1 >= 400 ? 'rgb(29, 202, 218)' : value * 1 > 200 ? 'rgb(255, 204, 4)' : 'rgb(255, 99, 8)'\n\nfunction Manage() {\n  const oBox: MutableRefObject<any> = React.useRef()\n  const { expanded } = usePanel()\n  const [approveStatus, setApproveStatus] = useState(false)\n\n  const { currentPosition, currentPositionTokenInfo, currentMintToken } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n  const { account, chainId } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  // change manager\n  const onChange = useCallback(\n    (val) => {\n      handleChangeCurrentPosition(val)\n    },\n    [handleChangeCurrentPosition],\n  )\n  const { handleApprove } = useApprove(account, currentPosition?.mintTokenInfo.settlementCurrency.address)\n  const { onCheckApprove } = useCheckApprove()\n  const checkApprove = useCallback(async () => {\n    if (currentPosition && currentPosition.isEnable) {\n      const txInfo = await onCheckApprove(\n        account,\n        currentPosition.mintTokenInfo.settlementCurrency.address,\n        currentPosition.positionAddress,\n      )\n      if (txInfo && txInfo._hex > 0) {\n        setApproveStatus(true)\n      } else {\n        setApproveStatus(false)\n      }\n      return txInfo\n    }\n    return 0\n  }, [account, currentPosition, onCheckApprove])\n\n  const onApprove = useCallback(\n    async (callback?) => {\n      if (currentPosition && currentPosition.isEnable) {\n        try {\n          if (callback) {\n            callback(true)\n          }\n          const info = await handleApprove(currentPosition.positionAddress)\n          if (info.hash) {\n            const result = await info.wait()\n            if (result) {\n              checkApprove().then((approveTransactionInfo) => {\n                if (approveTransactionInfo._hex > 0) {\n                  if (callback) {\n                    callback(false)\n                  }\n                  toastSuccess('Approve Success')\n                } else {\n                  toastError('Fail')\n                }\n              })\n            }\n          }\n        } catch (err) {\n          toastError('Failed', `${err}`)\n        }\n      }\n    },\n    [currentPosition, handleApprove, checkApprove, toastSuccess, toastError],\n  )\n\n  const collateralRatio = useMemo(() => {\n    if (currentPosition && currentPosition.collateralRatio) {\n      if (currentPosition.collateralRatio === Number.POSITIVE_INFINITY) {\n        return '+∞'\n      }\n      return TokenUtils.formatTokenAmount(currentPosition.collateralRatio, 2)\n    }\n    return '0'\n  }, [currentPosition])\n  const prepaidInterestCoverage = useMemo(() => {\n    if (currentPosition && currentPosition.prepaidInterestCoverage) {\n      if (currentPosition.prepaidInterestCoverage === Number.POSITIVE_INFINITY) {\n        return '+∞'\n      }\n      return TokenUtils.formatTokenAmount(currentPosition.prepaidInterestCoverage, 0)\n    }\n    return '0'\n  }, [currentPosition])\n  const prepaidInterest = useMemo(() => {\n    if (currentPosition) {\n      const pi = toLargeUnits(\n        currentPosition.positionStatus.interestGuaranteed\n          .sub(currentPosition.positionStatus.obligation)\n          .sub(currentPosition.positionStatus.epochDebt)\n          .sub(currentPosition.positionStatus.estimatedObligationToday),\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n      return TokenUtils.formatTokenAmount(Number(pi), 4)\n    }\n    return 0\n  }, [currentPosition])\n\n  useEffect(() => {\n    checkApprove()\n    if (expanded && Number(expanded) !== -1) {\n      if (oBox && expanded !== 'panel1' && expanded !== 'panel2') {\n        setTimeout(() => {\n          const panel = document.querySelector(`#${expanded}`)\n\n          if (panel) {\n            panel.scrollIntoView()\n          }\n        }, 500)\n      }\n    }\n  }, [checkApprove, currentPosition, expanded])\n\n  const allowedAssets = useMemo(() => {\n    if (!currentPositionTokenInfo) {\n      return null\n    }\n    const currentTokenPrice = currentPositionTokenInfo.tokenPrice\n    const currentAllowedTokens = currentPositionTokenInfo.allowedTokens\n    const currentAllowedTokenBalance = currentPositionTokenInfo.allowedTokens?.balances\n    const usdt = currentPositionTokenInfo.WBTCToUSD\n    return Object.values(currentAllowedTokens.tokens).map((tokenInfo) => (\n      <div className=\"item currency\" key={tokenInfo.symbol}>\n        <div className=\"icon_symbol\">\n          <Logo\n            token={tokenInfo.logo}\n            symbol={tokenInfo.symbol}\n            imgprops={{\n              style: {\n                marginRight: 10,\n              },\n            }}\n          />\n          {tokenInfo.symbol}\n        </div>\n        <FlexWrap className=\"balance\" style={{ flexDirection: 'column', alignItems: 'flex-end' }}>\n          <span>\n            {(currentAllowedTokenBalance &&\n              toLargeUnits(currentAllowedTokenBalance[tokenInfo.symbol], tokenInfo.decimals)) ||\n              0}\n          </span>\n          <span>\n            ≈{' '}\n            {(currentAllowedTokenBalance &&\n              TokenUtils.formatCurrencyTwoDecimals(\n                (currentAllowedTokenBalance[tokenInfo.symbol].toNumber() *\n                  currentTokenPrice[tokenInfo.symbol]?.price.toNumber() *\n                  usdt) /\n                  10 ** 6,\n              )) ||\n              0}\n          </span>\n        </FlexWrap>\n      </div>\n    ))\n  }, [currentPositionTokenInfo])\n\n  const mintTokens = useMemo(() => {\n    if (isSupportedChainId(chainId)) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      return Object.keys(mintTokenChainConfigs[chainId as SupportedChainId].tokens).map((key)=>{\n        return {\n          token: _tokens[key as MintTokenKey].symbol,\n          address: _tokens[key as MintTokenKey].address,\n          decimals: _tokens[key as MintTokenKey].decimals,\n          icon: ()=> <Logo imgprops={{style: {marginRight: 10}}} token={_tokens[key as MintTokenKey].logo} symbol={_tokens[key as MintTokenKey].symbol} />,\n        }\n      })\n    }\n    return []\n  }, [chainId])\n\n  return (\n    <>\n      <Title style={{ marginBottom: 4 }}>Collateral Management</Title>\n      <SubTitle>\n        Make sure the collateral ratio is higher than the Liquidation Ratio, and the Prepaid Interest Coverage is higher\n        than the Liquidation Threshold.\n      </SubTitle>\n      <Select\n        isGroup={false}\n        options={mintTokens}\n        selectValue={currentMintToken}\n        onChange={onChange}\n      />\n      <Box>\n        {!currentPosition?.isEnable ? (\n          <Link to=\"/collateral\" style={{ color: '#2AA1FF' }}>\n            Please enable the collateral first\n            <ArrowLine />{' '}\n          </Link>\n        ) : (\n          <Grid container spacing={2.5}>\n            <Grid item xs={8}>\n              <ScrollWrapper ref={oBox}>\n                <TipWrap>\n                  <TipPanel>\n                    <div title={`Collateral Ratio: ${collateralRatio}`}>\n                      <h2>Collateral Ratio</h2>\n                      {!currentPosition.collateralRatio ? (\n                        <p className=\"tip\" style={{ lineHeight: '85px' }}>\n                          Add collateral before mint\n                        </p>\n                      ) : (\n                        <p className=\"num\">\n                          {currentPosition.collateralRatio ? (\n                            <>\n                              <span\n                                style={{\n                                  color: getValueColor(currentPosition?.collateralRatio),\n                                }}\n                              >\n                                {collateralRatio}\n                              </span>\n                              {currentPosition?.collateralRatio === Number.POSITIVE_INFINITY ? null : (\n                                <sub\n                                  style={{\n                                    color: getValueColor(currentPosition?.collateralRatio),\n                                  }}\n                                >\n                                  %\n                                </sub>\n                              )}\n                            </>\n                          ) : (\n                            <span\n                              style={{\n                                color: 'rgb(255, 99, 8)',\n                              }}\n                            >\n                              0\n                            </span>\n                          )}\n                        </p>\n                      )}\n                      <p className=\"tip\">Liquidation Ratio：{LiquidationThresholdValue.ratio}%</p>\n                    </div>\n                    <Slide\n                      style={{ height: '100%' }}\n                      value={\n                        currentPosition.isEnable && collateralRatio !== '0'\n                          ? (currentPosition?.collateralRatio - 100) / 5\n                          : 0\n                      }\n                    />\n                  </TipPanel>\n                  <TipPanel>\n                    <div title={`Prepaid Interest Coverage: ${prepaidInterestCoverage} days`}>\n                      <h2>Prepaid Interest Coverage</h2>\n                      {!currentPosition.prepaidInterestCoverage ? (\n                        <p className=\"tip\" style={{ lineHeight: '85px' }}>\n                          Add collateral before mint\n                        </p>\n                      ) : (\n                        <p className=\"num guarantee\">\n                          {currentPosition.prepaidInterestCoverage ? (\n                            <>\n                              <sub\n                                style={{\n                                  color: getValueColor(currentPosition.prepaidInterestCoverage),\n                                }}\n                              >\n                                ≈\n                              </sub>\n                              <span\n                                style={{\n                                  color: getValueColor(currentPosition.prepaidInterestCoverage),\n                                }}\n                              >\n                                {prepaidInterestCoverage}\n                              </span>\n                              {currentPosition.prepaidInterestCoverage === Number.POSITIVE_INFINITY ? null : (\n                                <sub\n                                  style={{\n                                    color: getValueColor(currentPosition.prepaidInterestCoverage),\n                                  }}\n                                >\n                                  days\n                                </sub>\n                              )}\n                            </>\n                          ) : (\n                            <span\n                              style={{\n                                color: 'rgb(255, 99, 8)',\n                              }}\n                            >\n                              0\n                            </span>\n                          )}\n                        </p>\n                      )}\n                      <p className=\"tip\">Liquidation Threshold: {LiquidationThresholdValue.days} days</p>\n                      {/*   <p className='tip'>Min. Mint Guarantee days: {Constants.minMintGDays} days</p>\n                       */}{' '}\n                    </div>\n                    <Slide style={{ height: '100%' }} value={currentPosition.prepaidInterestCoverage / 5} />\n                  </TipPanel>\n                </TipWrap>\n                {/* collateral info */}\n                <BeforeMintAction onApprove={onApprove} approveStatus={approveStatus} />\n                <ImproveGuaranteeDays onApprove={onApprove} approveStatus={approveStatus} />\n                <ImproveCollateralRatio onApprove={onApprove} approveStatus={approveStatus} />\n                <TradingThroughAvatar onApprove={onApprove} approveStatus={approveStatus} />\n                <WithdrawCollateral onApprove={onApprove} approveStatus={approveStatus} />\n                <GeneralTransfer onApprove={onApprove} approveStatus={approveStatus} />\n                {/*\n                <ImproveCollateralRatio/>\n                <WithdrawCollateral managerInfo={managerData} guaranteeBalance={guaranteeBalance}/>\n                */}\n              </ScrollWrapper>\n            </Grid>\n            <Grid item xs={4} className=\"account_panel\">\n              <CollateralInfoWrap>\n                <h3 className=\"m_title\">Total Collateral</h3>\n                <div className=\"list guarantee\">\n                  <div className=\"item\">\n                    <h4 className=\"item_title\">\n                      <img src={Assets.PrepaidInterest} alt=\"\" />\n                      Prepaid Interest\n                    </h4>\n                  </div>\n                  <div className=\"item currency\">\n                    <span className=\"icon_symbol\">\n                      <Logo\n                        token={currentPosition?.mintTokenInfo.settlementCurrency.logo}\n                        symbol={currentPosition?.mintTokenInfo.settlementCurrency.symbol}\n                      />\n                      <span\n                        style={{\n                          marginLeft: '10px',\n                        }}\n                      >\n                        {currentPosition?.mintTokenInfo.settlementCurrency.symbol}\n                      </span>\n                    </span>\n                    <span>{prepaidInterest}</span>\n                  </div>\n                </div>\n                <div className=\"list avatar\" style={{ marginBottom: 12 }}>\n                  <div className=\"item\">\n                    <h4 className=\"item_title\">\n                      <img src={Assets.Collateral} alt=\"\" />\n                      Collateral\n                    </h4>\n                  </div>\n                  <div className=\"item item_head\">\n                    <span>Ticker</span>\n                    <span>Holdings - In Collateral</span>\n                  </div>\n                  {allowedAssets}\n                </div>\n                <div className=\"avatar_address\">\n                  <span>Collateral Account Address: &nbsp;&nbsp;</span>{' '}\n                  <CopyToClipboard toCopy={currentPosition?.positionAddress || ''}>\n                    {currentPosition\n                      ? `${currentPosition?.positionAddress.slice(0, 6)}...${currentPosition?.positionAddress.slice(\n                          -6,\n                        )}`\n                      : ''}\n                  </CopyToClipboard>\n                </div>\n              </CollateralInfoWrap>\n              <CollateralInfoWrap>\n                <h3 className=\"asset_list_title\">My Outstanding Debt</h3>\n                <FlexWrap className=\"outstandingDebt\" style={{ alignItems: 'center', justifyContent: 'space-between' }}>\n                  <FlexWrap style={{ alignItems: 'center' }}>\n                    <Fbtc20Icon className=\"icon\" />\n                    {currentPosition?.mintTokenInfo.symbol}\n                  </FlexWrap>\n                  <span>\n                    {TokenUtils.formatFourDecimals(\n                      Number(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)),\n                    )}\n                  </span>\n                </FlexWrap>\n              </CollateralInfoWrap>\n              <CollateralInfoWrap style={{ padding: 30 }}>\n                <img src={Assets.CollateralManage} style={{ width: '100%' }} alt=\"\" />\n              </CollateralInfoWrap>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default withRouter(Manage)\n","import React from 'react';\nimport Manage from \"./components/manage\";\n\nfunction ManagerPage() {\n  return (\n    <Manage/>\n  );\n}\n\nexport default ManagerPage;\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport MuiAccordionSummary, { AccordionSummaryProps } from '@mui/material/AccordionSummary'\nimport MuiAccordionDetails from '@mui/material/AccordionDetails'\nimport Card from 'components/Card'\nimport AddSharpIcon from '@mui/icons-material/AddSharp'\nimport { Button as ButtonStyled, Button } from 'components/uikit'\n\nexport const Wrapper = styled(Card)`\n  margin-bottom: 20px;\n  padding-bottom: 0 !important;\n`\n\nexport const Title = styled('h3')`\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-style: normal;\n  font-weight: 550;\n  font-size: 22px;\n  line-height: 31px;\n  color: #000000;\n  margin-bottom: 10px;\n`\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(() => ({\n  borderBottom: '.2px solid #a5a5a5',\n  background: 'unset',\n  boxShadow: 'none',\n  '&:last-child': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n  '.MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(45deg)',\n  },\n}))\n\nexport const AccordionSummary = styled((props: AccordionSummaryProps) => (\n  <MuiAccordionSummary expandIcon={<AddSharpIcon style={{ color: '#2AA1FF' }} />} {...props} />\n))(() => ({\n  padding: 0,\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(45deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    margin: '20px 0',\n    p: {\n      color: '#000',\n      fontSize: '1rem',\n      fontFamily: 'PingFangSC-Semibold, sans-serif',\n      fontWeight: 600,\n      lineHeight: '22px',\n    },\n  },\n}))\n\nexport const AccordionDetails = styled(MuiAccordionDetails)(() => ({\n  padding: '0 0 30px 0',\n  transition: '.3s',\n  // borderTop: '1px solid rgba(0, 0, 0, .125)',\n}))\n\nexport const SelectWrap = styled('div')`\n  display: flex;\n  justify-content: space-between;\n`\nexport const Approve = styled(Button)`\n  display: block !important;\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px !important;\n  color: #000;\n  width: 30% !important;\n  margin: 0 auto !important;\n  box-shadow: none !important;\n`\nexport const ActionBtn = styled(Button)`\n  display: block !important;\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%);\n  border-radius: 20px !important;\n  color: #000;\n  //width: 30% !important;\n  margin: 0 auto !important;\n  box-shadow: none !important;\n`\nexport const DataWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 0;\n\n  div {\n    display: flex;\n    margin-bottom: 10px;\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.5);\n\n    p + p {\n      margin-left: 20px;\n    }\n  }\n\n  .days {\n    margin: 0;\n  }\n`\n\nexport const GroupWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% / 2 - 25px);\n\n  p {\n    height: 28px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 15px;\n    box-sizing: border-box;\n\n    span {\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n`\n\nexport const IconWrap = styled('strong')`\n  font-family: PingFangSC-Regular, sans-serif;\n  font-weight: 400;\n  display: block;\n  width: 16px;\n  height: 16px;\n  font-size: 12px;\n  background: #c4c4c4;\n  line-height: 16px;\n  text-align: center;\n  border-radius: 50%;\n  flex: none;\n`\nexport const TipWrap = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  line-height: 20px;\n  color: rgba(0, 0, 0, 0.5);\n  background: #f1f1f1;\n  border-radius: 8px;\n  padding: 14px 80px 13px 21px;\n  margin-bottom: 20px;\n\n  strong {\n    margin-right: 16px;\n  }\n  * {\n    font-family: PingFangSC-Regular, sans-serif;\n  }\n`\n\nexport const TextIcon = styled('span')`\n  font-family: PingFangSC-Regular, sans-serif;\n  font-size: 12px;\n  line-height: 17px;\n  color: rgba(0, 0, 0, 0.5);\n`\n\nexport const FlexWrap = styled('div')`\n  display: flex;\n`\nexport const icon = (Child, name) => {\n  return function Comp(props) {\n    return (\n      <>\n        <Child {...props}>{name}</Child>\n      </>\n    )\n  }\n}\n\nexport const AlertButton = styled(ButtonStyled)`\n  box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.043) !important;\n  border-radius: 14px !important;\n  background: linear-gradient(270deg, #7ae9f1 0%, #61c3f7 100%) !important;\n  border-radius: 14px !important;\n  font-size: 14px !important;\n  height: 32px !important;\n  line-height: 32px !important;\n  color: #000 !important;\n  font-weight: normal !important;\n`\n\nexport const BTitle = styled('h1')`\n  font-family: 'Heebo Medium';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 47px;\n  margin-bottom: 14px;\n  color: #000000;\n`\n\nexport const ScrollWrapper = styled('div')`\n  height: calc(100vh - 189px);\n  padding-bottom: 100px;\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react'\n\nexport default function Logo(props: { token: string; symbol: string; imgprops?: React.ImgHTMLAttributes<HTMLImageElement> }) {\n  return <img {...props.imgprops} src={props.token} alt={props.symbol}  />\n}\n","import React from 'react'\nimport { ChainTxUrl } from \"config/constants/chains\"\nimport { AlertButton, FlexWrap } from \"./CommonComponent\"\n\n// 定义用于显示通知的组件\nexport const TransactionSubmittedInfo: React.FC<{ txHash: string, content: string }> = ({ txHash, content }) => (\n  <div>\n    <p style={{ marginBottom: 24 }}>{content}</p>\n    <FlexWrap style={{ flexDirection: 'row-reverse' }}>\n      <AlertButton\n        onClick={() => {\n          window.open(`${ChainTxUrl}/${txHash}`)\n        }}\n      >\n        View on Explorer\n      </AlertButton>\n    </FlexWrap>\n  </div>\n)\n\nexport const TransactionSuccessInfo: React.FC<{ txHash: string, content: string }> = ({ txHash, content }) => (\n  <div>\n    <p style={{ marginBottom: 24 }}>{content}</p>\n    <FlexWrap style={{ flexDirection: 'row-reverse' }}>\n      <AlertButton\n        onClick={() => {\n          window.open(`${ChainTxUrl}/${txHash}`)\n        }}\n      >\n        View on Explorer\n      </AlertButton>\n    </FlexWrap>\n  </div>\n)","import React from \"react\";\nimport {useAppDispatch, useAppSelector} from \"../state\";\nimport {toggleStatus} from \"../state/CollateralManage/actions\";\n\nexport default function usePanel(){\n  const expanded = useAppSelector((state)=> state.collateralManage.expanded)\n  const dispatch = useAppDispatch()\n  const handleChange = (panel: string):(event: React.SyntheticEvent, newExpanded: boolean)=>void => {\n    return (event: React.SyntheticEvent, newExpanded: boolean) => {\n      dispatch(toggleStatus({expanded:newExpanded ? panel : '-1'}))\n    }\n  }\n  const setExpanded = (panel?: string) => {\n    dispatch(toggleStatus({expanded:panel || '-1'}))\n  }\n  return {expanded,handleChange,setExpanded}\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nconst Wrapper = styled('div')`\n  background: #def1ff;\n  border-radius: 14px;\n  padding: 13px 22px;\n  margin: 20px 0;\n\n  table {\n    width: 100%;\n  }\n\n  td {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-weight: 400;\n    font-size: 12px;\n    padding: 5px 0;\n  }\n\n  .label {\n    text-align: left;\n    width: 30%;\n  }\n\n  .from,\n  .to {\n    width: 35%;\n    line-height: 17px;\n    text-align: right;\n  }\n\n  .to {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    color: #000;\n  }\n\n  .borderTop {\n    border-top: 0.5px solid rgba(0, 0, 0, 0.12);\n  }\n`\n\n/*\n\nconst data = [\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n]\n\n*/\n\nfunction DataWrapper(props) {\n  const { data } = props\n  return (\n    <Wrapper>\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"from\" colSpan={2}>\n              From\n            </td>\n            <td className=\"to\">To</td>\n          </tr>\n          {data.map((item) => (\n            <tr className={item[3] ? 'borderTop' : ''} key={item[0]}>\n              <td className=\"label\">{item[0]}</td>\n              <td className=\"from\">{item[1]}</td>\n              <td className=\"to\">{item[2]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Wrapper>\n  )\n}\n\nexport default DataWrapper\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { PoolProps } from 'config/constants/types'\nimport { TokenUtils } from 'utils/transformHelper'\nimport Select from '../Select'\nimport { ExchangeArrow, RoundArrow } from '../uikit'\nimport { FlexWrap } from '../CommonComponent'\n\nconst SelectWrap = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: static !important;\n`\n\nconst GroupWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% / 2 - 25px);\n\n  p {\n    height: 28px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 15px;\n    box-sizing: border-box;\n\n    span {\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  .maxBtn {\n    height: 21px;\n    align-items: flex-end;\n  }\n`\n\nexport const IconWrap = styled('strong')`\n  display: block;\n  width: 20px;\n  height: 20px;\n  background: #c4c4c4;\n  line-height: 20px;\n  text-align: center;\n  border-radius: 50%;\n`\n\nexport interface MethodsProps {\n  options: PoolProps[] // selectIcon\n  selectValue: number // current selected\n  onMax?: (arg1: PoolProps) => void // to max action\n  selectedSymbol: string // selected symbol\n  SelectIcon: React.FC // leftTop icon\n  RightIcon: React.FC // right icon\n  leftInputValue?: number | null // left input value\n  rightInputValue?: number // right input value\n  rightBalance: number // right balance\n  rightSymbol: string // right symbol\n  rightOptions: PoolProps[] // options list\n  selectInput?: (arg1: React.SyntheticEvent) => void\n  leftBalance?: any\n}\n\nexport default function Index(props) {\n  const {\n    options,\n    leftBalance,\n    isExchange,\n    onExchange,\n    onMax,\n    selectInput,\n    rightSelectInput,\n    SelectIcon,\n    RightIcon,\n    leftInputValue,\n    rightInputValue,\n    rightBalance,\n    rightDisableStatus,\n    leftChange,\n    rightChange,\n    leftDisableStatus = [false, false],\n    leftSelectValue,\n    rightSelectValue,\n    rightOptions,\n    leftSymbol,\n    rightSymbol,\n    rightNumberIsShow = true,\n    leftDesc,\n    rightDesc,\n  } = props\n  // rightDisableStatus[1] true selectDisabled\n  // rightDisableStatus[2] true inputDisabled\n\n  const [currentSelected, setVal] = useState(options && options.length ? options[0] : {})\n  const [rightList, setRightList] = useState(options && options.length ? options[0].rightOptionList : [])\n  const [rightVal, setRightVal] = useState(rightList ? rightList[0] : {})\n\n\n  useEffect(() => {\n    if (options && options.length && leftSelectValue && rightSelectValue) {\n      setVal(options.filter((it) => it.token === leftSelectValue)[0] || options[0])\n      setRightList(options[0].rightOptionList)\n      setRightVal(options[0].rightOptionList.filter((it) => it.token === rightSelectValue)[0] || options[0].rightOptionList[0])\n    }\n  }, [leftSelectValue, options, rightSelectValue])\n\n  const displayValues = useMemo(() => {\n    const _rightBalance = rightBalance || rightVal && rightVal.balance || 0;\n    const _leftBalance = leftBalance || currentSelected.balance || 0;\n    return {\n      right: {\n        orignalBalance: _rightBalance,\n        balance: TokenUtils.formatFourDecimals(_rightBalance),\n        symbol: rightSymbol || (rightVal && Object.keys(rightVal) ? rightVal.token : 'WBTC'),\n      },\n      left: {\n        orignalBalance: _leftBalance,\n        balance: TokenUtils.formatFourDecimals(_leftBalance),\n        symbol: leftSymbol || currentSelected.token || 'WBTC',\n      },\n    }\n  }, [currentSelected, leftBalance, leftSymbol, rightBalance, rightSymbol, rightVal])\n  return (\n    <>\n      <SelectWrap>\n        <GroupWrap>\n          <p title={`${displayValues.left.symbol} Balance: ${displayValues.left.orignalBalance}`}>\n            <SelectIcon />\n            <span className=\"balance\">\n              {displayValues.left.balance} {displayValues.left.symbol}\n            </span>\n          </p>\n          <Select\n            key={1}\n            selectValue={leftSelectValue || currentSelected.token}\n            allDisabled={!leftDisableStatus || (leftDisableStatus[0] && leftDisableStatus[1])}\n            inputDisabled={!leftDisableStatus || leftDisableStatus[1]}\n            selectDisabled={!leftDisableStatus || leftDisableStatus[0]}\n            onChange={(val) => {\n              const selected = options.filter((it) => it.token === val)[0]\n              setRightList(selected.rightOptionList)\n              setRightVal(selected.rightOptionList[0])\n              setVal(selected)\n              if (leftChange) {\n                leftChange(selected)\n              }\n            }}\n            selectInput={selectInput}\n            actionValue={leftInputValue}\n            options={options}\n            groupStyle={{ width: '100%' }}\n            isGroup\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {leftDesc && leftDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\">\n              <span\n                onClick={() => {\n                  if (onMax) {\n                    onMax(currentSelected)\n                  }\n                }}\n                onKeyUp={() => null}\n                tabIndex={0}\n                role=\"button\"\n                style={{ cursor: 'pointer', color: '#6ED6F3', fontSize: '0.75rem', userSelect: 'none' }}\n              >\n                Max\n              </span>\n            </p>\n          </FlexWrap>\n        </GroupWrap>\n        {isExchange ? (\n          <ExchangeArrow onClick={onExchange} style={{ fill: 'none', cursor: 'pointer', width: 22, marginTop: 8 }} />\n        ) : (\n          <RoundArrow style={{ fill: 'none', width: 22, marginTop: 8 }} />\n        )}\n\n        <GroupWrap>\n          <p title={rightNumberIsShow ? `${displayValues.right.symbol} Balance: ${displayValues.right.orignalBalance}` : ''}>\n            <RightIcon />\n            {rightNumberIsShow ? (\n              <span className=\"balance\">\n                {displayValues.right.balance}{\" \"}\n                {displayValues.right.symbol}\n              </span>\n            ) : null}\n          </p>\n          <Select\n            key={2}\n            selectValue={rightSelectValue || (rightVal ? rightVal.token : 'WBTC')}\n            options={rightOptions || rightList}\n            actionValue={rightInputValue}\n            groupStyle={{ width: '100%' }}\n            isGroup\n            allDisabled={!rightDisableStatus || (rightDisableStatus[0] && rightDisableStatus[1])}\n            inputDisabled={!rightDisableStatus || rightDisableStatus[1]}\n            selectDisabled={!rightDisableStatus || rightDisableStatus[0]}\n            selectInput={rightSelectInput}\n            onChange={(val) => {\n              if (currentSelected) {\n                const selected = currentSelected.rightOptionList.filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              } else {\n                const selected = options[0].filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              }\n            }}\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {rightDesc && rightDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\" />\n          </FlexWrap>\n        </GroupWrap>\n      </SelectWrap>\n    </>\n  )\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","export const MintThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n\nexport const LiquidationThresholdValue = {\n  days: 10,\n  ratio: 110,\n}\n\nexport const ShortThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n","import {useEffect, useState} from \"react\";\nimport {getContract} from \"utils/web3React\";\nimport PositionABI from 'config/abi/Position.json';\nimport {useAppSelector} from \"../state\";\n\nexport default function usePosContract(active,signer) {\n  const [contract,setContract] = useState(null);\n  const currentCpt = useAppSelector(state=> state.collateralManage.currentCPT)\n\n  useEffect(()=>{\n    if (active && signer && currentCpt && Number(currentCpt.position)) {\n      const _contract = getContract(signer, PositionABI, currentCpt.position);\n      setContract(_contract)\n    }\n  }, [active, currentCpt, signer])\n\n  return contract\n}\n","import { styled } from '@mui/material/styles'\n\nconst Title = styled('h1')`\n  font-family: 'Heebo Medium';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 47px;\n  margin-bottom: 14px;\n  color: #000000;\n`\n\nexport default Title\n"],"sourceRoot":""}