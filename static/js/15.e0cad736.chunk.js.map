{"version":3,"sources":["views/MyPage/components/Action.tsx","views/MyPage/components/Title.tsx","views/MyPage/components/icon/History.tsx","views/MyPage/components/HoldingsWallet.tsx","views/MyPage/components/OutstandingDebt.tsx","views/MyPage/index.tsx","hooks/useHashPowerToken.ts","components/Table/icon/SortIcon.tsx","components/Table/Table.tsx","state/Short/hooks.ts","hooks/useApprove.ts","utils/formatTheValue.ts","components/Tabs/index.tsx","utils/addAsset.ts"],"names":["ActionButton","styled","Button","_templateObject","_taggedTemplateLiteral","claimHelper","ButtonStyled","_templateObject2","contracts","Action","_ref","row","address","rewardsData","signer","useSystemParams","claimStatus","setClaimStatus","useState","setRefresh","useHashPowerToken","connector","active","chainId","account","useWeb3React","toastInfo","toastSuccess","toastError","useToast","symbol","walletTokenBalance","isAdding","setIsAdding","currentPosition","usePositionInfo","addToMetaMask","useCallback","async","addAsset","tokenSymbol","useEffect","walletRewards","epochReward","isZero","avatarRewards","claimAll","claimContract","getContract","abi","params","push","mintTokenInfo","isEnable","positionAddress","txInfo","multipleClaim","toLargeUnits","settlementCurrency","claimRewardsList","window","localStorage","getItem","JSON","parse","_data","id","uuid","txHash","hash","date","Date","getTime","type","length","setItem","stringify","token","ToastTitle","submited","_jsx","TransactionSubmittedInfo","content","result","wait","success","state","e","failed","reason","children","_jsxs","Stack","direction","spacing","disabled","onClick","Title","TitleWrap","props","HistoryIcon","Svg","viewBox","fill","d","columns","numeric","disablePadding","isSort","label","HoldingsWallet","positionAll","tokenPrice","allowedTokens","dataSource","useMemo","Object","values","map","item","markPrice","_avatarAssetList","keys","valueToKeyMap","reduce","acc","key","_tokenPrice$item$posi","price","decimals","balances","tokens","claimableWallet","claimableAvatar","logo","displayMarkPrice","concat","TokenUtils","formatFourDecimals","walletBalance","Number","avatarBalance","displayClaimableWallet","displayClaimableAvatar","Card","style","marginBottom","Link","to","Table","pagination","isMyPage","index","labelId","_Fragment","StyledTableCell","paddingLeft","component","scope","src","display","marginRight","float","width","height","alt","OutstandingDebt","setActiveTab","setActionInfo","setActiveAmount","clearActive","useShortActiveAction","clearAllPendingAction","useShortPendingAction","currentMintToken","handleChangeCurrentPosition","usePositionAction","prepaidInterestCoverage","collateralRatio","interestGuaranteed","obligation","epochDebt","estimatedObligationToday","positionStatus","prepaidInterest","computedPI","totalAssetsValue","computedTC","collateralValue","displayTotalAssetsValue","displayCoverage","POSITIVE_INFINITY","Math","floor","displayRatio","formatTokenAmount","outstandingDebt","balance","color","fontSize","fontFamily","tokenType","TokenType","NEUTRALIZE","Wrapper","Box","CommonCard","_templateObject3","SubTitle","_templateObject4","ClaimButton","_templateObject5","getEstimatedDailyReward","lastEpochReward","uniswapV2Multicall","minerInterface","ethers","utils","Interface","MinerABI","blockUpdaterInterface","BlockUpdaterABI","MyPage","prevEpoch","useEpoch","walletTotal","setWalletTotal","avatarTotal","setAvatarTotal","dailyInterestRewards","setDailyInterestRewards","dailyObligation","setDailyObligation","setRewardsData","blastSepoliaMintTokens","curr","constants","Zero","walletEstimateDailyReward","avatarEstimateDailyReward","allRewards","setAllRewards","login","logout","useAuth","onPresentConnectModal","useWalletModal","isLogin","isSupportedChainId","console","log","getPendingReward","_tokens","mintTokenChainConfigs","multicall","Multicall","prototype","hasOwnProperty","call","tokenInfo","positionInfo","collateralBalance","tokenBalances","tokenRewards","walletHasRweards","positionHasRweards","holderInfoMappingCalls","target","callData","encodeFunctionData","functionSignature","addAbi","blockUpdater","returnData","holderInfoMapping","aggregate","pendingRewardCalls","holderInfos","toSmallUnits","String","holder","pendingReward","reward","forEach","_walletTotal","_avatarTotal","_dailyInterestRewards","_dailyObligation","_rewardsAll","_prices$USDT","prices","avatarAssetList","WBTCToUSD","USDT","toNumber","currentWBTCPrice","lpAllRewards","rewardsTransfromToUsdt","rewards","usdt","lptoken","totalRwardsWbtc","totalRwardsUsdt","totalUSDT","formatCurrencyTwoDecimals","rewardPannel","Grid","container","lineHeight","xs","toFixed","dir","BTitle","formatNumberWithUnits","paddingTop","paddingBottom","Divider","margin","className","epoch","includes","replace","Tabs","tabsStyle","minHeight","tabStyle","tab","React","memo","hashPowerToken","useContext","HashPowerTokenContext","undefined","Error","svg","SortIcon","order","xmlns","TableCell","tableCellClasses","head","border","body","borderBottom","StyledTableRow","TableRow","cursor","BoxWrapper","descendingComparator","a","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableHead","onRequestSort","TableHead","headCell","sortDirection","TableSortLabel","property","event","IconComponent","marginLeft","EnhancedTable","rowClick","pages","selectKey","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleClick","dataSourceDom","hover","role","tabIndex","slice","textAlign","colSpan","rowSpan","TableContainer","sx","minWidth","handleRequestSort","TableBody","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onChangePage","onRowsPerPageChange","parseInt","value","useShortActiveTokenApprove","activeInfo","useAppSelector","short","onCheckApprove","useCheckApprove","handleApprove","useApprove","chainConfigs","approveStatus","setApproveStatus","checkApproveLoading","setCheckApproveLoading","then","res","_hex","catch","finally","onApprove","error","dispatch","useAppDispatch","activeAmount","activeIndex","pendingActionList","data","arguments","updateActionInfo","_index","findIndex","updateActiveActionIndex","updateActiveTab","setActionIndex","amount","updateActiveAmount","_activeInfo","onChangeCollateralIndex","ratio","coverage","updateShortRateInfo","rateInfo","rate","pendingActions","_pendingActions","Map","addPendingAction","_actions","get","set","ActionType","ADD","setShortPendingAction","actions","deletePendingAction","_nextList","filter","updatePendingAction","splice","updateNeutralizePendingAction","neutralizeType","deleteNeutralizePendingAction","pendingTokenTypes","_map","i","Array","from","flat","tokenAmount","_obg","SUPPLY","WithDraw","shortAmount","_amount","SHORT","neutralizeAmount","supplyAllAmount","supplyAmount","items","useShortInfo","activeTab","_ref2","spender","contract","ERC20","allowance","owner","library","getSigner","approve","MaxUint256","val","resVal","formatSnNumber","number","isNaN","toString","toLocaleString","rex","test","numArr","match","n","substr","mark","indexOf","formatWBTC","BigNumber","pow","WBTC","formatNumber","decimal","v","str","AntTabs","TabIndicatorProps","justifyContent","backgroundColor","maxWidth","borderRadius","background","AntTab","Tab","disableRipple","theme","textTransform","breakpoints","up","fontWeight","opacity","typography","fontWeightMedium","withRouter","defaultTabsValue","history","setValue","onChange","handleChange","newValue","it","provider","getProvider","request","method","options"],"mappings":"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","file":"static/js/15.e0cad736.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Button, Stack } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport uuid from 'uuid/dist/v4'\nimport { Button as ButtonStyled } from 'components/uikit/components/Button'\nimport { useWeb3React } from 'web3-react-core'\nimport { toLargeUnits } from 'utils/transformHelper'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport addAsset from 'utils/addAsset'\nimport { getContract } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useSystemParams from 'hooks/useSystemParams'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport contracts from 'config/constants/contracts'\n\nconst ActionButton = styled(Button)`\n  text-transform: none;\n  cursor: pointer;\n  font-family: PingFangSC-Regular, sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  color: #2aa1ff;\n  padding: 0;\n`\nexport const AlertButton = styled(ButtonStyled)`\n  box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.043);\n  border-radius: 14px;\n  background: linear-gradient(270deg, #7ae9f1 0%, #61c3f7 100%);\n  border-radius: 14px;\n  font-size: 14px;\n  height: 32px;\n  line-height: 32px;\n  color: #000;\n  font-weight: normal;\n`\n\nconst { claimHelper } = contracts\nfunction Action({ row, address, rewardsData }) {\n  const { signer } = useSystemParams()\n  const [claimStatus, setClaimStatus] = useState(false)\n  const { setRefresh } = useHashPowerToken()\n  const { connector, active, chainId, account } = useWeb3React()\n  const { toastInfo, toastSuccess, toastError } = useToast()\n  const { symbol } = row\n  const { walletTokenBalance } = useHashPowerToken()\n  const [isAdding, setIsAdding] = useState(false)\n  const { currentPosition } = usePositionInfo()\n\n  const addToMetaMask = useCallback(async () => {\n    if (active && connector && symbol) {\n      setIsAdding(true)\n      await addAsset({ connector, tokenSymbol: symbol, chainId })\n      setIsAdding(false)\n    }\n  }, [connector, active, chainId, symbol])\n\n  useEffect(() => {\n    if (!rewardsData) {\n      return\n    }\n    if (\n      rewardsData.walletRewards.epochReward.isZero() &&\n      rewardsData.avatarRewards.epochReward.isZero()\n    ) {\n      setClaimStatus(true)\n    }\n  }, [rewardsData, row, walletTokenBalance])\n\n  const claimAll = useCallback(async () => {\n    if (signer) {\n      const claimContract = getContract(signer, claimHelper.abi, claimHelper.address[chainId])\n      if (claimContract) {\n        try {\n          const params = []\n          params.push([row.mintTokenInfo.address, account])\n\n          if (row.isEnable) {\n            params.push([row.mintTokenInfo.address, row.positionAddress])\n          }\n          setClaimStatus(true)\n          const txInfo = await claimContract.multipleClaim(params)\n          const avatarRewards = rewardsData.avatarRewards[0] ? toLargeUnits(rewardsData.avatarRewards[0], currentPosition.mintTokenInfo.settlementCurrency.symbol) : 0\n          const walletRewards = rewardsData.walletRewards[0] ? toLargeUnits(rewardsData.walletRewards[0], currentPosition.mintTokenInfo.settlementCurrency.symbol) : 0\n          if (txInfo) {\n            let claimRewardsList = window.localStorage.getItem('claimRewardsList') as (string | any[])\n            if (claimRewardsList) {\n              claimRewardsList = JSON.parse(claimRewardsList as string) as any[]\n              const _data = [\n                ...claimRewardsList,\n                {\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.symbol,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'My Wallet',\n                },\n              ]\n              if (params.length > 1) {\n                _data.push({\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.symbol,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'Collateral',\n                })\n              }\n              window.localStorage.setItem('claimRewardsList', JSON.stringify(_data))\n            } else {\n              const _data = [\n                {\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.symbol || row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'My Wallet',\n                },\n              ]\n              if (params.length > 1) {\n                _data.push({\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.symbol || row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'Collateral',\n                })\n              }\n              window.localStorage.setItem('claimRewardsList', JSON.stringify(_data))\n            }\n\n            toastInfo(ToastTitle.submited, <TransactionSubmittedInfo txHash={txInfo.hash} content='Waiting for confirmation' />)\n            const result = await txInfo.wait()\n            toastSuccess(ToastTitle.success, <TransactionSubmittedInfo txHash={txInfo.hash} content='Transaction has been confirmed' />)\n            setRefresh((state) => !state)\n\n            if (result) {\n              setClaimStatus(false)\n            }\n          }\n        } catch (e: any) {\n          setClaimStatus(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    }\n  }, [account, chainId, currentPosition.mintTokenInfo.settlementCurrency.symbol, rewardsData.avatarRewards, rewardsData.walletRewards, row.isEnable, row.mintTokenInfo.address, row.positionAddress, row.symbol, row.token, setRefresh, signer, toastError, toastInfo, toastSuccess])\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={2}>\n        <ActionButton disabled={claimStatus} onClick={claimAll}>\n          Claim Rewards\n        </ActionButton>\n        {/* <ActionButton\n          onClick={() => {\n            window.open(\n              `https://app.uniswap.org/#/swap?inputCurrency=${tokens.WBTC.address[chainId]}&outputCurrency=${row.address[chainId]}&chain=${SupportedChainId[chainId]}`,\n            )\n          }}\n        >\n          Uniswap Trade\n        </ActionButton> */}\n        <ActionButton disabled={isAdding} onClick={addToMetaMask}>\n          Add to Metamask\n        </ActionButton>\n      </Stack>\n    </div>\n  )\n}\n\nexport default Action\n","import React from 'react';\nimport {styled} from \"@mui/material/styles\";\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  h3 {\n    font-family: 'Heebo Medium';\n    font-weight: 500;\n    font-size: 22px;\n    line-height: 32px;\n    color: #000000;\n    margin-bottom: 20px;\n  }\n  a {\n    display: flex;\n    align-items: center;\n    svg{\n      width: 13px;\n      height: 13px;\n      margin-right: 10px;\n    }\n    \n    font-family: 'PingFang SC';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.02em;\n    color: #2AA1FF;\n  }\n\n`\n\nfunction TitleWrap(props) {\n  const {children} = props;\n  return (\n    <Title {...props}>{children}</Title>\n  );\n}\n\nexport default TitleWrap;\n","import React from 'react';\nimport {Svg} from \"components/uikit\";\n\nfunction HistoryIcon(props) {\n  return (\n    <Svg viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n        <path d=\"M13.327 4.31099C14.812 7.49536 13.4342 11.2808 10.2496 12.7657C9.08552 13.3087 7.78443 13.4867 6.51733 13.2763C5.25023 13.066 4.07644 12.4771 3.15028 11.5872C3.03172 11.4696 2.96415 11.31 2.96216 11.143C2.96016 10.976 3.02389 10.815 3.1396 10.6945C3.25531 10.5741 3.41372 10.504 3.58067 10.4993C3.74761 10.4946 3.9097 10.5558 4.03197 10.6695C4.77291 11.3815 5.71197 11.8526 6.72567 12.0209C7.73938 12.1892 8.78028 12.0467 9.71151 11.6123C12.2592 10.4245 13.3614 7.3964 12.1736 4.84872C10.9855 2.30104 7.95738 1.19917 5.40938 2.38695C4.23441 2.93388 3.31272 3.90895 2.83274 5.11281L3.69501 5.18536C3.7507 5.18996 3.80419 5.20915 3.85011 5.24099C3.89603 5.27283 3.93275 5.3162 3.95659 5.36674C3.98042 5.41728 3.99053 5.4732 3.98589 5.52889C3.98124 5.58457 3.96202 5.63805 3.93015 5.68395L2.23678 8.12122C2.17383 8.21198 2.08823 8.28469 1.98849 8.33213C1.88874 8.37958 1.77832 8.4001 1.66819 8.39168C1.56008 8.38327 1.45661 8.34416 1.36997 8.27894C1.28334 8.21372 1.21713 8.12511 1.17915 8.02354L0.176556 5.34604C0.157686 5.29578 0.151838 5.24157 0.159556 5.18844C0.167275 5.13532 0.18831 5.08501 0.220702 5.0422C0.253094 4.99939 0.295791 4.96547 0.344818 4.94361C0.393845 4.92174 0.447608 4.91263 0.501102 4.91713L1.51928 5.00272C1.79126 4.17894 2.229 3.41955 2.80554 2.77133C3.38208 2.1231 4.08522 1.59976 4.87165 1.23354C8.05665 -0.251735 11.8421 1.12599 13.327 4.31068V4.31099ZM7.24274 3.18145C7.40323 3.18148 7.55779 3.24215 7.67544 3.3513C7.79309 3.46046 7.86516 3.61004 7.87719 3.77008L7.8791 3.81781V6.94713L9.78597 8.03818C9.92495 8.11771 10.0288 8.24673 10.0769 8.39947C10.125 8.55222 10.1137 8.71747 10.0453 8.86227L10.0224 8.90681C9.94279 9.04574 9.81375 9.14956 9.66101 9.19756C9.50827 9.24556 9.34304 9.23423 9.19829 9.16581L9.15374 9.1429L7.08683 7.96054C6.95022 7.88242 6.83504 7.77173 6.75155 7.63833C6.66806 7.50494 6.61884 7.35297 6.60828 7.19595L6.60638 7.13199V3.81781C6.60638 3.64904 6.67342 3.48718 6.79276 3.36783C6.9121 3.24849 7.07397 3.18145 7.24274 3.18145V3.18145Z\" fill=\"#2AA1FF\"/>\n    </Svg>\n  );\n}\n\nexport default HistoryIcon;\n","import React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'components/Card'\nimport { useWeb3React } from 'web3-react-core'\nimport Table, { StyledTableCell } from 'components/Table'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport Action from './Action'\nimport Title from './Title'\nimport HistoryIcon from './icon/History'\nimport { RewardData } from '../type'\n\nconst columns = [\n  {\n    id: 'symbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'markPrice',\n    numeric: true,\n    disablePadding: true,\n    isSort: true,\n    label: 'Mark Price',\n  },\n  {\n    id: 'walletBalance',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'In Wallet',\n  },\n  {\n    id: 'avatarBalance',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'In Collateral',\n  },\n  {\n    id: 'claimableWallet',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimable - In Wallet',\n  },\n  {\n    id: 'claimableAvatar',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimable - In Collateral',\n  },\n  {\n    id: 'action',\n    numeric: false,\n    disablePadding: false,\n    isSort: false,\n    label: 'Action',\n  },\n]\n/*\n * will\n * add filter\n *\n *\n * */\nfunction HoldingsWallet({ rewardsData }: {\n  rewardsData: RewardData\n}) {\n  const { walletTokenBalance } = useHashPowerToken()\n  const { account } = useWeb3React()\n  const { positionAll, tokenPrice, allowedTokens } = usePositionInfo()\n\n  const dataSource = useMemo(() => {\n    const list = Object.values(positionAll)\n\n    return list.map((item) => {\n      let markPrice = 0\n      const { settlementCurrency } = item.mintTokenInfo\n      let _avatarAssetList = Object.keys(valueToKeyMap).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: 0,\n        }\n      }, {}) as Record<SupportedTokens, number>\n      if (item.isEnable && tokenPrice[item.positionAddress]) {\n        markPrice = toLargeUnits(\n          tokenPrice[item.positionAddress][item.mintTokenInfo.symbol]?.price,\n          settlementCurrency.decimals,\n          true\n        ) as number\n      }\n      if (item.isEnable && allowedTokens[item.positionAddress]) {\n        const { balances, tokens } = allowedTokens[item.positionAddress]\n        if (balances && tokens) {\n          _avatarAssetList = Object.keys(balances).reduce((acc, key) => {\n            return {\n              ...acc,\n              [key]:tokens[key] ?  toLargeUnits(balances[key], tokens[key].decimals, true) as number: 0,\n            }\n          }, {\n            ..._avatarAssetList\n          })\n        }\n\n      }\n      const claimableWallet = toLargeUnits(rewardsData[item.mintTokenInfo.symbol].walletRewards.epochReward, settlementCurrency.decimals, true) as number;\n      const claimableAvatar = toLargeUnits(rewardsData[item.mintTokenInfo.symbol].avatarRewards.epochReward, settlementCurrency.decimals, true) as number;\n      return {\n        symbol: item.mintTokenInfo.symbol,\n        logo: item.mintTokenInfo.logo,\n        markPrice,\n        displayMarkPrice: `${TokenUtils.formatFourDecimals(markPrice)} ${settlementCurrency.symbol}`,\n        walletBalance: Number(TokenUtils.formatFourDecimals(walletTokenBalance[item.mintTokenInfo.symbol])),\n        avatarBalance: Number(_avatarAssetList[item.mintTokenInfo.symbol]),\n        claimableWallet,\n        claimableAvatar,\n        displayClaimableWallet: `${claimableWallet} ${settlementCurrency.symbol}`,\n        displayClaimableAvatar: `${claimableAvatar} ${settlementCurrency.symbol}`,\n        mintTokenInfo: item.mintTokenInfo,\n        isEnable: item.isEnable,\n        positionAddress: item.positionAddress,\n      }\n    })\n  }, [allowedTokens, positionAll, rewardsData, tokenPrice, walletTokenBalance])\n\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Title>\n        <h3>Holdings - Hashpower Token</h3>\n        <Link to=\"/history/claimed/0\">\n          <HistoryIcon /> Claimed History\n        </Link>\n      </Title>\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        isMyPage\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell style={{ paddingLeft: 0 }} component=\"th\" id={labelId} scope=\"row\">\n              <img\n                src={row.logo}\n                style={{ display: 'block', marginRight: 7, float: 'left', width: 20, height: 20 }}\n                alt=\"icon\"\n              />\n              {row.symbol}\n            </StyledTableCell>\n            <StyledTableCell>{row.displayMarkPrice}</StyledTableCell>\n            <StyledTableCell>{row.walletBalance}</StyledTableCell>\n            <StyledTableCell>\n              {row.avatarBalance}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayClaimableWallet}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayClaimableAvatar}\n            </StyledTableCell>\n            <StyledTableCell>\n              <Action row={row} address={account} rewardsData={rewardsData[row.symbol]} />\n            </StyledTableCell>\n          </>\n        )}\n      />\n    </Card>\n  )\n}\nexport default HoldingsWallet\n","import React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'components/Card'\n// import { BigNumber } from '@ethersproject/bignumber'\nimport Table, { StyledTableCell } from 'components/Table'\nimport { Stack } from '@mui/material'\nimport { useShortActiveAction, useShortPendingAction } from 'state/Short/hooks'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { computedPI, computedTC } from 'utils/computed'\nimport { TokenType } from 'state/Short/shortSlice'\nimport Title from './Title'\nimport HistoryIcon from './icon/History'\n\nconst columns = [\n  {\n    id: 'symbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'markPrice',\n    numeric: true,\n    disablePadding: true,\n    isSort: true,\n    label: 'Mark Price',\n  },\n  {\n    id: 'totalAssetsValue',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Collateral Value',\n  },\n  {\n    id: 'collateralRatio',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Collateral Ratio',\n  },\n  {\n    id: 'prepaidInterestCoverage',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Prepaid Interest Coverage',\n  },\n  {\n    id: 'outstandingDebt',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Outstanding Debt Position',\n  },\n  // {\n  //   id: 'dailyObligation',\n  //   numeric: true,\n  //   disablePadding: false,\n  //   isSort: true,\n  //   label: 'Daily  Obligation',\n  // },\n  {\n    id: 'action',\n    numeric: false,\n    disablePadding: false,\n    isSort: false,\n    label: 'Action',\n  },\n]\n\nfunction OutstandingDebt() {\n  const { setActiveTab, setActionInfo, setActiveAmount, clearActive } = useShortActiveAction()\n\n  const { clearAllPendingAction } = useShortPendingAction()\n  const { positionAll, tokenPrice, allowedTokens, currentMintToken } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n\n\n\n  const dataSource = useMemo(() => {\n    const list = Object.values(positionAll)\n\n    return list.map((item) => {\n      let markPrice = 0\n      const { settlementCurrency } = item.mintTokenInfo\n      let _avatarAssetList = Object.keys(valueToKeyMap).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: 0,\n        }\n      }, {}) as Record<SupportedTokens, number>\n      if (item.isEnable && tokenPrice[item.positionAddress]) {\n        markPrice = toLargeUnits(\n          tokenPrice[item.positionAddress][item.mintTokenInfo.symbol]?.price,\n          settlementCurrency.decimals,\n          true\n        ) as number\n      }\n      if (item.isEnable && allowedTokens[item.positionAddress]) {\n        const { balances, tokens } = allowedTokens[item.positionAddress]\n        if (balances && tokens) {\n          _avatarAssetList = Object.keys(balances).reduce((acc, key) => {\n            return {\n              ...acc,\n              [key]:tokens[key] ? toLargeUnits(balances[key], tokens[key].decimals, true) as number : 0,\n            }\n          }, {\n            ..._avatarAssetList\n          })\n        }\n\n      }\n      const { prepaidInterestCoverage, collateralRatio } = item\n      const { interestGuaranteed, obligation, epochDebt, estimatedObligationToday } = item?.positionStatus\n      const prepaidInterest = computedPI({\n        interestGuaranteed: Number(interestGuaranteed),\n        obligation: Number(obligation),\n        epochDebt: Number(epochDebt),\n        estimatedObligationToday: Number(estimatedObligationToday),\n      })\n      const totalAssetsValue = toLargeUnits(\n        computedTC({\n          collateralValue: Number(item.positionStatus.collateralValue),\n          prepaidInterest,\n        }),\n        item?.mintTokenInfo.settlementCurrency.decimals,\n      ) as number\n      return {\n        symbol: item.mintTokenInfo.symbol,\n        logo: item.mintTokenInfo.logo,\n        markPrice,\n        displayMarkPrice: `${TokenUtils.formatFourDecimals(markPrice)} ${settlementCurrency.symbol}`,\n        avatarBalance: Number(_avatarAssetList[item.mintTokenInfo.symbol]),\n        prepaidInterestCoverage,\n        collateralRatio,\n        totalAssetsValue,\n        displayTotalAssetsValue: `${TokenUtils.formatFourDecimals(totalAssetsValue)} ${item?.mintTokenInfo.settlementCurrency.symbol}`,\n        displayCoverage:\n          prepaidInterestCoverage === Number.POSITIVE_INFINITY ? '+∞' : `${Math.floor(prepaidInterestCoverage)} days`,\n        displayRatio:\n          collateralRatio === Number.POSITIVE_INFINITY\n            ? '+∞'\n            : (collateralRatio && `${TokenUtils.formatTokenAmount(collateralRatio, 2)}%`) || `${collateralRatio}`,\n        outstandingDebt: toLargeUnits(item.balance, item.mintTokenInfo.decimals, true) as number,\n      }\n    })\n  }, [allowedTokens, positionAll, tokenPrice])\n\n\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Title>\n        <h3>Outstanding Debt</h3>\n        <Link to=\"/history/obligation\">\n          <HistoryIcon />\n          Interest Paid History\n        </Link>\n      </Title>\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        isMyPage\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell style={{ paddingLeft: 0 }} component=\"th\" id={labelId} scope=\"row\">\n              <img\n                src={row.logo}\n                style={{ display: 'block', marginRight: 7, float: 'left', width: 20, height: 20 }}\n                alt=\"icon\"\n              />\n              {row.symbol}\n            </StyledTableCell>\n            <StyledTableCell>{row.displayMarkPrice}</StyledTableCell>\n            <StyledTableCell>\n              {row.displayTotalAssetsValue}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayRatio}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayCoverage}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.outstandingDebt}\n            </StyledTableCell>\n            {/* <StyledTableCell>{ Number(row.position) && row.positionInfoValues ? `≈ ${formatWBTC(row.positionInfoValues.totalObligation)}` : 0 } WBTC</StyledTableCell> */}\n            <StyledTableCell>\n              <Stack direction=\"row\" spacing={2}>\n                <Link\n                  style={{ color: '#2AA1FF', fontSize: '14px', fontFamily: 'PingFangSC-Regular,sans-serif' }}\n                  to=\"/collateral/manage\"\n                  onClick={() => {\n                    // changeCPT(row)\n                    handleChangeCurrentPosition(row.symbol)\n                  }}\n                >\n                  Manage Collateral\n                </Link>\n                <Link\n                  style={{ color: '#2AA1FF', fontSize: '14px', fontFamily: 'PingFangSC-Regular,sans-serif' }}\n                  to=\"/shortneutralize\"\n                  onClick={() => {\n                    clearAllPendingAction()\n                    setActiveAmount('')\n                    clearActive()\n                    setActiveTab(2)\n                    setActionInfo({ token: currentMintToken as unknown as string, tokenType: TokenType.NEUTRALIZE })\n                    // changeCPT(row)\n                    handleChangeCurrentPosition(row.symbol)\n                  }}\n                >\n                  Neutralize\n                </Link>\n              </Stack>\n            </StyledTableCell>\n          </>\n        )}\n      />\n    </Card>\n  )\n}\n\nexport default OutstandingDebt\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Grid, Divider } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { BTitle, Title } from 'components/CommonComponent'\nimport { useWeb3React } from 'web3-react-core'\nimport Tabs from 'components/Tabs'\nimport Card from 'components/Card'\nimport { Button, useWalletModal } from 'components/uikit'\nimport contracts from 'config/constants/contracts'\nimport { formatNumberWithUnits } from 'utils/formatTheValue'\nimport { getContract, isSupportedChainId } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport MinerABI from 'config/abi/Miner.json'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useAuth from 'hooks/useAuth'\nimport BlockUpdaterABI from 'config/abi/BlockUpdater.json'\nimport { SupportedChainId, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { blastSepoliaMintTokens, mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { BigNumber, ethers } from 'ethers'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport Multicall from 'utils/multicall'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport HoldingsWallet from './components/HoldingsWallet'\nimport OutstandingDebt from './components/OutstandingDebt'\nimport useSystemParams from '../../hooks/useSystemParams'\nimport useEpoch from '../../hooks/useEpoch'\nimport { RewardData } from './type'\n\nconst Wrapper = styled('div')`\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n`\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 26px;\n  padding-right: 44px;\n  min-width: 1024px;\n  padding-bottom: 100px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst CommonCard = styled(Card)`\n  padding: 30px;\n  height: 100%;\n\n  &.rightPanel {\n    h4 {\n      line-height: 20px;\n    }\n  }\n  h4 {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 480;\n    font-size: 16px;\n    line-height: 22px;\n    color: black;\n  }\n\n  p {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-size: 40px;\n    font-weight: 550;\n    line-height: 1;\n    color: #6ed6f3;\n    margin-top: 12px;\n    margin-bottom: 8px;\n    letter-spacing: 1px;\n    sub {\n      font-size: 16px;\n    }\n  }\n  span {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-size: 14px;\n  }\n`\nconst SubTitle = styled(Title)`\n  margin-bottom: 14px;\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 22px;\n  line-height: 31px;\n  color: #000000;\n`\n\nconst ClaimButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%) !important;\n  border-radius: 20px !important;\n  box-shadow: none !important;\n  height: 30px !important;\n  line-height: 30px !important;\n  color: #000 !important;\n  font-size: 14px !important;\n  display: block !important;\n\n  &.disabled {\n    background: #ddd !important;\n    color: #eee !important;\n  }\n`\n\n// const TableCard = styled(Card)`\n//   margin-bottom: 20px;\n// `\n\nconst getEstimatedDailyReward = (lastEpochReward: BigNumber, balance: BigNumber) => {\n  return Math.floor((Number(lastEpochReward) * Number(balance)) / 1e18)\n}\nconst { claimHelper, uniswapV2Multicall } = contracts\nconst minerInterface = new ethers.utils.Interface(MinerABI)\nconst blockUpdaterInterface = new ethers.utils.Interface(BlockUpdaterABI)\n\nfunction MyPage() {\n  const { prevEpoch } = useEpoch()\n  const [claimStatus, setClaimStatus] = useState(false)\n  const { walletTokenBalance } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const { chainId, account, active } = useWeb3React()\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const [walletTotal, setWalletTotal] = useState(0)\n  const [avatarTotal, setAvatarTotal] = useState(0)\n  const [dailyInterestRewards, setDailyInterestRewards] = useState(0)\n  const [dailyObligation, setDailyObligation] = useState(0)\n  const [rewardsData, setRewardsData] = useState<RewardData>(\n    Object.values(blastSepoliaMintTokens).reduce((acc, curr) => {\n      return {\n        ...acc,\n        [curr.symbol]: {\n          walletRewards: {\n            epochReward: ethers.constants.Zero,\n          },\n          avatarRewards: {\n            epochReward: ethers.constants.Zero,\n          },\n          walletEstimateDailyReward: 0,\n          avatarEstimateDailyReward: 0,\n        },\n      }\n    }, {}) as RewardData,\n  )\n  const [allRewards, setAllRewards] = useState([])\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, account)\n\n  const isLogin = useMemo(() => {\n    return active && chainId && isSupportedChainId(chainId)\n  }, [active, chainId])\n  const { positionAll, tokenPrice, allowedTokens } = usePositionInfo()\n\n  const claimAll = useCallback(async () => {\n    if (!account) {\n      onPresentConnectModal()\n      return\n    }\n\n    if (signer) {\n      const claimContract = getContract(signer, claimHelper.abi, claimHelper.address[chainId])\n      if (claimContract) {\n        try {\n          const params = []\n          for (const item of Object.values(positionAll)) {\n            params.push([item.mintTokenInfo.address, account])\n            if (item.isEnable) {\n              params.push([item.mintTokenInfo.address, item.positionAddress])\n            }\n          }\n          console.log('params', params)\n          setClaimStatus(true)\n          const txInfo = await claimContract.multipleClaim(params)\n          if (txInfo) {\n            toastInfo(\n              ToastTitle.submited,\n              <TransactionSubmittedInfo txHash={txInfo.hash} content=\"Waiting for confirmation\" />,\n            )\n            await txInfo.wait()\n            toastSuccess(\n              ToastTitle.success,\n              <TransactionSubmittedInfo txHash={txInfo.hash} content=\"Transaction has been confirmed\" />,\n            )\n            setClaimStatus(false)\n          }\n        } catch (e: any) {\n          setClaimStatus(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    }\n  }, [account, signer, onPresentConnectModal, chainId, positionAll, toastInfo, toastSuccess, toastError])\n\n  const getPendingReward = useCallback(async () => {\n    if (isLogin && walletTokenBalance) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      const multicall = new Multicall(chainId, uniswapV2Multicall.address, uniswapV2Multicall.abi)\n\n      for (const key in _tokens) {\n        if (Object.prototype.hasOwnProperty.call(_tokens, key)) {\n          const tokenInfo = _tokens[key as MintTokenKey]\n          const positionInfo = positionAll[key as MintTokenKey]\n          const walletBalance = walletTokenBalance[tokenInfo.symbol] || 0\n          let collateralBalance = 0\n\n          if (positionInfo && positionInfo.isEnable && allowedTokens[positionInfo.positionAddress]) {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            const { balances, tokens } = allowedTokens[positionInfo.positionAddress]\n            const tokenBalances = Object.keys(balances).reduce((acc, curr) => {\n              return {\n                ...acc,\n                [curr]: toLargeUnits(balances[curr], tokens[curr].decimals, true) as number,\n              }\n            }, {})\n            collateralBalance = tokenBalances[tokenInfo.symbol] || 0\n          }\n\n          const tokenRewards = {\n            walletRewards: {\n              epochReward: ethers.constants.Zero,\n            },\n            avatarRewards: {\n              epochReward: ethers.constants.Zero,\n            },\n            walletEstimateDailyReward: 0,\n            avatarEstimateDailyReward: 0,\n          }\n          let walletHasRweards = false\n          let positionHasRweards = false\n\n          const holderInfoMappingCalls = []\n          if (walletBalance) {\n            walletHasRweards = true\n            holderInfoMappingCalls.push({\n              target: tokenInfo.address,\n              callData: minerInterface.encodeFunctionData('holderInfoMapping', [account]),\n              functionSignature: 'holderInfoMapping',\n            })\n          }\n          if (positionInfo.isEnable && collateralBalance > 0) {\n            positionHasRweards = true\n            holderInfoMappingCalls.push({\n              target: tokenInfo.address,\n              callData: minerInterface.encodeFunctionData('holderInfoMapping', [positionInfo.positionAddress]),\n              functionSignature: 'holderInfoMapping',\n            })\n          }\n          multicall.addAbi(tokenInfo.address, MinerABI)\n          multicall.addAbi(tokenInfo.blockUpdater, BlockUpdaterABI)\n          if (holderInfoMappingCalls.length === 0) {\n            continue\n          }\n          const {\n            returnData: { holderInfoMapping },\n          } = await multicall.aggregate(holderInfoMappingCalls)\n          const pendingRewardCalls = []\n          if (holderInfoMappingCalls.length === 1) {\n            if (walletHasRweards) {\n              const holderInfos = holderInfoMapping[0]\n              // holderInfoMapping\n              pendingRewardCalls.push({\n                target: tokenInfo.blockUpdater,\n                callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n                  toSmallUnits(String(walletBalance), tokenInfo.decimals),\n                  holderInfos[0],\n                  holderInfos[1],\n                  holderInfos[2],\n                ]),\n                functionSignature: 'pendingReward',\n              })\n            }\n            if (positionHasRweards) {\n              const holderInfos = holderInfoMapping[0]\n              // holderInfoMapping\n              pendingRewardCalls.push({\n                target: tokenInfo.blockUpdater,\n                callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n                  toSmallUnits(String(collateralBalance), tokenInfo.decimals),\n                  holderInfos[0],\n                  holderInfos[1],\n                  holderInfos[2],\n                ]),\n                functionSignature: 'pendingReward',\n              })\n            }\n          } else {\n            pendingRewardCalls.push(\n              ...holderInfoMapping.map((holder, index) => {\n                return {\n                  target: tokenInfo.blockUpdater,\n                  callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n                    toSmallUnits(String(index === 0 ? walletBalance : collateralBalance), tokenInfo.decimals),\n                    holder[0],\n                    holder[1],\n                    holder[2],\n                  ]),\n                  functionSignature: 'pendingReward',\n                }\n              }),\n            )\n          }\n          const {\n            returnData: { pendingReward },\n          } = await multicall.aggregate(pendingRewardCalls)\n\n          if (pendingRewardCalls.length === 1) {\n            const reward = pendingReward[0]\n            if (walletHasRweards) {\n              tokenRewards.walletRewards = {\n                epochReward: reward.epochReward,\n              }\n              tokenRewards.walletEstimateDailyReward = getEstimatedDailyReward(\n                positionInfo.lastEpochReward,\n                toSmallUnits(String(walletBalance), tokenInfo.decimals),\n              )\n            }\n            if (positionHasRweards) {\n              tokenRewards.avatarRewards = {\n                epochReward: reward.epochReward,\n              }\n              tokenRewards.avatarEstimateDailyReward = getEstimatedDailyReward(\n                positionInfo.lastEpochReward,\n                toSmallUnits(String(collateralBalance), tokenInfo.decimals),\n              )\n            }\n          } else {\n            pendingReward.forEach((reward, index) => {\n              if (index === 0) {\n                tokenRewards.walletRewards = {\n                  epochReward: reward.epochReward,\n                }\n                tokenRewards.walletEstimateDailyReward = getEstimatedDailyReward(\n                  positionInfo.lastEpochReward,\n                  toSmallUnits(String(walletBalance), tokenInfo.decimals),\n                )\n              }\n              if (index === 1) {\n                tokenRewards.avatarRewards = {\n                  epochReward: reward.epochReward,\n                }\n                tokenRewards.avatarEstimateDailyReward = getEstimatedDailyReward(\n                  positionInfo.lastEpochReward,\n                  toSmallUnits(String(collateralBalance), tokenInfo.decimals),\n                )\n              }\n            })\n          }\n          setRewardsData((state) => {\n            return {\n              ...state,\n              [key]: tokenRewards,\n            }\n          })\n        }\n      }\n    }\n  }, [account, allowedTokens, chainId, isLogin, positionAll, walletTokenBalance])\n\n  useEffect(() => {\n    getPendingReward()\n  }, [getPendingReward])\n\n  useEffect(() => {\n    let _walletTotal = 0\n    let _avatarTotal = 0\n    let _dailyInterestRewards = 0\n    let _dailyObligation = 0\n    const _rewardsAll = []\n\n    for (const item of Object.values(positionAll)) {\n      const { mintTokenInfo, positionAddress, isEnable } = item\n\n      const prices = tokenPrice[positionAddress]\n      if (!prices || !Object.prototype.hasOwnProperty.call(prices, mintTokenInfo.symbol)) {\n        continue\n      }\n      let avatarAssetList = Object.keys(valueToKeyMap).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: 0,\n        }\n      }, {})\n\n      if (isEnable && allowedTokens[positionAddress]) {\n        const { balances, tokens } = allowedTokens[positionAddress]\n        avatarAssetList = Object.keys(balances).reduce((acc, key) => {\n          return {\n            ...acc,\n            [key]: balances[key].isZero() ? 0 : (toLargeUnits(balances[key], tokens[key].decimals, true) as number),\n          }\n        }, {})\n      }\n\n      const WBTCToUSD = (prices?.USDT && 1 / prices?.USDT?.price.toNumber()) * 10 ** 8 || 0\n      const currentWBTCPrice = Number(\n        toLargeUnits(prices[mintTokenInfo.symbol].price, mintTokenInfo.settlementCurrency.decimals),\n      )\n      _walletTotal += walletTokenBalance[mintTokenInfo.symbol] * currentWBTCPrice * WBTCToUSD\n      _avatarTotal += avatarAssetList[mintTokenInfo.symbol] * currentWBTCPrice * WBTCToUSD\n      if (rewardsData[mintTokenInfo.symbol]) {\n        const walletEstimateDailyReward =\n          rewardsData[mintTokenInfo.symbol].walletEstimateDailyReward / 10 ** mintTokenInfo.settlementCurrency.decimals // TODO resolve overflow\n        const avatarEstimateDailyReward =\n          rewardsData[mintTokenInfo.symbol].avatarEstimateDailyReward / 10 ** mintTokenInfo.settlementCurrency.decimals // TODO resolve overflow\n        _dailyInterestRewards += (walletEstimateDailyReward + avatarEstimateDailyReward) * WBTCToUSD\n        _dailyObligation +=\n          (getEstimatedDailyReward(item.lastEpochReward, item.balance) /\n            10 ** mintTokenInfo.settlementCurrency.decimals) *\n          WBTCToUSD\n\n        const walletRewards = Number(\n          toLargeUnits(\n            rewardsData[mintTokenInfo.symbol].walletRewards.epochReward,\n            mintTokenInfo.settlementCurrency.decimals,\n          ),\n        )\n        const avatarRewards = Number(\n          toLargeUnits(\n            rewardsData[mintTokenInfo.symbol].avatarRewards.epochReward,\n            mintTokenInfo.settlementCurrency.decimals,\n          ),\n        )\n        const lpAllRewards = walletRewards + avatarRewards\n        const rewardsTransfromToUsdt = (walletRewards + avatarRewards) * WBTCToUSD\n        _rewardsAll.push({\n          rewards: lpAllRewards,\n          usdt: rewardsTransfromToUsdt,\n          lptoken: mintTokenInfo.symbol,\n        })\n      }\n      setWalletTotal(_walletTotal)\n      setAvatarTotal(_avatarTotal)\n      setDailyInterestRewards(_dailyInterestRewards)\n      setDailyObligation(_dailyObligation)\n      setAllRewards(_rewardsAll)\n    }\n  }, [allowedTokens, positionAll, rewardsData, tokenPrice, walletTokenBalance])\n\n  const totalRwardsWbtc = useMemo(() => {\n    const total = allRewards.reduce((acc, reward) => acc + reward.rewards, 0)\n    return total\n  }, [allRewards])\n  const totalRwardsUsdt = useMemo(() => {\n    const totalUSDT = allRewards.reduce((acc, reward) => acc + reward.usdt, 0)\n    return TokenUtils.formatCurrencyTwoDecimals(totalUSDT)\n  }, [allRewards])\n\n  const rewardPannel = useMemo(() => {\n    return (\n      <Grid container style={{ marginBottom: 18, lineHeight: '20px', fontSize: '14px' }}>\n        <Grid item xs={6}>\n          <span>{(totalRwardsWbtc && totalRwardsWbtc.toFixed(8)) || totalRwardsWbtc} WBTC</span>\n        </Grid>\n        <Grid item xs={6} dir=\"rtl\">\n          <span>${totalRwardsUsdt}≈</span>\n        </Grid>\n      </Grid>\n    )\n  }, [totalRwardsUsdt, totalRwardsWbtc])\n  return (\n    <Wrapper>\n      <BTitle>My Page</BTitle>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <CommonCard>\n                  <SubTitle>Holdings - Synthetic Hashpower Token</SubTitle>\n                  <Grid container>\n                    <Grid item xs={6}>\n                      <h4>Hashpower Token in Wallet </h4>\n                      <p>\n                        <sub>≈</sub>${TokenUtils.formatNumberWithUnits(walletTotal)}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <h4>Hashpower Token in Collateral</h4>\n                      <p>\n                        <sub>≈</sub>${TokenUtils.formatNumberWithUnits(avatarTotal)}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </CommonCard>\n              </Grid>\n              <Grid item xs={12} style={{ paddingTop: 20 }}>\n                <CommonCard style={{ paddingBottom: 33 }}>\n                  <SubTitle>Claimable Rewards</SubTitle>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      {rewardPannel}\n                      <Divider style={{ marginBottom: 18 }} />\n                      <Grid container style={{ marginBottom: 20, lineHeight: '20px', fontSize: '14px' }}>\n                        <Grid item xs={6}>\n                          <span>Total</span>\n                        </Grid>\n                        <Grid item xs={6} dir=\"rtl\">\n                          <span>${totalRwardsUsdt}≈</span>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={6} style={{ paddingTop: 0, paddingLeft: 97 }}>\n                      <img\n                        src=\"/images/eth.png\"\n                        style={{ width: 108, height: 108, margin: '5px 0 0 35px', display: 'block' }}\n                        alt=\"illustration\"\n                      />\n                      <ClaimButton\n                        disabled={claimStatus}\n                        style={{ margin: '30px 0 0' }}\n                        className={`${claimStatus ? 'disabled' : ''}`}\n                        onClick={claimAll}\n                      >\n                        Claim All Rewards\n                      </ClaimButton>\n                    </Grid>\n                  </Grid>\n                </CommonCard>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <CommonCard className=\"rightPanel\">\n              <SubTitle>Epoch {prevEpoch.epoch} Balance</SubTitle>\n              <Grid container>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <h4>Rewards Earned</h4>\n                  <p>\n                    <sub>≈</sub>${formatNumberWithUnits(dailyInterestRewards)}\n                  </p>\n                </Grid>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <h4>Interest Paid</h4>\n                  <p>\n                    <sub>≈</sub>${formatNumberWithUnits(dailyObligation)}\n                  </p>\n                </Grid>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={12} style={{ marginBottom: 36 }}>\n                  <h4>Net Rewards</h4>\n                  <p>\n                    <sub>≈</sub>\n                    {formatNumberWithUnits(dailyInterestRewards - dailyObligation).includes('-')\n                      ? formatNumberWithUnits(dailyInterestRewards - dailyObligation).replace('-', '-$')\n                      : `$${formatNumberWithUnits(dailyInterestRewards - dailyObligation)}`}\n                  </p>\n                </Grid>\n              </Grid>\n            </CommonCard>\n          </Grid>\n        </Grid>\n        <div style={{ width: '100%' }}>\n          <Tabs\n            tabsStyle={{\n              minHeight: 36,\n              paddingLeft: 21,\n            }}\n            tabStyle={{\n              paddingTop: 0,\n              paddingBottom: 0,\n              minHeight: 32,\n              lineHeight: '32px',\n            }}\n            tab={[\n              {\n                label: 'All',\n                component: (\n                  <>\n                    <HoldingsWallet rewardsData={rewardsData} />\n                    {/* <HoldingsAvatar rewardsData={rewardsData} />    / */}\n                    <OutstandingDebt />\n                  </>\n                ),\n              },\n              {\n                label: 'Holdings',\n                component: <HoldingsWallet rewardsData={rewardsData} />,\n              },\n              // {\n              //   label: 'Holdings - Avatar',\n              //   component: <HoldingsAvatar rewardsData={rewardsData} />\n              // },\n              {\n                label: 'Outstanding Debt',\n                component: <OutstandingDebt />,\n              },\n            ]}\n          />\n        </div>\n      </Box>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MyPage)\n","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Svg = styled.svg`\n  font-size: 14px;\n  width: 10px;\n  height: 5px;\n  display: block;\n`\n\nfunction SortIcon({order}) {\n  return (\n    <span>\n        <Svg width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M0.284084 3.2146L4.81473 3.2146C5.03791 3.2146 5.17182 3.06953 5.06023 2.95794C4.89284 2.77939 2.89534 0.692616 2.79491 0.592183C2.67216 0.458272 2.40434 0.480591 2.29274 0.592183C2.21463 0.670297 0.161333 2.83519 0.0385814 2.95794C-0.0730109 3.08069 0.0720592 3.20344 0.284084 3.2146Z\"\n    fill={order === 'asc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n  <Svg  width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M4.81626 0.7854H0.285613C0.0624289 0.7854 -0.0714817 0.930471 0.0401105 1.04206C0.207499 1.22061 2.205 3.30738 2.30543 3.40782C2.42818 3.54173 2.69601 3.51941 2.8076 3.40782C2.88571 3.3297 4.93901 1.16481 5.06176 1.04206C5.17335 0.919311 5.02828 0.79656 4.81626 0.7854Z\"\n    fill={order === 'desc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n\n    </span>\n  );\n}\n\nexport default SortIcon;\n","import React, { useCallback } from 'react'\nimport { styled } from '@mui/material/styles'\nimport {\n  Box,\n  Table,\n  TableRow,\n  TableSortLabel,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n} from '@mui/material'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport { uniq } from 'lodash'\nimport SortIcon from './icon/SortIcon'\n\nexport const StyledTableCell = styled(TableCell)(() => ({\n  [`&.${tableCellClasses.head}`]: {\n    border: 'none',\n    color: 'rgba(0, 0, 0, 0.5)',\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    borderBottom: '1px solid #E2E8EE',\n  },\n}))\nexport const StyledTableRow = styled(TableRow)(() => ({\n  cursor: 'pointer',\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    fontSize: 14,\n    borderBottom: '1px solid rgba(226, 232, 238, 1)',\n  },\n}))\n\nconst BoxWrapper = styled(Box)`\n  height: 80%;\n  overflow: scroll;\n  &::-webkit-scrollbar,\n  .MuiTableContainer-root::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) {\n      return order\n    }\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, columns, isMyPage = false } = props\n  const createSortHandler = (property) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell, index) => (\n          <StyledTableCell\n            style={{ paddingLeft: index === 0 && isMyPage && 0 }}\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {!headCell.isSort ? (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            )}\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport default function EnhancedTable(props) {\n  const { dataSource, columns, content, pagination, rowClick, isMyPage, pages, selectKey } = props\n\n  const [order, setOrder] = React.useState<Order>('desc')\n  const [orderBy, setOrderBy] = React.useState(columns[0].id)\n  const [selected, setSelected] = React.useState<readonly string[]>([])\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property) => {\n    console.log('p :>> ', property);\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  const handleClick = useCallback(\n    (event, row) => {\n      // const selectedIndex = selected.indexOf(name)\n      // let newSelected: readonly string[] = []\n\n      // if (selectedIndex === -1) {\n      //   newSelected = newSelected.concat(selected, name)\n      // } else if (selectedIndex === 0) {\n      //   newSelected = newSelected.concat(selected.slice(1))\n      // } else if (selectedIndex === selected.length - 1) {\n      //   newSelected = newSelected.concat(selected.slice(0, -1))\n      // } else if (selectedIndex > 0) {\n      //   newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1))\n      // }\n      // console.log('object :>> ', uniq(newSelected));\n      // setSelected(uniq(newSelected))\n\n      if (rowClick) {\n        rowClick(event, row)\n      }\n    },\n    [rowClick],\n  )\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n    if (pagination && props.onChangePage) {\n      props.onChangePage(newPage);\n    }\n  }\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const dataSourceDom = React.useCallback(() => {\n    if (dataSource && dataSource.length && pagination) {\n      if (pages) {\n        return stableSort(dataSource, getComparator(order, orderBy))\n          .map((row, index) => {\n            const labelId = `enhanced-table-checkbox-${index}`\n            return (\n              <StyledTableRow\n                hover\n                onClick={(event) => handleClick(event, row)}\n                role=\"checkbox\"\n                tabIndex={-1}\n                key={`row_${labelId}`}\n              >\n                {content(row, index, labelId)}\n              </StyledTableRow>\n            )\n          })\n      }\n      return stableSort(dataSource, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row, index) => {\n          const labelId = `enhanced-table-checkbox-${index}`\n          return (\n            <StyledTableRow\n              hover\n              onClick={(event) => handleClick(event, row)}\n              role=\"checkbox\"\n              tabIndex={-1}\n              key={`row_${labelId}`}\n            >\n              {content(row, index, labelId)}\n            </StyledTableRow>\n          )\n        })\n    }\n    if (dataSource && dataSource.length && !pagination) {\n      return stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n        const labelId = `enhanced-table-checkbox-${index}`\n        return (\n          <StyledTableRow\n            hover\n            onClick={(event) => handleClick(event, row)}\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={`row_${labelId}`}\n          >\n            {content(row, index, labelId)}\n          </StyledTableRow>\n        )\n      })\n    }\n    return (\n      <StyledTableRow>\n        <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n          No data\n        </StyledTableCell>\n      </StyledTableRow>\n    )\n  }, [columns.length, content, dataSource, handleClick, order, orderBy, page, pages, pagination, rowsPerPage])\n  return (\n    <BoxWrapper>\n      <TableContainer>\n        <Table sx={{ minWidth: 1400 }} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            columns={columns}\n            isMyPage={isMyPage}\n          />\n          <TableBody>\n            {dataSourceDom()}\n            {/* {dataSource && dataSource.length && pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <StyledTableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.ticker)}\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.ticker}\n                    >\n                      {content(row, index, labelId)}\n                    </StyledTableRow>\n                  )\n                })\n            ) : dataSource && dataSource.length && !pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`\n                return (\n                  <StyledTableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.ticker)}\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.ticker}\n                  >\n                    {content(row, index, labelId)}\n                  </StyledTableRow>\n                )\n              })\n            ) : (\n              <StyledTableRow>\n                <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n                  No data\n                </StyledTableCell>\n              </StyledTableRow>\n            )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {pagination ? (\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={pages || (dataSource && dataSource.length) || 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      ) : null}\n    </BoxWrapper>\n  )\n}\n","import { useAppDispatch, useAppSelector } from 'state'\nimport { useWeb3React } from 'web3-react-core'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport tokens from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport { ContractTransaction } from 'ethers'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { chainConfigs, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport {\n  ActionType,\n  NeetralizePendingAction,\n  PendingAction,\n  TokenType,\n  updateActiveAmount,\n  updateActionInfo,\n  updateActiveActionIndex,\n  setShortPendingAction,\n  updateActiveTab,\n  updateShortRateInfo,\n} from './shortSlice'\n\nexport function useShortActiveTokenApprove() {\n  const { account, chainId } = useWeb3React()\n  const activeInfo = useAppSelector((state) => state.short.activeInfo)\n  // const { position } = useCurrentCpt()\n  const { currentPosition } = usePositionInfo()\n  const { onCheckApprove } = useCheckApprove()\n  const { handleApprove } = useApprove(\n    account,\n    activeInfo.token ? chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address : '0',\n  )\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [checkApproveLoading, setCheckApproveLoading] = useState(false)\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    if (activeInfo.token) {\n      setCheckApproveLoading(true)\n      onCheckApprove(\n        account,\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address,\n        currentPosition.positionAddress,\n      )\n        .then((res) => {\n          if (res && res._hex > 0) {\n            setApproveStatus(true)\n          } else {\n            setApproveStatus(false)\n          }\n        })\n        .catch(() => {\n          setApproveStatus(false)\n        })\n        .finally(() => {\n          setCheckApproveLoading(false)\n        })\n    }\n\n    // console.log('valueToKeyMap[activeInfo.token]', activeInfo.token, valueToKeyMap[activeInfo.token])\n  }, [account, activeInfo, chainId, currentPosition.positionAddress, onCheckApprove])\n  const onApprove = useCallback(async () => {\n    try {\n      setApproveStatus(true)\n      const info = await handleApprove(currentPosition.positionAddress)\n\n      return info as ContractTransaction\n    } catch (error: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${error.reason}`)\n      throw error\n    }\n  }, [handleApprove, currentPosition.positionAddress, toastError])\n\n  return { approveStatus, onApprove, checkApproveLoading }\n}\n\n// short active action and info\nexport function useShortActiveAction() {\n  const dispatch = useAppDispatch()\n  const { activeAmount, activeInfo, activeIndex } = useAppSelector((state) => state.short)\n  const { pendingActionList } = useShortPendingAction()\n  const setActionInfo = useCallback(\n    (data: { token?: string; tokenType?: TokenType } = {}) => {\n      dispatch(updateActionInfo({ activeInfo: data }))\n      const _index = pendingActionList.findIndex(\n        (item) => item.token === data.token && item.tokenType === data.tokenType,\n      )\n      if (_index >= 0) {\n        dispatch(updateActiveActionIndex({ index: _index }))\n      }\n    },\n    [dispatch, pendingActionList],\n  )\n  const setActiveTab = useCallback(\n    (index: number) => {\n      dispatch(updateActiveTab({ index }))\n    },\n    [dispatch],\n  )\n  const setActionIndex = useCallback(\n    (index: number) => {\n      dispatch(updateActiveActionIndex({ index }))\n    },\n    [dispatch],\n  )\n  const setActiveAmount = useCallback(\n    (amount: any) => {\n      dispatch(updateActiveAmount({ amount }))\n    },\n    [dispatch],\n  )\n  const clearActive = useCallback(() => {\n    setActionInfo()\n    setActiveAmount('')\n    setActionIndex(-1)\n  }, [setActionIndex, setActionInfo, setActiveAmount])\n\n  // const { approveStatus, onApprove } = useShortActiveTokenApprove()\n  const _activeInfo = useMemo(() => {\n    if (activeInfo?.token) {\n      return {\n        ...activeInfo,\n        amount: activeAmount,\n        activeIndex,\n        // approveStatus,\n      }\n    }\n    return { token: null, amount: '', tokenType: null, activeIndex: -1, approveStatus: false }\n  }, [activeAmount, activeIndex, activeInfo])\n\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return {\n    setActionInfo,\n    setActiveAmount,\n    clearActive,\n    setActiveTab,\n    activeInfo: _activeInfo,\n    setActionIndex,\n    onChangeCollateralIndex,\n  }\n}\n\nexport function useShortPendingAction() {\n  const dispatch = useAppDispatch()\n  const { pendingActions } = useAppSelector((state) => state.short)\n  const _pendingActions = useMemo(() => new Map(pendingActions), [pendingActions])\n  // add action\n  const addPendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = _pendingActions.get(data.token) || []\n      _pendingActions.set(data.token, [..._actions, { ...data, type: ActionType.ADD }])\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // delete action\n  const deletePendingAction = useCallback(\n    (token: string, tokenType: TokenType) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.tokenType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // clear all action\n  const clearAllPendingAction = useCallback(() => {\n    dispatch(setShortPendingAction({ actions: new Map() }))\n  }, [dispatch])\n\n  // update action\n  const updatePendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.tokenType === data.tokenType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const updateNeutralizePendingAction = useCallback(\n    (data: Pick<NeetralizePendingAction, 'amount' | 'price' | 'token' | 'tokenType' | 'neutralizeType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.neutralizeType === data.neutralizeType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const deleteNeutralizePendingAction = useCallback(\n    (token: string, tokenType: any) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.neutralizeType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n\n  // get token type\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActions.forEach((item, index) => {\n      _map.set(\n        index,\n        item.map((i) => i.tokenType),\n      )\n    })\n    return _map\n  }, [pendingActions])\n\n  const pendingActionList = useMemo(() => {\n    return Array.from(pendingActions.values()).flat()\n  }, [pendingActions])\n\n  const tokenAmount = useMemo(() => {\n    const _obg = {}\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY || item.tokenType === TokenType.WithDraw) {\n        _obg[item.token] = item.amount\n      }\n    })\n    return _obg\n  }, [pendingActionList])\n\n  const shortAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SHORT) {\n        _amount = item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const neutralizeAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAllAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAmount = useMemo(() => {\n    const _amount = new Map<string, number>()\n    pendingActions.forEach((items) => {\n      const item = items.filter((i) => i.tokenType === TokenType.SUPPLY)[0]\n      if (item) {\n        _amount.set(item.token, item.amount)\n      }\n    })\n    return _amount\n  }, [pendingActions])\n  return {\n    addPendingAction,\n    clearAllPendingAction,\n    deletePendingAction,\n    updatePendingAction,\n    deleteNeutralizePendingAction,\n    updateNeutralizePendingAction,\n    pendingTokenTypes,\n    pendingActions,\n    pendingActionList,\n    tokenAmount,\n    shortAmount,\n    supplyAmount,\n    supplyAllAmount,\n    neutralizeAmount,\n  }\n}\n\nexport function useShortInfo() {\n  const { rateInfo, activeTab, activeInfo } = useAppSelector((state) => state.short)\n\n  const dispatch = useAppDispatch()\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n  return {\n    rateInfo,\n    onChangeCollateralIndex,\n    activeTab,\n    activeInfo,\n  }\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport tokens from 'config/constants/tokens'\nimport { utils } from 'ethers'\nimport { TokenUtils } from './transformHelper'\n\n// TODO  formatCurrency => formatNumberWithUnits\nexport function formatNumberWithUnits(val) {\n  if (val >= 1000000) {\n    return `${(val / 1000000).toFixed(1)}M`\n  }\n  if (val >= 10000) {\n    return `${(val / 1000).toFixed(1)}K`\n  }\n  const resVal = val.toFixed(2)\n  if (resVal === 0 || resVal === '0') {\n    return '0.00'\n  }\n  return resVal\n}\n\n// TODO rewrite\nexport function formatSnNumber(number) {\n  if (Number.isNaN(Number(number))) {\n    return number\n  }\n\n  if (number.toString().includes('+')) {\n    return Number(number).toLocaleString().replace(/,/g, '')\n  }\n  if (String(number).includes('-')) {\n    const e = String(number)\n    const rex = /^([0-9]).?([0-9]*)e-([0-9]*)/\n    if (!rex.test(e)) return number\n    const numArr = e.match(rex)\n    const n = Number(`${numArr[1]}${numArr[2] || ''}`)\n    const num = `0.${String(10 ** (Number(numArr[3]) - 1)).substr(1)}${n}`\n    return num.replace(/0*$/, '')\n  }\n\n  return String(number).includes('.') ? TokenUtils.formatFourDecimals(Number(number)) : String(number)\n}\n\nexport default function formatTheValue(val: number | BigNumber | any, unitName?: number) {\n  return Number(utils.formatUnits(typeof val === 'number' ? val.toFixed(unitName) : val, unitName))\n  // return 0\n}\n// TODO reset\nexport function toFixed(val, mark?) {\n  const value = String(formatSnNumber(val))\n  if (mark && mark === 'WBTC' && Number(value) && value.includes('.')) {\n    return formatSnNumber(Number(value.slice(0, value.indexOf('.') + 9)))\n  }\n  if (mark && mark === 'F(BTC,20)' && Number(value) && value.includes('.')) {\n    return formatSnNumber(Number(value.slice(0, value.indexOf('.') + 7)))\n  }\n  if (typeof mark === 'number') {\n    return formatSnNumber(Number(value.slice(0, value.indexOf('.') + (mark + 1))))\n  }\n  if (mark !== 'WBTC' || mark !== 'F(BTC,20)') {\n    if (value.includes('.')) {\n      return formatSnNumber(Number(value.slice(0, value.indexOf('.') + 3)))\n    }\n    return val\n  }\n  return val\n}\n\nexport function formatWBTC(val) {\n  if (val) {\n    return toFixed(formatSnNumber(val / Number(BigNumber.from(10).pow(tokens.WBTC.decimals))), 'WBTC')\n  }\n  // if (val) {\n  //   return toSmallUnits(val.toSring(), tokens.WBTC.decimals) as any\n  // }\n  return 0\n}\n\nexport function formatBalance(val, mark) {\n  if (val) {\n    return toFixed(formatSnNumber(val / Number(BigNumber.from(10).pow(tokens.WBTC.decimals))), mark)\n  }\n  return 0\n}\n\nexport function toWBTC(val) {\n  return formatSnNumber(val * 10 ** 8)\n}\nexport function toHashToken(val) {\n  return formatSnNumber(val * 10 ** 6)\n}\n\nexport function formatInfinity(val) {\n  const value = String(val)\n  if (value && value.includes('Infinity') && value.includes('-')) {\n    return '-∞'\n  }\n  if (value && value.includes('Infinity') && !value.includes('-')) {\n    return '+∞'\n  }\n\n  return typeof val === 'number' && String(val).includes('.') ? val.toFixed(2) : val\n}\n\nexport function formatNumber(val: any, decimal = 4) {\n  if (val === undefined) {\n    return '0'\n  }\n\n  const v = typeof val === 'number' ? val : Number(val)\n  const str = String(v)\n  return str.includes('.') ? TokenUtils.formatTokenAmount(val, decimal) : str\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { withRouter } from 'react-router'\n\nexport interface StyledTabProps {\n  label: string\n  style?: any\n}\n\nexport interface StyledTabsProps {\n  children?: React.ReactNode\n  value: number\n  onChange: (event: React.SyntheticEvent, newValue: number) => void\n  style?: any\n}\n\nexport const AntTabs = styled((props: StyledTabsProps) => (\n  <Tabs {...props} TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }} />\n))({\n  margin: '40px auto 20px',\n  '& .MuiTabs-indicator': {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 4,\n    backgroundColor: 'transparent',\n  },\n  '& .MuiTabs-indicatorSpan': {\n    maxWidth: 20,\n    width: '100%',\n    borderRadius: 5,\n    background: 'linear-gradient(270deg, #7AE9F0 0%, #61C3F7 100%);',\n  },\n})\n\nexport const AntTab = styled((props: StyledTabProps) => <Tab disableRipple {...props} />)(({ theme }) => ({\n  textTransform: 'none',\n  minWidth: 0,\n  [theme.breakpoints.up('sm')]: {\n    minWidth: 0,\n  },\n  fontFamily: 'Heebo Medium',\n  fontWeight: 500,\n  marginRight: theme.spacing(1),\n  color: 'rgba(0, 0, 0, 0.5)',\n  fontSize: '22px',\n  '&:hover': {\n    color: '#000000',\n    opacity: 1,\n  },\n  '&.Mui-selected': {\n    color: '#000000',\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: '#d1eaff',\n  },\n}))\n\nfunction CustomizedTabs(props) {\n  const { tab, tabsStyle, tabStyle, defaultTabsValue, history } = props\n  const [value, setValue] = React.useState(Number(defaultTabsValue) || 0)\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n\n    if (defaultTabsValue !== undefined) {\n      history.push(`/history/claimed/${newValue}`)\n    }\n  }\n\n  return (\n    <>\n      <AntTabs style={tabsStyle} value={value} onChange={handleChange}>\n        {tab.map((it) => (\n          <AntTab style={tabStyle} key={it.label} label={it.label} />\n        ))}\n      </AntTabs>\n      {tab.map((item, index) => index === value && <React.Fragment key={item.label}>{item.component}</React.Fragment>)}\n    </>\n  )\n}\nexport default withRouter(CustomizedTabs)\n","import { chainConfigs, valueToKeyMap } from \"config/constants/tokenConfig\";\nimport {SupportedChainId} from \"../config/constants/chains\";\n\n\n\nexport default async function addAsset({ connector, tokenSymbol, chainId }: { connector: any\n  tokenSymbol: string,\n\n  chainId: SupportedChainId}){\n    console.log('object :>> ', chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address);\n  try {\n    const provider = await connector.getProvider()\n    await provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].decimals, // The number of decimals in the token\n          },\n        },\n      });\n  } catch (error) {\n    //\n  }\n}\n"],"sourceRoot":""}