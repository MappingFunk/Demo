{"version":3,"sources":["views/ShortNeutralize/components/StyleCommon.ts","views/ShortNeutralize/components/CustomizedSlider.tsx","views/ShortNeutralize/components/DashboardContent.tsx","views/ShortNeutralize/components/Table.tsx","components/IconMap.ts","views/ShortNeutralize/components/TradeSettings.tsx","views/ShortNeutralize/components/ShortEstimatedDashBoard.tsx","views/ShortNeutralize/components/ShortTransactionPanel.tsx","views/ShortNeutralize/components/ShortPannel.tsx","assets/svg/neutralize.svg","views/ShortNeutralize/components/NeutralizeEstimatedDashBoard.tsx","views/ShortNeutralize/components/icon/WarnRedIcon.tsx","views/ShortNeutralize/components/icon/WarnGrayIcon.tsx","views/ShortNeutralize/components/NeutralizeRight.tsx","views/ShortNeutralize/components/NeutralizeImg.tsx","views/ShortNeutralize/index.tsx","hooks/useHashPowerToken.ts","components/Logo.tsx","state/Short/hooks.ts","hooks/useApprove.ts","config/constants/thresholdValue.ts"],"names":["ActionButton","styled","Button","_templateObject","_taggedTemplateLiteral","SliderWrapper","_templateObject2","SlidtRangeWrapper","_templateObject3","props","value","concat","PrettoSlider","Slider","_templateObject4","PrettoSlidertwo","_templateObject5","MarkSlider","_templateObject6","waistyle","display","justifyContent","alignItems","BtleftCard","Card","_templateObject7","BtrightCard","_templateObject8","InputBox","_templateObject9","pendingStyle","tableHeader","fontSize","fontWeight","color","tableHeadCell","pl","pr","pb","tableBody","borderBottom","tableBodyRow","border","transition","backgroundColor","tableBodyCell","height","cursor","clearAll","textTransform","borderRadius","ShortPageWraperStyle","box","width","overflow","overflowX","topBox","ActionPanelStyle","addAdnRemoveBtn","background","backgroundSize","TipInfo","_templateObject10","SelectTypeWrap","_templateObject11","CustomizedSlider","rateInfo","setRateInfo","useState","rate","coverage","useEffect","marks1","length","defaultvalue","computedValueRatio","useCallback","val","_value","Infinity","Number","toString","indexOf","replace","computedValueCoverage","useMemo","showInfo","_coverage","_coverage1","_coverage2","_ratio","_ratio1","_jsx","_Fragment","children","_jsxs","className","valueLabelDisplay","marks","max","disabled","defaultValue","sx","TopCard","CtOne","CtTwo","CtLabel","CtLabeltwo","CtValue","PtCt","PtLabel","PtValue","DashboardContent","linevalue","setLine","label","linevaluep","setLinep","currentPosition","currentPositionTokenInfo","usePositionInfo","newCollateralRatio","newPrepaidInterestCoverage","onUpdateNeutralizeValue","useComputedIndexAction","shortAmount","neutralizeAmount","useShortPendingAction","activeInfo","useShortActiveAction","useShortInfo","load","setLoad","activeTab","TokenUtils","formatTokenAmount","showValue","markPrice","_currentPositionToken","tokenPrice","toLargeUnits","mintTokenInfo","symbol","price","settlementCurrency","decimals","tokenType","TokenType","NEUTRALIZE","amount","formatFourDecimals","balance","style","marginTop","LinearIndeterminate","BalanceDisplay","_ref","state","token","clearActive","setActionInfo","setActiveAmount","Box","p","onClick","SUPPLY","WithDraw","CloseIcon","Typography","mt","textOverflow","whiteSpace","textAlign","ActionPanel","_ref2","_pendingTokenTypes$ge","_pendingTokenTypes$ge2","pendingTokenTypes","tokenAmount","walletTokenBalance","useHashPowerToken","disabeldAction","get","includes","IconButton","AddIcon","CollateralList","pendingActionList","_map","Map","forEach","item","_tokenType","push","set","allowedAssets","allowedTokens","tokens","balances","Object","keys","map","key","_tokens","_tokens2","_tokens5","_tokens6","address","icon","_tokens3","_tokens4","Logo","imgprops","marginRight","logo","toWbtc","rowVa","TableContainer","component","Paper","boxShadow","Table","TableHead","TableRow","TableCell","align","TableBody","row","marginLeft","Fbtc20Icon","WBTC","WBTCIcon","USDT","USDTIcon","wallet","Wallet","avatar","AvatarIcon","TradeSettings","handleClose","anchorEl","open","deadline","maxSlippageValue","setMaxSlippageValue","setDeadlineValue","focusFlag","setFocusFlag","chageFlag","setChangeFlag","chageDedFlag","setChangeDedFlag","Menu","id","onClose","MenuListProps","transformOrigin","horizontal","vertical","anchorOrigin","PaperProps","mb","gap","ml","flex","TextField","placeholder","multiline","maxRows","size","onBlur","onFocus","onChange","e","formattedValue","cleanedValue","target","_parts$","parts","split","slice","join","parseFloat","variant","fullWidth","InputProps","disableUnderline","padding","endAdornment","InputAdornment","position","mr","ShortEstimatedDashBoard","chainId","useWeb3React","tokenPools","useSystemParams","supplyAllAmount","collateralIndex","onUpdateCollateralValue","newOutStandingDebt","newEstimatedDailyDebt","newDisplayCollateralRatio","displayDatas","current","next","prepaidInterestNewVal","ShortThresholdValue","days","displayIndex","POSITIVE_INFINITY","prepaidInterestCoverage","collateralRatio","walletData","displayRatio","title","DataIndexName","CollateralRatio","type","upVal","downVal","PrepaidInterestCoverage","displayCoverage","PrepaidInterest","prepaidInterest","positionStatus","estimatedDailyDebt","colorValue","redss","ratio","SHORT","bgcolor","flexDirection","SubdirectoryArrowRightIcon","AvailableText","AvailableBox","getFullNum","num","decimal","isNaN","str","test","toFixed","ActionList","hoveredRow","setHoveredRow","clearAllPendingAction","deletePendingAction","setActionIndex","currentMintToken","handleMouseLeave","index","onMouseEnter","handleMouseEnter","onMouseLeave","Badge","overlap","badgeContent","ActionType","ADD","RemoveIcon","minWidth","minHeight","bottom","right","borderWidth","borderColor","borderStyle","IconMap","stopPropagation","opacity","ClearIcon","ShortTransactionPanel","_localStorage$getItem","_activeInfo$token2","setAnchorEl","localStorage","getItem","approveFlag","setApproveFlag","mintSellHelpContract","signer","toastError","toastSuccess","toastInfo","useToast","onApprove","approveStatus","checkApproveLoading","useShortActiveTokenApprove","addPendingAction","updatePendingAction","onChangeCollateralIndex","handleUpdatePosition","usePositionAction","_tokenList","filter","chainConfigs","valueToKeyMap","_tokenAmounts","toSmallUnits","_shortAmount","action","amountOut","getSwapQuote","String","Boolean","computedRate","async","previewPositionInfoAfterShort","targetCollateralRatio","result","positionAddress","toNumber","submitShort","inter","utils","Interface","contracts","actionMintSell","abi","data","encodeFunctionData","Date","now","posContract","ethers","Contract","PositionABI","txInfo","delegateCall","undefined","hash","ToastTitle","submited","TransactionSubmittedInfo","content","txHash","wait","confirmations","success","error","failed","reason","disabledAddAction","_balance","condition1","condition2","actionAmount","MAX_SAFE_INTEGER","disabledSubmit","isUpdate","activeIndex","availableShowFlag","setAvailableShowFlag","handleAction","amountInDecimals","amountIn","BigNumber","from","tx","receipt","status","TransactionSuccessInfo","transactionHash","err","event","currentTarget","SetIcon","setItem","readOnly","paddingLeft","onMax","_activeInfo$token","disableElevation","ShortPannel","NeutralizeEstimatedDashBoard","neutralizeType","newNeutralizeFee","newDisplayPrepaidInterestCoverage","avatarAssetList","reduce","acc","downValColor","walletWbtc","avatarWbtc","colors","WarnRedIcon","viewBox","fill","xmlns","d","fillRule","clipRule","WarnGrayIcon","TableBox","setNeutralizeType","deleteNeutralizePendingAction","ActionUser","ActionUserInterface","NeutralizeRightBox","_activeInfo$amount","setRefresh","updateNeutralizePendingAction","setActiveTab","neutralizeLoading","setNeutralizeLoading","setDisabledAction","maxValue","disableFlag","submitDisable","haveTokenFlag","some","onNeutralize","resData","info","estimateNeutralizeFeeWarningFlag","tokenAmountBalanceWarningFlag","walletNeutralizeFeeWarningFlag","neutralize","find","it","console","log","onKeyUp","tabIndex","role","ImgBox","OrderWrap","Text","CustomButton","NeutralizetBox","src","NeutralizeImg","alt","Link","to","Wrapper","Tip","DashboardPage","useAppSelector","short","_shortInfo","pageActiveTab","setPageActiveTab","handleChangeCurrentPosition","mintTokens","isSupportedChainId","mintTokenChainConfigs","BTitle","Select","selectValue","options","isGroup","isEnable","ArrowLine","NeutralizeBox","memo","hashPowerToken","useContext","HashPowerTokenContext","Error","_props$imgprops","account","onCheckApprove","useCheckApprove","handleApprove","useApprove","setApproveStatus","setCheckApproveLoading","then","res","_hex","catch","finally","dispatch","useAppDispatch","activeAmount","arguments","updateActionInfo","_index","findIndex","updateActiveActionIndex","updateActiveTab","updateActiveAmount","_activeInfo","updateShortRateInfo","pendingActions","_pendingActions","_actions","setShortPendingAction","actions","_nextList","splice","i","Array","values","flat","_obg","_amount","supplyAmount","items","active","spender","contract","getContract","ERC20","allowance","owner","library","getSigner","approve","constants","MaxUint256","LiquidationThresholdValue"],"mappings":"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","file":"static/js/18.c4a4080c.chunk.js","sourcesContent":["import { Button, Slider, styled } from '@mui/material'\nimport Card from 'components/Card'\n\nexport const ActionButton = styled(Button)`\n  height: 32px;\n  padding: 0 16px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 32px;\n  border-radius: 20px;\n  text-transform: none;\n  color: rgba(0, 0, 0, 1);\n  background: linear-gradient(90deg, rgba(97, 194, 247, 1) 0%, rgba(122, 233, 240, 1) 100%);\n`\n\n// wrapper for slider\nexport const SliderWrapper = styled('div')`\n  .MuiSlider-markLabel {\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='1'] {\n      transform: translateX(-100%) !important;\n    }\n    &[data-index='2'] {\n      font-weight: bold;\n      transform: translateX(0) !important;\n    }\n  }\n`\nexport const SlidtRangeWrapper = styled('div')<{ value: string | number }>`\n  position: relative;\n  width: 100%;\n\n  .custom_range_flag {\n    font-size: 12px;\n    transform: translateX(-50%);\n    position: absolute;\n    top: 6px;\n    left: ${(props) =>\n      (props.value as number) > 300 || props.value === '+∞'\n        ? 'calc(100% - 5%)'\n        : `calc((100% - 5%) / 300 * ${props.value})`};\n    height: 24px;\n    width: fit-content;\n    box-shadow: 0 4px 15px 1px rgba(0, 0, 0, 0.07);\n    background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n\n    box-shadow: 0 4px 4px rgba(42, 161, 255, 0.25);\n    border-radius: 23px;\n    padding: 0 5px;\n    line-height: 24px;\n    &::before {\n      position: absolute;\n      content: '';\n      left: 2px;\n      top: 2px;\n      right: 2px;\n      bottom: 2px;\n      background-color: #fff;\n      border-radius: 20px;\n    }\n    .range_val {\n      position: relative;\n      z-index: 1;\n    }\n  }\n  &.feature_item {\n    .custom_range_flag {\n      top: -26px;\n    }\n  }\n`\nexport const PrettoSlider = styled(Slider)`\n  height: 10px;\n  width: 95%;\n\n  .MuiSlider-valueLabel:before {\n    display: none;\n  }\n  .MuiSlider-valueLabel {\n    height: 24px;\n    width: 36px;\n    font-size: 12px;\n    background-color: #fff;\n    border-radius: 20px;\n    border: 2px solid #61c2f7;\n    color: #000;\n    transform: translate(0, 10px) !important;\n  }\n  .MuiSlider-rail {\n    background: rgba(212, 230, 242, 1);\n  }\n\n  .MuiSlider-track {\n    border: none;\n    background: linear-gradient(-90deg, #8cdb65, #ffcc04 40%, #ff6308);\n  }\n\n  .MuiSlider-thumb {\n    display: none;\n    height: 24px;\n    width: 24px;\n    box-shadow: 0 4px 15px 1px rgba(0, 0, 0, 0.07);\n    background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n\n    &:focus,\n    &:hover,\n    &.Mui-active,\n    &.Mui-focusVisible {\n      box-shadow: inherit;\n    }\n\n    &::before {\n      background-color: #fff;\n      width: 20px;\n      height: 20px;\n      left: calc(50% - 10px);\n      top: calc(50% - 10px);\n    }\n    &::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background: #2aa1ff;\n      box-shadow: 0 4px 4px rgba(42, 161, 255, 0.25);\n    }\n  }\n\n  .MuiSlider-mark {\n    &[data-index='0'] {\n      opacity: 0;\n    }\n    &[data-index='3'] {\n      display: none !important;\n    }\n\n    top: 5px;\n    height: 7.5px;\n    background-color: #969696;\n  }\n\n  .MuiSlider-markLabel {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='0'] {\n      left: 10px !important;\n    }\n    &[data-index='2'] {\n      font-weight: bold;\n      transform: translateX(0) !important;\n    }\n    &[data-index='1'] {\n      transform: translateX(-100%) !important;\n    }\n  }\n`\nexport const PrettoSlidertwo = styled(Slider)`\n  height: 10px;\n  width: 95%;\n  margin-top: -30px;\n  transition: all 0.3s ease;\n  .css-1kz0hui-MuiSlider-valueLabel:before {\n    display: none;\n  }\n  .css-1kz0hui-MuiSlider-valueLabel {\n    height: 24px;\n    width: 36px;\n    font-size: 12px;\n    background-color: #fff;\n    border-radius: 20px;\n    border: 2px solid #61c2f7;\n    color: #000;\n    transform: translate(0, 10px);\n  }\n  .MuiSlider-rail {\n    background: rgba(212, 230, 242, 1);\n  }\n\n  .MuiSlider-track {\n    border: none;\n    background: linear-gradient(-90deg, #8cdb65, #ffcc04 40%, #ff6308);\n  }\n\n  .MuiSlider-thumb {\n    display: none;\n    height: 24px;\n    width: 24px;\n    box-shadow: 0 4px 15px 1px rgba(0, 0, 0, 0.07);\n    background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n\n    &:focus,\n    &:hover,\n    &.Mui-active,\n    &.Mui-focusVisible {\n      box-shadow: inherit;\n    }\n\n    &::before {\n      background-color: #fff;\n      width: 20px;\n      height: 20px;\n      left: calc(50% - 10px);\n      top: calc(50% - 10px);\n    }\n\n    &::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      border-radius: 50%;\n      background: #2aa1ff;\n      box-shadow: 0 4px 4px rgba(42, 161, 255, 0.25);\n    }\n  }\n  .MuiSlider-mark {\n    display: none !important;\n  }\n  .MuiSlider-markLabel {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='0'] {\n      left: 10px !important;\n    }\n    &[data-index='2'] {\n      font-weight: bold;\n      transform: translateX(0) !important;\n      color: rgba(0, 0, 0, 1) !important;\n    }\n    &[data-index='1'] {\n      transform: translateX(-100%) !important;\n    }\n  }\n`\nexport const MarkSlider = styled(Slider)`\n  padding-bottom: 20px;\n  padding-top: 10px;\n  margin-top: -20px;\n  height: 0;\n  width: 95%;\n\n  .MuiSlider-rail {\n    display: none;\n  }\n\n  .MuiSlider-track {\n    display: none;\n  }\n\n  .MuiSlider-thumb {\n    display: none;\n  }\n\n  .MuiSlider-mark {\n    display: none;\n  }\n  .MuiSlider-markLabel {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 1) !important;\n\n    &[data-index='2'] {\n      font-weight: bold;\n      color: rgba(0, 0, 0, 1) !important;\n    }\n  }\n`\n\nexport const waistyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'start',\n}\nexport const BtleftCard = styled(Card)`\n  margin-bottom: 20px;\n  display: block;\n  width: 58%;\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  backdrop-filter: unset;\n`\nexport const BtrightCard = styled(Card)`\n  margin-bottom: 20px;\n  display: flex;\n  width: 40%;\n  /* opacity */\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  backdrop-filter: unset;\n`\n\nexport const InputBox = styled('div')`\n  width: 100%;\n  input {\n    width: 100%;\n    border: unset;\n    outline: unset;\n    background-color: unset;\n    font-family: PingFang SC;\n    font-size: 24px;\n    font-weight: 600;\n    line-height: 33.6px;\n    text-align: left;\n    color: rgba(0, 0, 0, 1);\n  }\n  input::-webkit-inner-spin-button {\n    display: none;\n  }\n  input::placeholder {\n    color: rgba(0, 0, 0, 0.2);\n  }\n`\n\nexport const pendingStyle = {\n  tableHeader: { fontSize: 12, fontWeight: 500, color: 'rgba(0, 0, 0, 0.6)' },\n  tableHeadCell: { pl: 0, pr: 0, pb: 0 },\n  tableBody: { borderBottom: '1px solid rgba(47, 0, 0, 0.13)' },\n  tableBodyRow: {\n    '&:last-child td, &:last-child th': { border: 0 },\n    transition: 'all 0.3s',\n    ':hover': {\n      backgroundColor: 'rgba(110, 214, 243, 0.13)',\n    },\n  },\n  tableBodyCell: { display: 'flex', alignItems: 'center', pl: 1, pr: 0, height: 66, cursor: 'pointer' },\n\n  clearAll: {\n    textTransform: 'none', // 覆盖默认的uppercase样式\n    borderRadius: 1.8,\n    color: 'rgba(110, 214, 243, 1)',\n  },\n}\n\nexport const ShortPageWraperStyle = {\n  box: {\n    width: '100%',\n    overflow: 'hidden',\n    overflowX: 'scroll',\n    '&::-webkit-scrollbar': {\n      height: '8px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#888',\n      borderRadius: '4px',\n    },\n    '&::-webkit-scrollbar-track:hover': {\n      backgroundColor: '#f1f1f1',\n    },\n    '&::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#555',\n    },\n  },\n  topBox: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    pb: 3,\n  },\n}\n\nexport const ActionPanelStyle = {\n  addAdnRemoveBtn: {\n    color: '#000',\n    width: 32,\n    height: 32,\n    background: `linear-gradient(90deg, #29A0FF 0%, #7AE8F1 100%)`,\n    backgroundSize: '100% 100%',\n  },\n}\n\nexport const TipInfo = styled('div')`\n  display: flex;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  padding: 16px 20px;\n  margin-top: 10px;\n  p {\n    line-height: 20px;\n    font-size: 14px;\n    font-family: PingFangSC-Regular, sans-serif;\n    margin-left: 16px;\n    color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nexport const SelectTypeWrap = styled('div')`\n  margin-top: 34px;\n  .title-neutralize {\n    font-size: 16px;\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-bottom: 16px;\n    font-size: 500;\n  }\n  .content {\n    display: flex;\n  }\n  .item_wrap {\n    min-width: 200px;\n    padding: 1px;\n    border-radius: 14px;\n    overflow: hidden;\n    margin-right: 16px;\n    background: #e3e8ed;\n    cursor: pointer;\n    user-select: none;\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      color: rgba(0, 0, 0, 0.5);\n      font-size: 12px;\n      line-height: 17px;\n      &:first-of-type {\n        margin-right: 30px;\n      }\n    }\n    &.active {\n      padding: 2px;\n      background: linear-gradient(270deg, #7ae9f0 0%, #61c3f7 100%);\n      span {\n        color: #000;\n      }\n    }\n  }\n  .item {\n    border-radius: 12px;\n    //border: 2px solid #E3E8ED;\n    //border-image: linear-gradient(#7AE9F0 , #61C3F7) 30 30;\n    padding: 14px 14px 9px 10px;\n    background: #fff;\n    width: 100%;\n    height: 100%;\n    //box-sizing: border-box;\n    h4 {\n      font-family: PingFangSC-Semibold, sans-serif;\n      font-weight: 550;\n      display: flex;\n      align-items: center;\n      line-height: 20px;\n      font-size: 14px;\n      margin-bottom: 22px;\n      svg {\n        margin-right: 8.5px;\n      }\n    }\n    p {\n      display: flex;\n      justify-content: space-between;\n    }\n  }\n`\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { MarkSlider, PrettoSlider, PrettoSlidertwo, SliderWrapper, SlidtRangeWrapper } from './StyleCommon'\n\nexport default function CustomizedSlider(props: { value: any }) {\n  const { value } = props\n\n  const [rateInfo, setRateInfo] = useState<{\n    rate: number | string\n    coverage: number | string\n  }>({\n    rate: 0,\n    coverage: 0,\n  })\n  useEffect(() => {\n    if (value) {\n      if (value?.marks1 && value?.marks1.length > 0) {\n        setRateInfo({\n          rate: value?.defaultvalue,\n          coverage: 0,\n        })\n      }else {\n        setRateInfo({\n          rate: 0,\n          coverage: value?.defaultvalue,\n        })\n      }\n    }\n  }, [value])\n  const computedValueRatio = useCallback((val: any) => {\n    let _value = val\n\n    if (_value === 'Infinity' || _value === Infinity || _value === '+∞') {\n      return '+∞'\n    }\n\n    _value = Number(_value)\n\n    if (_value === 0 || !_value) {\n      return 0\n    }\n\n    if (_value && _value.toString().indexOf('%') !== -1) {\n      return `${_value.replace(/%/g, '')}%`\n    }\n\n    return `${_value}%`\n  }, [])\n\n  const computedValueCoverage = useMemo(() => {\n    const _value = rateInfo.coverage\n    if (_value === 'Infinity' || _value === Infinity || _value === '+∞') {\n      return '+∞'\n    }\n\n    if (_value === 0 || !_value) {\n      return 0\n    }\n\n    return `${_value}`\n  }, [rateInfo.coverage])\n  const showInfo = useMemo(() => {\n    const _coverage =\n      (rateInfo.coverage as any) === 'Infinity' ||\n      (rateInfo.coverage as any) === 'N/A' ||\n      (rateInfo.coverage as any) === Infinity ||\n      rateInfo.coverage === '+∞' ||\n      (rateInfo.coverage as any).toString() === 'NAN' ||\n      Number(rateInfo.coverage) > 300\n        ? 300\n        : Number(rateInfo.coverage)\n\n    const _coverage1 = _coverage > 0 ? _coverage : 0\n\n    const _coverage2 = _coverage1 <= 10 ? _coverage1 * 11 : (_coverage1 - 10) * 6 + 100\n\n    const _ratio =\n      (rateInfo.rate as any) === 'Infinity' ||\n      (rateInfo.rate as any) === Infinity ||\n      rateInfo.rate === '+∞' ||\n      (rateInfo.rate as any).toString() === 'NAN' ||\n      Number(rateInfo.rate) > 300\n        ? 300\n        : rateInfo.rate\n    const _ratio1 = Number(_ratio) > 0 ? _ratio : 0\n    const _ratio2 = Number(_ratio1) <= 110 ? Number(_ratio1) : (Number(_ratio1) - 100) * 3 + 100\n    return {\n      rate: _ratio2,\n      coverage: _coverage2,\n    }\n  }, [rateInfo.coverage, rateInfo.rate])\n  return (\n    <>\n      <div className=\"range_wrap\">\n        <SliderWrapper className=\"custom-slider-wrapper\">\n          <MarkSlider\n            valueLabelDisplay=\"off\"\n            aria-label=\"pretto slider\"\n            value={Number(rateInfo.rate)}\n            marks={value.marks1}\n            max={300}\n          />\n        </SliderWrapper>\n        {value.marks1.length > 0 ? (\n          <SlidtRangeWrapper value={showInfo.rate}>\n            <PrettoSlider\n              disabled\n              aria-label=\"pretto slider\"\n              defaultValue={120}\n              value={showInfo.rate}\n              max={300}\n              valueLabelDisplay=\"on\"\n              marks={value.marks}\n              sx={{\n                \".css-1qlnp9f-MuiSlider-root .MuiSlider-markLabel[data-index='1']\": {\n                  pr: 70,\n                },\n                \".css-1qlnp9f-MuiSlider-root .MuiSlider-markLabel[data-index='2']\": {\n                  pl: 70,\n                },\n              }}\n            />\n            <div className=\"custom_range_flag\">\n              <div className=\"range_val\">{`${computedValueRatio(rateInfo.rate)}`}</div>\n            </div>\n          </SlidtRangeWrapper>\n        ) : (\n          <SlidtRangeWrapper className=\"feature_item\" value={Number(showInfo.coverage)}>\n            <PrettoSlidertwo\n              disabled\n              aria-label=\"pretto slider\"\n              defaultValue={20}\n              value={showInfo.coverage}\n              valueLabelDisplay=\"on\"\n              marks={value.marks}\n              max={300}\n            />\n            <div className=\"custom_range_flag\">\n              <div className=\"range_val\">{computedValueCoverage}</div>\n            </div>\n          </SlidtRangeWrapper>\n        )}\n      </div>\n    </>\n  )\n}\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport Card from 'components/Card'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { useShortPendingAction, useShortInfo, useShortActiveAction } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport LinearIndeterminate from './CustomizedSlider'\n\nconst TopCard = styled(Card)`\n  margin-bottom: 20px;\n  display: flex;\n  height: 175px;\n  width: 100%;\n  box-shadow: 0 4px 27px rgba(0, 0, 0, 0.03);\n  backdrop-filter: unset;\n`\nconst CtOne = styled('div')`\n  width: 30%;\n`\nconst CtTwo = styled('div')`\n  width: 70%;\n`\nconst CtLabel = styled('div')`\n  color: rgba(0, 0, 0, 0.5);\n`\nconst CtLabeltwo = styled('div')`\n  margin-top: 10px;\n  font-size: 12px;\n  color: rgba(0, 0, 0, 0.5);\n`\nconst CtValue = styled('div')`\n  margin-bottom: 14px;\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 35px;\n  margin-top: 24px;\n  line-height: 35px;\n  color: #000000;\n`\nconst PtCt = styled('div')`\n  display: flex;\n`\nconst PtLabel = styled('div')`\n  width: 25%;\n`\nconst PtValue = styled('div')`\n  width: 75%;\n`\nfunction DashboardContent() {\n  const [linevalue, setLine] = useState({\n    marks1: [\n      {\n        value: 0,\n        label: '',\n      },\n      {\n        value: 110,\n        label: 'Liquidation',\n      },\n      {\n        value: 160,\n        label: 'Min. Mint',\n      },\n      {\n        value: 300,\n        label: '',\n      },\n    ],\n    marks: [\n      {\n        value: 0,\n        label: '',\n      },\n      {\n        value: 110,\n        label: '110%',\n      },\n      {\n        value: 160,\n        label: '120%',\n      },\n      {\n        value: 300,\n        label: '',\n      },\n    ],\n  })\n  const [linevaluep, setLinep] = useState({\n    marks1: [],\n    marks: [\n      {\n        value: 0,\n        label: '',\n      },\n      {\n        value: 110,\n        label: '10',\n      },\n\n      {\n        value: 160,\n        label: '20',\n      },\n      {\n        value: 300,\n        label: '',\n      },\n    ],\n  })\n  const { currentPosition, currentPositionTokenInfo } = usePositionInfo()\n  const { newCollateralRatio, newPrepaidInterestCoverage, onUpdateNeutralizeValue } = useComputedIndexAction()\n  const { shortAmount, neutralizeAmount } = useShortPendingAction()\n  const { activeInfo } = useShortActiveAction()\n  const { rateInfo } = useShortInfo()\n  const [load, setLoad] = useState(false)\n  const { activeTab } = useShortInfo()\n  useEffect(() => {\n    let { coverage, rate } = rateInfo\n    if (activeTab === 1) {\n      if (shortAmount) {\n        if (rateInfo.rate < 120) {\n          coverage = 'N/A'\n        } else if (rateInfo.rate >= 120 && coverage < 20) {\n          coverage = 20\n        }\n      }\n    } else if (activeTab === 2) {\n      coverage = TokenUtils.formatTokenAmount(newPrepaidInterestCoverage, 0)\n      rate = TokenUtils.formatTokenAmount(newCollateralRatio, 2)\n    }\n\n    setLinep((value) => {\n      return {\n        ...value,\n        defaultvalue: coverage,\n        showValue: coverage,\n      }\n    })\n    setLine((value) => ({\n      ...value,\n      defaultvalue: rate,\n      showValue: rate,\n    }))\n    setLoad(true)\n  }, [activeTab, newCollateralRatio, newPrepaidInterestCoverage, rateInfo, shortAmount])\n\n  const markPrice = useMemo(() => {\n    if (currentPositionTokenInfo.tokenPrice) {\n      return toLargeUnits(\n        currentPositionTokenInfo.tokenPrice[currentPosition.mintTokenInfo.symbol]?.price,\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n    }\n    return 0\n  }, [currentPosition, currentPositionTokenInfo])\n\n  useEffect(() => {\n    if (activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      const val = Number(activeInfo?.amount)\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    } else if (neutralizeAmount && activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      const val = Number(neutralizeAmount)\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    }\n  }, [activeInfo, onUpdateNeutralizeValue, neutralizeAmount, activeTab])\n\n  return (\n    <>\n      <TopCard>\n        <CtOne>\n          <CtLabel>Outstanding Debt</CtLabel>\n          <CtValue>\n            {TokenUtils.formatFourDecimals(\n              Number(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals)),\n            )}\n          </CtValue>\n          <CtLabeltwo>Mark Price: {markPrice} WBTC</CtLabeltwo>\n        </CtOne>\n        {load && (\n          <CtTwo>\n            <PtCt>\n              <PtLabel style={{ marginTop: '45px' }}>Collateral Ratio</PtLabel>\n              <PtValue>\n                <LinearIndeterminate key={1} value={linevalue} />\n              </PtValue>\n            </PtCt>\n            <PtCt>\n              <PtLabel>Prepaid Interest Coverage</PtLabel>\n              <PtValue>\n                <LinearIndeterminate key={2} value={linevaluep} />\n              </PtValue>\n            </PtCt>\n          </CtTwo>\n        )}\n      </TopCard>\n    </>\n  )\n}\n\nexport default DashboardContent\n","import React, { useCallback, useMemo } from 'react'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport { IconButton, Typography, Box } from '@mui/material'\nimport AddIcon from '@mui/icons-material/Add'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { useShortPendingAction, useShortActiveAction } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { SupportedTokens } from 'config/constants/tokenConfig'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { ActionPanelStyle } from './StyleCommon'\n\nconst BalanceDisplay: React.FC<{ state: 'up' | 'down' | 'close'; val: number | string; token: string }> = ({\n  state,\n  val,\n  token,\n}) => {\n  const { clearActive, setActionInfo, setActiveAmount } = useShortActiveAction()\n  return (\n    <Box\n      sx={{\n        width: 74,\n        height: 32,\n        borderRadius: 10,\n        border: '1px solid rgba(70, 79, 96, 0.2)',\n        color: 'rgba(134, 143, 160, 1)',\n        display: 'flex',\n        alignItems: 'center',\n        background: 'rgba(247, 249, 252, 1)',\n        justifyContent: 'space-between',\n        p: 1,\n        cursor: 'pointer',\n        transition: 'all 0.3s',\n      }}\n      onClick={() => {\n        if (state === 'close') {\n          clearActive()\n        }\n        if (state === 'up') {\n          setActionInfo({ token, tokenType: TokenType.SUPPLY })\n          setActiveAmount(Number(val))\n        }\n        if (state === 'down') {\n          setActionInfo({ token, tokenType: TokenType.WithDraw })\n          setActiveAmount(Number(val))\n        }\n      }}\n    >\n      {state === 'up' && (\n        <span\n          style={{\n            fontWeight: 100,\n            fontSize: '18px',\n          }}\n        >\n          +\n        </span>\n      )}\n      {state === 'close' && <CloseIcon sx={{ width: 12, height: 12 }} />}\n      {state === 'down' && (\n        <span\n          style={{\n            fontWeight: 100,\n            fontSize: '18px',\n          }}\n        >\n          -\n        </span>\n      )}\n      <Typography\n        sx={{\n          fontSize: 10,\n          mt: 0.1,\n          width: '40px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          textAlign: 'right',\n        }}\n      >\n        {val}\n      </Typography>\n    </Box>\n  )\n}\n\nconst ActionPanel: React.FC<{\n  pendingTokenTypes: Map<string, TokenType[]>\n  symbol: string\n  tokenAmount: { [key: string]: number }\n}> = ({ pendingTokenTypes, symbol, tokenAmount }) => {\n  const { activeInfo, setActionInfo } = useShortActiveAction()\n  const { walletTokenBalance } = useHashPowerToken()\n\n  const disabeldAction = useMemo(\n    () => walletTokenBalance && walletTokenBalance[symbol] === 0,\n    [walletTokenBalance, symbol],\n  )\n  if (\n    activeInfo.token === symbol &&\n    (activeInfo.tokenType === TokenType.SUPPLY || activeInfo.tokenType === TokenType.WithDraw)\n  ) {\n    return <BalanceDisplay token={symbol} state=\"close\" val={activeInfo.tokenType} />\n  }\n  if (pendingTokenTypes.get(symbol)?.includes(TokenType.SUPPLY)) {\n    return <BalanceDisplay token={symbol} state=\"up\" val={tokenAmount[symbol]} />\n  }\n  if (pendingTokenTypes.get(symbol)?.includes(TokenType.WithDraw)) {\n    return <BalanceDisplay token={symbol} state=\"down\" val={tokenAmount[symbol]} />\n  }\n  return (\n    <>\n      <IconButton\n        disabled={disabeldAction}\n        onClick={() => {\n          if (disabeldAction) return\n          setActionInfo({ token: symbol, tokenType: TokenType.SUPPLY })\n        }}\n        sx={ActionPanelStyle.addAdnRemoveBtn}\n      >\n        <AddIcon sx={{ fontSize: 16 }} />\n      </IconButton>\n      {/* <IconButton\n                      disabled={false}\n                      sx={ActionPanelStyle.addAdnRemoveBtn}\n                    >\n                      <RemoveIcon sx={{ fontSize: 16 }} />\n                    </IconButton> */}\n    </>\n  )\n}\nconst CollateralList: React.FC = () => {\n  const { walletTokenBalance } = useHashPowerToken()\n\n  const { pendingActionList, tokenAmount } = useShortPendingAction()\n\n\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActionList.forEach((item) => {\n      const _tokenType = _map.get(item.token) || []\n      _tokenType.push(item.tokenType)\n      _map.set(item.token, _tokenType)\n    })\n    return _map\n  }, [pendingActionList])\n  const { currentPositionTokenInfo, currentPosition } = usePositionInfo()\n  const allowedAssets = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { tokens, balances } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(tokens).map((key) => {\n        return {\n          symbol: tokens[key as SupportedTokens]?.symbol,\n          address: tokens[key as SupportedTokens]?.address,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={tokens[key as SupportedTokens]?.logo}\n              symbol={tokens[key as SupportedTokens]?.symbol}\n            />\n          ),\n          decimals: tokens[key as SupportedTokens]?.decimals,\n          balance: toLargeUnits(\n            balances[key as SupportedTokens] || 0,\n            tokens[key as SupportedTokens]?.decimals,\n            true,\n          ) as number,\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo])\n\n  const toWbtc = useCallback(\n    (rowVa: any) => {\n      const price = currentPositionTokenInfo.tokenPrice[rowVa.symbol]?.price\n      return price\n        ? rowVa.balance *\n            (toLargeUnits(price, currentPosition.mintTokenInfo.settlementCurrency.decimals, true) as number)\n        : 0\n    },\n    [currentPosition.mintTokenInfo.settlementCurrency.decimals, currentPositionTokenInfo.tokenPrice],\n  )\n\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Table sx={{}} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={{ fontSize: 12, fontWeight: 500, color: 'rgba(0, 0, 0, 0.6)' }}>\n            <TableCell sx={{ pl: 0, pr: 0 }}>Collateral Asset</TableCell>\n            <TableCell align=\"right\" sx={{ pl: 0, pr: 0 }}>\n              Collateral Balance\n            </TableCell>\n            <TableCell align=\"right\" sx={{ pl: 0, pr: 0 }}>\n              {null}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allowedAssets.map((row) => {\n            return (\n              <TableRow\n                key={row.symbol}\n                sx={{ '&:last-child td, &:last-child th': { border: 0, transition: 'all 0.3s' } }}\n              >\n                <TableCell sx={{ display: 'flex', alignItems: 'center', pl: 0, pr: 0, height: 66 }}>\n                  <row.icon />\n                  <div\n                    style={{\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <Typography sx={{ fontWeight: 600 }}>{row.symbol}</Typography>\n                    <Typography sx={{ fontSize: 12, color: 'rgba(0, 0, 0, 0.5)' }}>\n                      {row.symbol} {TokenUtils.formatFourDecimals(walletTokenBalance[row.symbol])} in wallet\n                    </Typography>\n                  </div>\n                </TableCell>\n                <TableCell align=\"right\" sx={{ p: 0, height: 66, transition: 'all 0.3s' }}>\n                  <Typography sx={{ fontSize: 14 }}>{TokenUtils.formatFourDecimals(row.balance)}</Typography>\n                  {walletTokenBalance[row.symbol] !== 0 && (\n                    <Typography sx={{ fontSize: 12, color: 'rgba(53, 5, 5, 0.5)' }}>\n                      {TokenUtils.formatFourDecimals(toWbtc(row))}{' '}\n                      {currentPosition.mintTokenInfo.settlementCurrency.symbol}\n                    </Typography>\n                  )}\n                </TableCell>\n                <TableCell sx={{ pl: 0, pr: 0, height: 66 }}>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'flex-end',\n                    }}\n                  >\n                    <ActionPanel pendingTokenTypes={pendingTokenTypes} symbol={row.symbol} tokenAmount={tokenAmount} />\n                  </Box>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\nexport default CollateralList\n","import Wallet from 'components/Menu/icons/Wallet'\nimport { AvatarIcon } from 'components/uikit'\nimport { Fbtc20Icon, WBTCIcon, USDTIcon } from './uikit'\n\n\nexport default {\n  'F(BTC,20)': Fbtc20Icon,\n  'F(BTC,25)': Fbtc20Icon,\n  WBTC: WBTCIcon,\n  USDT: USDTIcon,\n  wallet: Wallet,\n  avatar: AvatarIcon,\n}\n","import { Box, Typography, TextField, InputAdornment } from '@mui/material'\nimport React, { useState } from 'react'\nimport Menu from '@mui/material/Menu'\n\nconst TradeSettings: React.FC<{\n  handleClose: () => void\n  anchorEl: null | HTMLElement\n  open: boolean\n  deadline: any\n  maxSlippageValue: any\n\n  setMaxSlippageValue: (value: any) => void\n  setDeadlineValue: (value: string) => void\n}> = ({ handleClose, anchorEl, open, deadline, maxSlippageValue, setMaxSlippageValue, setDeadlineValue }) => {\n  const [focusFlag, setFocusFlag] = useState(false)\n  const [chageFlag, setChangeFlag] = useState(false)\n  const [chageDedFlag, setChangeDedFlag] = useState(false)\n\n  return (\n    <Menu\n      id=\"basic-menu\"\n      anchorEl={anchorEl}\n      open={open}\n      onClose={handleClose}\n      MenuListProps={{\n        'aria-labelledby': 'basic-button',\n      }}\n      transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      PaperProps={{\n        sx: {\n          width: '288px',\n          boxShadow: 'none',\n          mt: 1.5,\n          borderRadius: 2,\n          border: '1px solid rgba(207, 216, 226, 0.5)',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          pl: 1.2,\n          pr: 1.2,\n          mb: 1,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Typography sx={{ fontSize: 14, fontWeight: 400, color: 'rgba(0, 0, 0, 0.5)' }}>Max.slippage</Typography>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          {/* <Typography sx={{ fontSize: 14, fontWeight: 500 }}>Auto</Typography> */}\n          {/* <KeyboardArrowUpIcon sx={{ width: 16, height: 16 }} /> */}\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          gap: 1,\n          pl: 1.2,\n          pr: 1.2,\n          height: 50,\n          width: 268,\n          alignItems: 'center',\n          ml: '9.6px',\n          border: '1px solid #CFD8E2',\n          borderRadius: 2.6,\n        }}\n      >\n        <Box\n          onClick={() => {\n            setMaxSlippageValue('0.1')\n            setChangeFlag(true)\n          }}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 2.5,\n            background: maxSlippageValue === '0.1' ? 'linear-gradient(270deg, #7AE8F1 0%, #29A0FF 100%)' : '',\n            cursor: 'pointer',\n            height: '42px',\n            width: '42px',\n            fontSize: '12px',\n          }}\n        >\n          0.1%\n        </Box>\n        <Box\n          onClick={() => {\n            setMaxSlippageValue('0.5')\n            setChangeFlag(true)\n          }}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: maxSlippageValue === '0.5' ? 'linear-gradient(270deg, #7AE8F1 0%, #29A0FF 100%)' : '',\n            cursor: 'pointer',\n            borderRadius: 2.5,\n            height: '42px',\n            width: '42px',\n            fontSize: '12px',\n          }}\n        >\n          0.5%\n        </Box>\n        <Box\n          onClick={() => {\n            setMaxSlippageValue('1')\n            setChangeFlag(true)\n          }}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 2.5,\n            background: maxSlippageValue === '1' ? 'linear-gradient(270deg, #7AE8F1 0%, #29A0FF 100%)' : '',\n            cursor: 'pointer',\n            height: '42px',\n            width: '42px',\n            fontSize: '12px',\n          }}\n        >\n          1%\n        </Box>\n        <Box\n          sx={{\n            flex: 1.2,\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 2,\n            border:\n              focusFlag ||\n              (maxSlippageValue > 0 &&\n                maxSlippageValue !== '0.5' &&\n                maxSlippageValue !== '0.1' &&\n                maxSlippageValue !== '1')\n                ? '1px solid rgba(110, 214, 243, 1)'\n                : '1px solid rgba(207, 216, 226, 0.5)',\n            p: 1,\n          }}\n        >\n          <TextField\n            placeholder=\"1\"\n            multiline\n            maxRows={5}\n            size=\"small\"\n            onBlur={() => setFocusFlag(false)}\n            onFocus={() => setFocusFlag(true)}\n            value={maxSlippageValue}\n            onChange={(e) => {\n              const inputValue = e.target.value\n              let formattedValue = ''\n              const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n              if (cleanedValue.includes('.')) {\n                const parts = cleanedValue.split('.')\n                parts[1] = parts[1]?.slice(0, 2)\n                formattedValue = parts.join('.')\n              } else {\n                formattedValue = cleanedValue\n              }\n              setChangeFlag(true)\n\n              if (Number(e.target.value) < 0 || e.target.value === '') {\n                setMaxSlippageValue('0')\n                return\n              }\n              if (Number(e.target.value) > 49.9) {\n                setMaxSlippageValue('49.9')\n                return\n              }\n              setMaxSlippageValue(\n                formattedValue.includes('.') ? formattedValue.toString() : parseFloat(formattedValue).toString(),\n              )\n            }}\n            sx={{\n              '& .MuiInputBase-input': {\n                textAlign: 'right',\n                color: !chageFlag ? 'rgb(0 0 0 / 20%)' : '',\n              },\n              '& .MuiInputBase-input::placeholder': {\n                textAlign: 'right',\n              },\n            }}\n            variant=\"standard\"\n            fullWidth\n            InputProps={{\n              disableUnderline: true,\n              sx: {\n                padding: 0,\n              },\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Typography sx={{ textAlign: 'left', fontSize: 14, fontWeight: 400, color: 'rgba(0,0,0,1)' }}>\n                    %\n                  </Typography>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          pl: 1.2,\n          pr: 1.2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mt: 2,\n          mb: 1,\n        }}\n      >\n        <Typography sx={{ fontSize: 14, fontWeight: 400, color: 'rgba(0, 0, 0, 0.5)' }}>\n          Transaction deadline\n        </Typography>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          {/* <Typography sx={{ fontSize: 14, fontWeight: 500 }}>10m</Typography>\n          <KeyboardArrowUpIcon sx={{ width: 16, height: 16 }} /> */}\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          height: 50,\n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          borderRadius: 2,\n          border: '1px solid rgba(207, 216, 226, 0.5)',\n          p: 1,\n          ml: 1.2,\n          mr: 1.2,\n        }}\n      >\n        <TextField\n          placeholder=\"10\"\n          multiline\n          maxRows={5}\n          size=\"small\"\n          value={deadline}\n          onChange={(e) => {\n            setChangeDedFlag(true)\n            setDeadlineValue(e.target.value)\n          }}\n          sx={{\n            '& .MuiInputBase-input': {\n              textAlign: 'right',\n              color: !chageDedFlag ? 'rgb(0 0 0 / 20%)' : '',\n            },\n            '& .MuiInputBase-input::placeholder': {\n              textAlign: 'right',\n            },\n          }}\n          variant=\"standard\"\n          fullWidth\n          InputProps={{\n            disableUnderline: true,\n            sx: {\n              padding: 0,\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Typography sx={{ fontSize: 14, fontWeight: 400, color: 'rgba(0, 0, 0, 1)' }}>minutes</Typography>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Box>\n    </Menu>\n  )\n}\n\nexport default TradeSettings\n","import { Box, Typography } from '@mui/material'\nimport React, { useCallback, useEffect, useMemo } from 'react'\nimport SubdirectoryArrowRightIcon from '@mui/icons-material/SubdirectoryArrowRight'\nimport { useWeb3React } from 'web3-react-core'\nimport useSystemParams from 'hooks/useSystemParams'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { useShortActiveAction, useShortPendingAction, useShortInfo } from 'state/Short/hooks'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { useComputedIndexAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { DataIndexName } from 'config/constants/contants'\nimport { ShortThresholdValue } from 'config/constants/thresholdValue'\n\nconst ShortEstimatedDashBoard: React.FC = () => {\n  const { chainId } = useWeb3React()\n  const { tokenPools } = useSystemParams()\n\n  const { supplyAllAmount, shortAmount } = useShortPendingAction()\n  const { activeInfo } = useShortActiveAction()\n  const { rateInfo } = useShortInfo()\n\n  const { collateralIndex, currentPosition } = usePositionInfo()\n  const {\n    onUpdateNeutralizeValue,\n    onUpdateCollateralValue,\n    newOutStandingDebt,\n    newEstimatedDailyDebt,\n    newDisplayCollateralRatio,\n    newPrepaidInterestCoverage,\n  } = useComputedIndexAction()\n  const displayDatas = useMemo(() => {\n    const { decimals, settlementCurrency } = currentPosition.mintTokenInfo\n    const current = TokenUtils.formatFourDecimals(Number(toLargeUnits(currentPosition.balance, decimals)))\n    const _new = TokenUtils.formatFourDecimals(Number(toLargeUnits(newOutStandingDebt, decimals)))\n    return {\n      current,\n      next: _new,\n      newDisplayCollateralRatio,\n      newEstimatedDailyDebt: TokenUtils.formatTokenAmount(\n        newEstimatedDailyDebt / 10 ** settlementCurrency.decimals,\n        settlementCurrency.decimals,\n      ),\n    }\n  }, [\n    currentPosition.balance,\n    currentPosition.mintTokenInfo,\n    newDisplayCollateralRatio,\n    newEstimatedDailyDebt,\n    newOutStandingDebt,\n  ])\n  const prepaidInterestNewVal = useMemo(() => {\n    if (rateInfo.rate >= 120 && rateInfo.coverage < 20) {\n      const minPI = TokenUtils.formatTokenAmount(\n        Number(displayDatas.newEstimatedDailyDebt) * ShortThresholdValue.days,\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n      return minPI\n    }\n    return newPrepaidInterestCoverage\n  }, [\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    displayDatas.newEstimatedDailyDebt,\n    newPrepaidInterestCoverage,\n    rateInfo.coverage,\n    rateInfo.rate,\n  ])\n  const displayIndex = useMemo(() => {\n    let { coverage, rate } = rateInfo\n    if (shortAmount) {\n      if (rateInfo.rate < 120) {\n        coverage = 0\n      } else if (rateInfo.rate >= 120 && coverage < 20) {\n        coverage = 20\n      } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n        coverage = Number.POSITIVE_INFINITY\n      }\n    } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n      coverage = Number.POSITIVE_INFINITY\n    } else {\n      coverage = collateralIndex.prepaidInterestCoverage\n    }\n    if (rateInfo.rate) {\n      if (rateInfo.rate === Number.POSITIVE_INFINITY || rateInfo.rate === 'Infinity') {\n        rate = Number.POSITIVE_INFINITY\n      }\n    } else {\n      rate = collateralIndex.collateralRatio\n    }\n\n    return {\n      rate,\n      coverage,\n    }\n  }, [collateralIndex.collateralRatio, collateralIndex.prepaidInterestCoverage, rateInfo, shortAmount])\n\n  const walletData = useMemo(() => {\n    let { coverage, rate } = rateInfo\n    if (shortAmount) {\n      if (rateInfo.rate < 120) {\n        coverage = 'N/A'\n      } else if (rateInfo.rate >= 120 && coverage < 20) {\n        coverage = `${20} days`\n      } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n        coverage = '+∞'\n      } else {\n        coverage = `${coverage} days`\n      }\n    } else if (coverage === Number.POSITIVE_INFINITY || coverage === 'Infinity') {\n      coverage = '+∞'\n    } else {\n      coverage = `${coverage} days`\n    }\n    if (rateInfo.rate) {\n      if (rateInfo.rate === Number.POSITIVE_INFINITY || rateInfo.rate === 'Infinity') {\n        rate = '+∞'\n      } else {\n        rate = `${rateInfo.rate}%`\n      }\n    } else {\n      rate = collateralIndex.displayRatio\n    }\n\n    return [\n      {\n        id: 1,\n        title: DataIndexName.CollateralRatio,\n        type: 'ratio',\n        value: {\n          upVal: collateralIndex.displayRatio,\n          downVal: rate,\n        },\n      },\n      {\n        id: 2,\n        title: DataIndexName.PrepaidInterestCoverage,\n        type: 'coverage',\n        value: {\n          upVal: collateralIndex.displayCoverage,\n          downVal: coverage,\n        },\n      },\n      {\n        id: 3,\n        title: DataIndexName.PrepaidInterest,\n        type: 'prepaidInterest',\n        value: {\n          upVal: `${TokenUtils.formatTokenAmount(collateralIndex.prepaidInterest, currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `${TokenUtils.formatTokenAmount(Number(prepaidInterestNewVal), currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 4,\n        title: 'Daily Paid Interest Reference',\n        type: 'dailyPaid',\n        value: {\n          upVal: `${toLargeUnits(\n            currentPosition.positionStatus.estimatedDailyDebt,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n          )} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `≈ ${displayDatas.newEstimatedDailyDebt} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 5,\n        title: 'Outstanding Debt',\n        type: 'debt',\n        value: {\n          upVal: displayDatas.current,\n          downVal: `≈ ${displayDatas.next}`,\n        },\n      },\n    ]\n  }, [\n    rateInfo,\n    shortAmount,\n    collateralIndex.displayRatio,\n    collateralIndex.displayCoverage,\n    collateralIndex.prepaidInterest,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPosition.positionStatus.estimatedDailyDebt,\n    prepaidInterestNewVal,\n    displayDatas,\n  ])\n\n  const colorValue = useCallback(\n    (item: any) => {\n      const redss =\n        (item.type === 'ratio' && displayIndex.rate < ShortThresholdValue.ratio) ||\n        (item.type === 'coverage' && displayIndex.coverage < ShortThresholdValue.days)\n          ? '#FF4D00'\n          : '#2AA1FF'\n      return ['prepaidInterest', 'dailyPaid', 'debt'].includes(item.type) ? '#2AA1FF' : redss\n    },\n    [displayIndex.coverage, displayIndex.rate],\n  )\n\n  useEffect(() => {\n    let amount = 0\n    if (activeInfo.token && activeInfo.tokenType === TokenType.SHORT) {\n      amount = Number(activeInfo.amount)\n    } else if (shortAmount) {\n      amount = Number(shortAmount)\n    }\n\n    onUpdateNeutralizeValue(amount)\n  }, [activeInfo, onUpdateNeutralizeValue, shortAmount])\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'rgba(222, 241, 255, 1)',\n        borderRadius: 1.8,\n        mt: 4,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 1.2,\n      }}\n    >\n      {walletData.map((item: any) => {\n        return (\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} key={item.id}>\n            <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.5)' }}>{item.title}</Typography>\n\n            <Box>\n              <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.6)', textAlign: 'right' }}>\n                {item.value.upVal}\n              </Typography>\n              {((shortAmount || supplyAllAmount) && (\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'end', textAlign: 'right' }}>\n                  <SubdirectoryArrowRightIcon sx={{ color: 'rgba(0,0,0,0.1)', width: 12, height: 12 }} />\n                  <Typography\n                    sx={{\n                      fontSize: 10,\n                      color: colorValue(item),\n                    }}\n                  >\n                    {item.value.downVal}\n                  </Typography>\n                </Box>\n              )) ||\n                null}\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\nexport default ShortEstimatedDashBoard\n","import {\n  Box,\n  Typography,\n  IconButton,\n  Button,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  Badge,\n} from '@mui/material'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Fbtc20Icon, SetIcon } from 'components/uikit'\nimport AddIcon from '@mui/icons-material/Add'\nimport RemoveIcon from '@mui/icons-material/Remove'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport {\n  useShortActiveAction,\n  useShortActiveTokenApprove,\n  useShortPendingAction,\n  useShortInfo,\n} from 'state/Short/hooks'\nimport tokens from 'config/constants/tokens'\nimport useSystemParams from 'hooks/useSystemParams'\nimport { useWeb3React } from 'web3-react-core'\nimport contracts from 'config/constants/contracts'\nimport { BigNumber, ethers, utils } from 'ethers'\nimport IconMap from 'components/IconMap'\nimport { ActionType, TokenType } from 'state/Short/shortSlice'\nimport useToast from 'hooks/useToast'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport styled from 'styled-components'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { getSwapQuote } from 'config/constants/pool'\nimport { chainConfigs, SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport PositionABI from 'config/abi/Position.json'\nimport { ToastTitle } from 'config/constants/contants'\nimport { TransactionSubmittedInfo, TransactionSuccessInfo } from 'components/TransactionInfo'\nimport { SupportedChainId } from 'config/constants/chains'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport TradeSettings from './TradeSettings'\nimport ShortEstimatedDashBoard from './ShortEstimatedDashBoard'\nimport { ActionButton, InputBox, pendingStyle } from './StyleCommon'\n\nconst AvailableText = styled('div')`\n  font-family: PingFang SC;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16.8px;\n  text-align: right;\n`\nconst AvailableBox = styled('div')`\n  position: absolute;\n  top: 33px;\n`\nconst getFullNum = (num, decimal) => {\n  if (Number.isNaN(num)) {\n    return num\n  }\n  const str = `${num}`\n  if (!/e/i.test(str)) {\n    return num\n  }\n  return num.toFixed(decimal).replace(/\\.?0+$/, '')\n}\n\nconst ActionList: React.FC = () => {\n  const [hoveredRow, setHoveredRow] = useState<number>(-1)\n\n  const { clearAllPendingAction, pendingActionList, deletePendingAction } = useShortPendingAction()\n  const { setActionInfo, setActiveAmount, setActionIndex } = useShortActiveAction()\n  const { currentMintToken } = usePositionInfo()\n  const handleMouseEnter = (index: number) => {\n    setHoveredRow(index)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredRow(-1)\n  }\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={pendingStyle.tableHeader}>\n            <TableCell sx={pendingStyle.tableHeadCell}>{pendingActionList.length} Pending Actions</TableCell>\n            <TableCell align=\"right\" sx={pendingStyle.tableHeadCell}>\n              <Button\n                size=\"small\"\n                sx={pendingStyle.clearAll}\n                onClick={() => {\n                  clearAllPendingAction()\n                }}\n              >\n                Clear All\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody sx={pendingStyle.tableBody}>\n          {pendingActionList.map((row, index) => (\n            <TableRow\n              key={row.tokenType + row.token}\n              sx={pendingStyle.tableBodyRow}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n              onClick={() => {\n                setActionInfo({ token: row.token, tokenType: row.tokenType })\n                setActiveAmount(row.amount)\n                setActionIndex(index)\n              }}\n            >\n              <TableCell sx={pendingStyle.tableBodyCell}>\n                <Badge\n                  color=\"error\"\n                  overlap=\"circular\"\n                  badgeContent={\n                    row.type === ActionType.ADD ? (\n                      <AddIcon sx={{ width: 7, height: 7, color: '#000' }} />\n                    ) : (\n                      <RemoveIcon sx={{ width: 7, height: 7, color: '#000' }} />\n                    )\n                  }\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  sx={{\n                    '.MuiBadge-badge': {\n                      padding: 0,\n                      minWidth: 10,\n                      minHeight: 10,\n                      height: 10,\n                      position: 'absolute',\n                      bottom: '20%',\n                      right: '24%',\n                      backgroundColor: 'rgba(110, 214, 243, 1)',\n                      borderWidth: 1,\n                      borderColor: 'rgba(235, 247, 255, 1)',\n                      borderStyle: 'solid',\n                    },\n                  }}\n                >\n                  {IconMap[row.token]()}\n                </Badge>\n                <Typography sx={{ fontWeight: 600, marginLeft: '5px' }}>\n                  {row.tokenType} {row.token}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" sx={{ p: 0, height: 66 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'end' }}>\n                  <Box>\n                    <Typography sx={{ fontSize: 14 }}>{row.amount}</Typography>\n                    <Typography sx={{ fontSize: 12, color: 'rgba(0, 0, 0, 0.5)' }}>\n                      {row.price} {currentMintToken}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      transition: 'all 0.3s',\n                      width: hoveredRow === index ? 32 : 0,\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        deletePendingAction(row.token, row.tokenType)\n                      }}\n                      sx={{\n                        transition: 'all 0.3s',\n                        opacity: hoveredRow === index ? 1 : 0,\n                        color: 'rgba(0, 0, 0, 1)',\n                      }}\n                    >\n                      <ClearIcon sx={{ width: 16, height: 16 }} />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst ShortTransactionPanel: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const [maxSlippageValue, setMaxSlippageValue] = useState<any>(localStorage.getItem('slippage') ?? '0.5')\n  const [deadline, setDeadlineValue] = useState<any>(10)\n  const [approveFlag, setApproveFlag] = useState(false)\n\n  const { chainId } = useWeb3React()\n  const { mintSellHelpContract, signer, tokenPools } = useSystemParams()\n  const { walletTokenBalance } = useHashPowerToken()\n  const { toastError, toastSuccess, toastInfo } = useToast()\n\n  const { pendingActionList, shortAmount } = useShortPendingAction()\n  const { activeInfo, setActiveAmount, clearActive } = useShortActiveAction()\n  const { onApprove, approveStatus, checkApproveLoading } = useShortActiveTokenApprove()\n\n  const { addPendingAction, updatePendingAction, clearAllPendingAction, pendingTokenTypes } = useShortPendingAction()\n  const { rateInfo, onChangeCollateralIndex } = useShortInfo()\n\n  const { currentPosition, collateralIndex, currentMintToken } = usePositionInfo()\n  const { newPrepaidInterestCoverage, newCollateralRatio, onUpdateCollateralValue, onUpdateNeutralizeValue } =\n    useComputedIndexAction()\n  const { handleUpdatePosition } = usePositionAction()\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onMax = () => {\n    if (activeInfo.tokenType !== 'Short') {\n      setActiveAmount((walletTokenBalance as any)[activeInfo?.token ?? currentMintToken])\n    }\n  }\n\n  const _tokenList = useCallback(() => {\n    return pendingActionList\n      .filter((item) => item.tokenType !== TokenType.SHORT && item.tokenType !== TokenType.NEUTRALIZE)\n      .map((item) => chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[item.token]].address)\n  }, [chainId, pendingActionList])\n\n  const _tokenAmounts = useCallback(() => {\n    return pendingActionList\n      .filter((item) => item.tokenType !== TokenType.SHORT && item.tokenType !== TokenType.NEUTRALIZE)\n      .map((item) =>\n        toSmallUnits(\n          item.amount.toString(),\n          chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[item.token]].decimals,\n        ),\n      )\n  }, [chainId, pendingActionList])\n\n  // When the short value is not added, but collateral is added, update the collateral value.\n  useEffect(() => {\n    let amount = 0\n    let _shortAmount = 0\n    pendingActionList.forEach((action) => {\n      if (action.tokenType === TokenType.SUPPLY) {\n        if (currentPosition.mintTokenInfo.settlementCurrency.symbol === action.token) {\n          const amountOut = action.amount\n          amount += amountOut\n        } else {\n          const amountOut = getSwapQuote(\n            chainId,\n            action.token as unknown as SupportedTokens,\n            currentPosition.mintTokenInfo.settlementCurrency.symbol,\n            toSmallUnits(\n              String(action.amount),\n              chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[action.token]].decimals,\n            ),\n            tokenPools,\n          )\n          amount += Number(toLargeUnits(amountOut, currentPosition.mintTokenInfo.settlementCurrency.decimals))\n        }\n      } else if (action.tokenType === TokenType.SHORT) {\n        _shortAmount = Number(action.amount)\n      }\n    })\n    onUpdateCollateralValue({\n      symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as any,\n      value: amount,\n    })\n\n    onUpdateNeutralizeValue(_shortAmount)\n  }, [\n    chainId,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    onUpdateCollateralValue,\n    onUpdateNeutralizeValue,\n    pendingActionList,\n    tokenPools,\n  ])\n\n  const open = useMemo(() => Boolean(anchorEl), [anchorEl])\n  const computedRate = useMemo(async () => {\n    if (mintSellHelpContract && mintSellHelpContract.previewPositionInfoAfterShort) {\n      if (!shortAmount) {\n        onChangeCollateralIndex({\n          ratio: Number(TokenUtils.formatTokenAmount(newCollateralRatio, 2)),\n          coverage: Number(TokenUtils.formatTokenAmount(newPrepaidInterestCoverage, 0)),\n        })\n        return {\n          targetCollateralRatio: collateralIndex.collateralRatio,\n        }\n      }\n      const result = await mintSellHelpContract.previewPositionInfoAfterShort(\n        currentPosition.positionAddress,\n        toSmallUnits(shortAmount.toString(), currentPosition.mintTokenInfo.decimals),\n        _tokenList(),\n        _tokenAmounts(),\n      )\n      onChangeCollateralIndex({\n        ratio: result.targetCollateralRatio.toNumber() / 100,\n        coverage: Number(TokenUtils.formatTokenAmount(newPrepaidInterestCoverage, 0)),\n      })\n      return result\n    }\n    return { targetCollateralRatio: 0 }\n  }, [\n    mintSellHelpContract,\n    shortAmount,\n    currentPosition.positionAddress,\n    currentPosition.mintTokenInfo.decimals,\n    _tokenList,\n    _tokenAmounts,\n    onChangeCollateralIndex,\n    newPrepaidInterestCoverage,\n    newCollateralRatio,\n    collateralIndex.collateralRatio,\n  ])\n\n  const submitShort = useCallback(async () => {\n    const result = await computedRate\n\n    const inter = new utils.Interface(contracts.actionMintSell.abi)\n    const { decimals } = currentPosition.mintTokenInfo\n    const data = inter.encodeFunctionData('short', [\n      toSmallUnits(shortAmount.toString(), decimals),\n      toSmallUnits(\n        TokenUtils.formatTokenAmount(shortAmount - shortAmount * (maxSlippageValue / 100), decimals),\n        decimals,\n      ),\n      _tokenList(),\n      _tokenAmounts(),\n      result.targetCollateralRatio,\n      Number((Date.now() / 1000).toFixed()) + deadline * 60,\n    ])\n    try {\n      const posContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n      const txInfo = await posContract.delegateCall(contracts.actionMintSell.address[chainId], data)\n      try {\n        if (txInfo !== undefined && txInfo.hash) {\n          toastInfo(\n            ToastTitle.submited,\n            <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={txInfo.hash} />,\n          )\n          const info = await txInfo.wait()\n\n          if (info.confirmations !== 0) {\n            toastSuccess(\n              ToastTitle.success,\n              <TransactionSubmittedInfo content=\"The transaction has been successfully\" txHash={txInfo.hash} />,\n            )\n            clearActive()\n            clearAllPendingAction()\n\n            await handleUpdatePosition()\n          }\n        }\n      } catch (error: any) {\n        toastError(ToastTitle.failed, error.reason)\n      }\n    } catch (error: any) {\n      toastError(ToastTitle.failed, error.reason)\n    }\n  }, [\n    _tokenAmounts,\n    _tokenList,\n    chainId,\n    clearActive,\n    clearAllPendingAction,\n    computedRate,\n    currentPosition.mintTokenInfo,\n    currentPosition.positionAddress,\n    deadline,\n    handleUpdatePosition,\n    maxSlippageValue,\n    shortAmount,\n    signer,\n    toastError,\n    toastInfo,\n    toastSuccess,\n  ])\n\n  const disabledAddAction = useMemo(() => {\n    const _balance = walletTokenBalance && walletTokenBalance[activeInfo.token]\n    const condition1 = activeInfo.amount && activeInfo.amount > _balance\n    const condition2 = Number(activeInfo.amount) <= 0\n    if (activeInfo.token) {\n      const actionAmount =\n        Number(activeInfo.amount) *\n        10 ** chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].decimals\n      if (activeInfo.amount && actionAmount > Number.MAX_SAFE_INTEGER) {\n        return true\n      }\n    }\n\n    return (activeInfo.tokenType !== TokenType.SHORT && condition1) || condition2\n  }, [activeInfo.amount, activeInfo.token, activeInfo.tokenType, chainId, walletTokenBalance])\n\n  const disabledSubmit = useMemo(() => {\n    let { coverage } = rateInfo\n    if (shortAmount) {\n      if (rateInfo.rate < 120) {\n        coverage = 'N/A'\n      } else if (rateInfo.rate >= 120 && coverage < 20) {\n        coverage = 20\n      }\n    }\n    return !(rateInfo.rate >= 120 && coverage >= 20)\n  }, [rateInfo, shortAmount])\n  const isUpdate = useMemo(() => {\n    return activeInfo.activeIndex !== -1\n  }, [activeInfo])\n\n  const [availableShowFlag, setAvailableShowFlag] = useState(false)\n\n  const handleAction = useCallback(async () => {\n    if (disabledAddAction) return\n    const action = {\n      token: activeInfo.token,\n      tokenType: activeInfo.tokenType,\n      amount: Number(activeInfo.amount),\n      price: activeInfo.amount,\n    }\n    if (currentMintToken !== activeInfo.token) {\n      const amountInDecimals =\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].decimals\n      const amountIn = BigNumber.from(TokenUtils.formatTokenAmount(activeInfo.amount * 10 ** amountInDecimals, 0))\n      const amountOut = getSwapQuote(\n        chainId,\n        activeInfo.token,\n        currentMintToken as unknown as SupportedTokens,\n        amountIn,\n        tokenPools,\n      )\n      action.price = TokenUtils.formatFourDecimals(\n        Number(toLargeUnits(amountOut, currentPosition.mintTokenInfo.decimals)),\n      )\n    }\n    if (!approveStatus) {\n      setApproveFlag(true)\n      try {\n        const tx = await onApprove()\n        toastInfo(\n          ToastTitle.submited,\n          <TransactionSubmittedInfo content=\"The approve has been submitted\" txHash={tx.hash} />,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status === 1) {\n          updatePendingAction(action)\n          clearActive()\n          setApproveFlag(false)\n          toastSuccess(\n            ToastTitle.success,\n            <TransactionSuccessInfo txHash={receipt.transactionHash} content=\"The approve has been successfully\" />,\n          )\n        }\n      } catch (err: any) {\n        setApproveFlag(false)\n      }\n    } else if (isUpdate) {\n      updatePendingAction(action)\n      clearActive()\n    } else {\n      addPendingAction(action)\n      clearActive()\n    }\n  }, [\n    activeInfo.amount,\n    activeInfo.token,\n    activeInfo.tokenType,\n    addPendingAction,\n    approveStatus,\n    chainId,\n    clearActive,\n    currentMintToken,\n    currentPosition.mintTokenInfo.decimals,\n    disabledAddAction,\n    isUpdate,\n    onApprove,\n    toastInfo,\n    toastSuccess,\n    tokenPools,\n    updatePendingAction,\n  ])\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: 16, fontWeight: 500 }}>\n          {activeInfo?.token ? `${activeInfo.tokenType} ${activeInfo.token}` : `${currentMintToken} Wallet Balance`}\n        </Typography>\n\n        <IconButton\n          aria-controls={open ? 'basic-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          onClick={handleClick}\n          sx={{\n            p: 0,\n            width: 24,\n            height: 24,\n          }}\n        >\n          <SetIcon />\n        </IconButton>\n\n        <TradeSettings\n          handleClose={handleClose}\n          anchorEl={anchorEl}\n          maxSlippageValue={maxSlippageValue}\n          open={open}\n          deadline={deadline}\n          setMaxSlippageValue={(value) => {\n            localStorage.setItem('slippage', value)\n            setMaxSlippageValue(value)\n          }}\n          setDeadlineValue={(value) => setDeadlineValue(value)}\n        />\n      </Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 1.6 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1.2,\n            width: '100%',\n            height: '45px',\n            transition: '300ms all',\n          }}\n        >\n          {activeInfo?.token ? (\n            IconMap[activeInfo?.token]({ style: { width: 42, height: 42 } })\n          ) : (\n            <Fbtc20Icon style={{ width: 42, height: 42 }} />\n          )}\n          <div\n            style={{\n              width: '100%',\n              position: 'relative',\n            }}\n          >\n            <InputBox>\n              <input\n                readOnly={!activeInfo?.token}\n                type=\"number\"\n                placeholder={!activeInfo?.token ? walletTokenBalance[currentMintToken] : 0}\n                value={\n                  activeInfo?.amount.toString() ? getFullNum(activeInfo?.amount, tokens[activeInfo.token].decimals) : ''\n                }\n                onFocus={() => setAvailableShowFlag(true)}\n                onBlur={() => {\n                  if (activeInfo?.amount.toString() === '' || activeInfo?.amount < 0) {\n                    setAvailableShowFlag(false)\n                  }\n                }}\n                onChange={(event) => {\n                  const inputValue = event.target.value\n                  let formattedValue = ''\n                  const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n                  if (cleanedValue.includes('.')) {\n                    const parts = cleanedValue.split('.')\n                    parts[1] = parts[1]?.slice(\n                      0,\n                      chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].decimals,\n                    )\n                    formattedValue = parts.join('.')\n                  } else {\n                    formattedValue = cleanedValue\n                  }\n                  // const isMaxVal = Number(formattedValue) * 10** currentPosition.mintTokenInfo.decimals > ;\n                  // if (formattedValue *)\n                  setActiveAmount(formattedValue || '')\n                }}\n              />\n            </InputBox>\n\n            {activeInfo?.token && availableShowFlag && activeInfo.tokenType !== 'Short' ? (\n              <AvailableBox>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 1,\n                    width: '100%',\n                    color: 'rgba(0,0,0,.5)',\n                    paddingLeft: '4px',\n                  }}\n                >\n                  <AvailableText>\n                    {(walletTokenBalance as any)[activeInfo?.token ?? currentMintToken]} Available\n                  </AvailableText>\n                </Box>\n              </AvailableBox>\n            ) : (\n              <></>\n            )}\n          </div>\n        </Box>\n        {activeInfo?.token && activeInfo.tokenType !== TokenType.SHORT && (\n          <Box>\n            <Button\n              size=\"small\"\n              sx={{\n                textTransform: 'none',\n                borderRadius: 1.8,\n                color: 'rgba(110, 214, 243, 1)',\n              }}\n              onClick={() => onMax()}\n            >\n              Max\n            </Button>\n          </Box>\n        )}\n      </Box>\n      {activeInfo?.token && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: 3,\n            mt: 3,\n          }}\n        >\n          <ActionButton\n            variant=\"contained\"\n            disableElevation\n            onClick={() => {\n              clearActive()\n            }}\n          >\n            Cancel\n          </ActionButton>\n          {checkApproveLoading ? (\n            <ActionButton disabled variant=\"contained\" disableElevation>\n              Check Approving\n            </ActionButton>\n          ) : (\n            <ActionButton\n              disabled={disabledAddAction || approveFlag}\n              variant=\"contained\"\n              disableElevation\n              onClick={handleAction}\n            >\n              {!approveStatus ? 'Approve & Add' : `${isUpdate ? 'Update' : 'Add'} Action`}\n            </ActionButton>\n          )}\n        </Box>\n      )}\n      {pendingActionList.length > 0 && (\n        <Box>\n          <ActionList />\n        </Box>\n      )}\n      {pendingTokenTypes.get(currentMintToken as unknown as string)?.includes(TokenType.SHORT) && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 3 }}>\n          <ActionButton onClick={() => submitShort()} variant=\"contained\" disableElevation disabled={disabledSubmit}>\n            Submit Transaction\n          </ActionButton>\n        </Box>\n      )}\n\n      <ShortEstimatedDashBoard />\n    </Box>\n  )\n}\nexport default ShortTransactionPanel\n","import React from 'react'\nimport Table from './Table'\nimport ShortTransactionPanel from './ShortTransactionPanel'\nimport { BtleftCard, BtrightCard, waistyle } from './StyleCommon'\n\nfunction ShortPannel() {\n  return (\n    <div style={waistyle}>\n      <BtleftCard>\n        <Table />\n      </BtleftCard>\n      <BtrightCard>\n        <ShortTransactionPanel />\n      </BtrightCard>\n    </div>\n  )\n}\n\nexport default ShortPannel\n","export default __webpack_public_path__ + \"static/media/neutralize.1c2056a6.svg\";","import { Box, Typography } from '@mui/material'\nimport React, { useCallback, useEffect, useMemo } from 'react'\nimport SubdirectoryArrowRightIcon from '@mui/icons-material/SubdirectoryArrowRight'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useComputedIndexAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { valueToKeyMap } from 'config/constants/tokenConfig'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { useShortActiveAction, useShortInfo, useShortPendingAction } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { ShortThresholdValue } from 'config/constants/thresholdValue'\n\nconst NeutralizeEstimatedDashBoard: React.FC<{\n  neutralizeType: string\n}> = ({ neutralizeType }) => {\n  const { walletTokenBalance } = useHashPowerToken()\n\n  const { neutralizeAmount } = useShortPendingAction()\n  const { activeInfo } = useShortActiveAction()\n  const { activeTab } = useShortInfo()\n  const { collateralIndex, currentPosition, currentPositionTokenInfo } = usePositionInfo()\n  const {\n    newEstimatedDailyDebt,\n    newOutStandingDebt,\n    newNeutralizeFee,\n    newPrepaidInterestCoverage,\n    newDisplayPrepaidInterestCoverage,\n    newDisplayCollateralRatio,\n    newCollateralRatio,\n    onUpdateNeutralizeValue,\n  } = useComputedIndexAction()\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {})\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const walletData = useMemo(() => {\n    return [\n      {\n        id: 1,\n        title: 'Collateral Ratio',\n        type: 'ratio',\n        value: {\n          upVal: collateralIndex.displayRatio,\n          downVal: newDisplayCollateralRatio,\n        },\n      },\n      {\n        id: 2,\n        title: 'Prepaid Interest Coverage',\n        type: 'coverage',\n        value: {\n          upVal: collateralIndex.displayCoverage,\n          downVal:\n            newPrepaidInterestCoverage > 0 || newPrepaidInterestCoverage !== Number.POSITIVE_INFINITY\n              ? `≈ ${newDisplayPrepaidInterestCoverage}`\n              : newDisplayPrepaidInterestCoverage,\n        },\n      },\n      {\n        id: 3,\n        title: 'Prepaid Interest',\n        type: 'prepaidInterest',\n        value: {\n          upVal: `${TokenUtils.formatTokenAmount(collateralIndex.prepaidInterest, currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `${TokenUtils.formatTokenAmount(collateralIndex.prepaidInterest, currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 4,\n        title: 'Daily Paid Interest Reference',\n        type: 'dailyPaid',\n        value: {\n          upVal: `${collateralIndex.estimatedDailyDebt} WBTC`,\n          downVal: `${toLargeUnits(Number(TokenUtils.formatTokenAmount(newEstimatedDailyDebt, 0)), currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n      {\n        id: 5,\n        title: 'Outstanding Debt',\n        type: 'debt',\n        value: {\n          upVal: toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals),\n          downVal: toLargeUnits(newOutStandingDebt, currentPosition.mintTokenInfo.decimals),\n        },\n      },\n\n      {\n        id: 6,\n        title: 'Estimate Neutralize Fee',\n        type: 'neutralizeFee',\n        value: {\n          upVal: `0 ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n          downVal: `≈ ${newNeutralizeFee} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n        },\n      },\n    ]\n  }, [collateralIndex.displayRatio, collateralIndex.displayCoverage, collateralIndex.prepaidInterest, collateralIndex.estimatedDailyDebt, newDisplayCollateralRatio, newPrepaidInterestCoverage, newDisplayPrepaidInterestCoverage, currentPosition.mintTokenInfo.settlementCurrency.symbol, currentPosition.mintTokenInfo.settlementCurrency.decimals, currentPosition.mintTokenInfo.decimals, currentPosition.balance, newEstimatedDailyDebt, newOutStandingDebt, newNeutralizeFee])\n\n  const downValColor = useCallback(\n    (item) => {\n      const walletWbtc =\n        neutralizeType === 'wallet' &&\n        walletTokenBalance &&\n        newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n\n      const avatarWbtc =\n        neutralizeType === 'avatar' &&\n        avatarAssetList &&\n        newNeutralizeFee > avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n      const colors =\n        (item.type === 'ratio' && newCollateralRatio < ShortThresholdValue.ratio && walletWbtc) ||\n        (item.type === 'ratio' && newCollateralRatio < ShortThresholdValue.ratio && avatarWbtc) ||\n        (item.type === 'coverage' && newPrepaidInterestCoverage < ShortThresholdValue.days && avatarWbtc) ||\n        (item.type === 'coverage' && newPrepaidInterestCoverage < ShortThresholdValue.days && walletWbtc)\n          ? '#FF4D00'\n          : '#2AA1FF'\n      return ['prepaidInterest', 'dailyPaid', 'debt'].includes(item.type) ? '#2AA1FF' : colors\n    },\n    [\n      avatarAssetList,\n      currentPosition.mintTokenInfo.settlementCurrency.symbol,\n      neutralizeType,\n      newCollateralRatio,\n      newNeutralizeFee,\n      newPrepaidInterestCoverage,\n      walletTokenBalance,\n    ],\n  )\n\n  useEffect(() => {\n    if (activeInfo?.tokenType === TokenType.NEUTRALIZE) {\n      const val = Number(activeInfo?.amount) || 0\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    } else if (activeTab === 2) {\n      const val = Number(neutralizeAmount) || 0\n      onUpdateNeutralizeValue(val ? Number(`-${val}`) : 0)\n    }\n  }, [activeInfo, onUpdateNeutralizeValue, neutralizeAmount, activeTab])\n  return (\n    <Box\n      sx={{\n        bgcolor: 'rgba(222, 241, 255, 1)',\n        borderRadius: 1.8,\n        mt: 4,\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 1.2,\n      }}\n    >\n      {walletData.map((item: any) => {\n        return (\n          <Box\n            sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', textAlign: 'right' }}\n            key={item.id}\n          >\n            <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.5)', textAlign: 'right' }}>{item.title}</Typography>\n\n            <Box>\n              <Typography sx={{ fontSize: 12, color: 'rgba(0,0,0,0.6)', textAlign: 'right' }}>\n                {item.value.upVal}\n              </Typography>\n              {(\n                <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'right', justifyContent: 'end' }}>\n                  <SubdirectoryArrowRightIcon sx={{ color: 'rgba(0,0,0,0.1)', width: 12, height: 12 }} />\n                  <Typography\n                    sx={{\n                      fontSize: 10,\n                      color: downValColor(item),\n                      textAlign: 'right',\n                    }}\n                  >\n                    {item.value.downVal}\n                  </Typography>\n                </Box>\n              ) || null}\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\nexport default NeutralizeEstimatedDashBoard\n","import React from 'react'\n\nexport default function WarnRedIcon() {\n  return (\n    <div>\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n          fill=\"#FF2E00\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8.57852 10.156C8.82398 10.156 9.02296 10.355 9.02296 10.6004V11.756C9.02296 12.0015 8.82398 12.2004 8.57852 12.2004H7.42296C7.1775 12.2004 6.97852 12.0015 6.97852 11.756V10.6004C6.97852 10.355 7.1775 10.156 7.42296 10.156H8.57852ZM8.57852 3.62842C8.82398 3.62842 9.02296 3.8274 9.02296 4.07286V8.74859C9.02296 8.99405 8.82398 9.19303 8.57852 9.19303H7.42296C7.1775 9.19303 6.97852 8.99405 6.97852 8.74859V4.07286C6.97852 3.8274 7.1775 3.62842 7.42296 3.62842H8.57852Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function WarnGrayIcon() {\n  return (\n    <div>\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n          fill=\"#73797C\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7.42295 5.6736C7.17749 5.6736 6.9785 5.47461 6.9785 5.22915V4.0736C6.9785 3.82814 7.17749 3.62915 7.42295 3.62915H8.5785C8.82396 3.62915 9.02295 3.82814 9.02295 4.0736L9.02295 5.22915C9.02295 5.47461 8.82396 5.6736 8.5785 5.6736H7.42295ZM7.42295 12.2012C7.17749 12.2012 6.9785 12.0022 6.9785 11.7567V7.081C6.9785 6.83554 7.17749 6.63656 7.42295 6.63656H8.5785C8.82396 6.63656 9.02295 6.83554 9.02295 7.081V11.7567C9.02295 12.0022 8.82396 12.2012 8.5785 12.2012H7.42295Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </div>\n  )\n}\n","import {\n  Box,\n  Typography,\n  Button,\n  TableCell,\n  TableRow,\n  Badge,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n} from '@mui/material'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { useWeb3React } from 'web3-react-core'\nimport Wallet from 'components/Menu/icons/Wallet'\nimport { AvatarIcon, Fbtc20Icon } from 'components/uikit'\nimport { useShortActiveAction, useShortActiveTokenApprove, useShortPendingAction } from 'state/Short/hooks'\nimport PositionABI from 'config/abi/Position.json'\nimport { ethers, utils } from 'ethers'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport contracts from 'config/constants/contracts'\nimport useToast from 'hooks/useToast'\nimport useSystemParams from 'hooks/useSystemParams'\nimport { TokenType } from 'state/Short/shortSlice'\nimport IconMap from 'components/IconMap'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport styled from 'styled-components'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport NeutralizeEstimatedDashBoard from './NeutralizeEstimatedDashBoard'\nimport { ActionButton, InputBox, SelectTypeWrap, TipInfo, pendingStyle } from './StyleCommon'\nimport WarnRedIcon from './icon/WarnRedIcon'\nimport WarnGrayIcon from './icon/WarnGrayIcon'\n\nconst AvailableText = styled('div')`\n  font-family: PingFang SC;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16.8px;\n  text-align: right;\n`\nconst AvailableBox = styled('div')`\n  position: absolute;\n  top: 33px;\n`\n\nconst TableBox: React.FC<{\n  setNeutralizeType: (val: string) => any\n}> = ({ setNeutralizeType }) => {\n  const [hoveredRow, setHoveredRow] = useState<number>(-1)\n\n  const { setActionInfo, setActiveAmount, setActionIndex } = useShortActiveAction()\n\n  const { pendingActionList, clearAllPendingAction, deleteNeutralizePendingAction } = useShortPendingAction()\n  const handleMouseEnter = (index: number) => {\n    setHoveredRow(index)\n  }\n\n  const handleMouseLeave = () => {\n    setHoveredRow(-1)\n  }\n  return (\n    <TableContainer\n      component={Paper}\n      sx={{\n        backgroundColor: 'transparent',\n        border: 'none',\n        boxShadow: 'none',\n      }}\n    >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow sx={pendingStyle.tableHeader}>\n            <TableCell sx={pendingStyle.tableHeadCell}>{pendingActionList.length} Pending Actions</TableCell>\n            <TableCell align=\"right\" sx={pendingStyle.tableHeadCell}>\n              <Button\n                size=\"small\"\n                sx={pendingStyle.clearAll}\n                onClick={() => {\n                  clearAllPendingAction()\n                }}\n              >\n                Clear All\n              </Button>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody sx={pendingStyle.tableBody}>\n          {pendingActionList.map((row: any, index) => (\n            <TableRow\n              key={row.tokenType + row.token}\n              sx={pendingStyle.tableBodyRow}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n              onClick={() => {\n                setActionInfo({ token: row.token, tokenType: row.tokenType })\n                setActiveAmount(row.amount)\n                setActionIndex(index)\n                setNeutralizeType(row.neutralizeType)\n              }}\n            >\n              <TableCell sx={pendingStyle.tableBodyCell}>\n                <Badge\n                  color=\"error\"\n                  overlap=\"circular\"\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  sx={{\n                    '.MuiBadge-badge': {\n                      padding: 0,\n                      minWidth: 10,\n                      minHeight: 10,\n                      height: 10,\n                      position: 'absolute',\n                      bottom: '20%',\n                      right: '24%',\n                      backgroundColor: 'rgba(110, 214, 243, 1)',\n                      borderWidth: 1,\n                      borderColor: 'rgba(235, 247, 255, 1)',\n                      borderStyle: 'solid',\n                    },\n                  }}\n                >\n                  {IconMap[row.neutralizeType]()}\n                </Badge>\n                <Typography sx={{ fontWeight: 600, marginLeft: '5px' }}>\n                  {row.tokenType} {row.token}\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\" sx={{ p: 0, height: 66 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'end', alignItems: 'center' }}>\n                  <Box>\n                    <Typography sx={{ fontSize: 14 }}>{row.amount}</Typography>\n                    {/* <Typography sx={{ fontSize: 12, color: 'rgba(0, 0, 0, 0.5)' }}>\n                      {row.price} {token}\n                    </Typography> */}\n                  </Box>\n                  <Box\n                    sx={{\n                      transition: 'all 0.3s',\n                      width: hoveredRow === index ? 32 : 0,\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        deleteNeutralizePendingAction(row.token, row.neutralizeType)\n                      }}\n                      sx={{\n                        transition: 'all 0.3s',\n                        opacity: hoveredRow === index ? 1 : 0,\n                        color: 'rgba(0, 0, 0, 1)',\n                      }}\n                    >\n                      <ClearIcon sx={{ width: 16, height: 16 }} />\n                    </IconButton>\n                  </Box>\n                </Box>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst { ActionUser } = contracts\nconst ActionUserInterface = new utils.Interface(ActionUser.abi)\nfunction NeutralizeRightBox() {\n  const { chainId } = useWeb3React()\n  const { walletTokenBalance, setRefresh } = useHashPowerToken()\n  const [neutralizeType, setNeutralizeType] = useState('wallet')\n  // const [neutralizeAmount, setNeutralizeAmount] = useState<any>('')\n\n  const {\n    addPendingAction,\n    updateNeutralizePendingAction,\n    deleteNeutralizePendingAction,\n    clearAllPendingAction,\n    pendingActionList,\n  } = useShortPendingAction()\n\n  const { signer } = useSystemParams()\n  const { toastSuccess, toastError, toastInfo } = useToast()\n  const [availableShowFlag, setAvailableShowFlag] = useState(false)\n  const [approveFlag, setApproveFlag] = useState(false)\n\n  const { activeInfo, setActiveAmount, setActiveTab, clearActive } = useShortActiveAction()\n  const { onApprove, checkApproveLoading, approveStatus } = useShortActiveTokenApprove()\n  const isUpdate = useMemo(() => activeInfo.activeIndex !== -1, [activeInfo.activeIndex])\n\n  const [neutralizeLoading, setNeutralizeLoading] = useState(false)\n  const [, setDisabledAction] = useState(true)\n\n  const { currentPositionTokenInfo, currentMintToken, currentPosition } = usePositionInfo()\n\n  const { handleUpdatePosition } = usePositionAction()\n  const { newNeutralizeFee } = useComputedIndexAction()\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {})\n  }, [currentPositionTokenInfo.allowedTokens])\n\n  const maxValue = useMemo(() => {\n    const _maxVal = Number(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals))\n    return _maxVal\n  }, [currentPosition.balance, currentPosition.mintTokenInfo.decimals])\n\n  const disableFlag = useMemo(() => {\n    const { amount } = activeInfo\n    if (amount <= 0) {\n      return true\n    }\n    if (amount > 0) {\n      return neutralizeType === 'wallet'\n        ? amount > walletTokenBalance[activeInfo.token] || amount > maxValue\n        : amount > avatarAssetList[activeInfo.token] || amount > maxValue\n    }\n    return false\n  }, [activeInfo, avatarAssetList, maxValue, neutralizeType, walletTokenBalance])\n\n  const submitDisable = useMemo(() => {\n    return pendingActionList.length === 0\n  }, [pendingActionList])\n  const haveTokenFlag = useMemo(() => {\n    return pendingActionList.some((item) => {\n      if (item && (item as any).neutralizeType) {\n        return (item as any).neutralizeType === neutralizeType\n      }\n      return false\n    })\n  }, [neutralizeType, pendingActionList])\n\n  const onMax = () => {\n    setActiveAmount(maxValue)\n\n    if (neutralizeType === 'avatar') {\n      if (avatarAssetList && avatarAssetList[currentMintToken]) {\n        if (avatarAssetList[currentMintToken] > maxValue) {\n          setDisabledAction(false)\n        } else {\n          setDisabledAction(true)\n        }\n      } else {\n        setDisabledAction(true)\n      }\n    }\n    if (neutralizeType === 'wallet') {\n      if (walletTokenBalance && walletTokenBalance[currentMintToken]) {\n        if (walletTokenBalance[currentMintToken] > maxValue) {\n          setDisabledAction(false)\n        } else {\n          setDisabledAction(true)\n        }\n      } else {\n        setDisabledAction(true)\n      }\n    }\n  }\n\n  const onNeutralize = useCallback(async () => {\n    pendingActionList.forEach(async (item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        setNeutralizeLoading(true)\n        const resData = ActionUserInterface.encodeFunctionData('neutralizetBalance', [\n          toSmallUnits(item.amount.toString(), currentPosition.mintTokenInfo.decimals) || '0',\n          item.neutralizeType === 'wallet',\n        ])\n\n        try {\n          const posContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n          const info = await posContract.delegateCall(ActionUser.address[chainId], resData)\n\n          if (info) {\n            toastInfo(\n              ToastTitle.submited,\n              <TransactionSubmittedInfo content=\"Waiting for confirmation\" txHash={info.hash} />,\n            )\n            const result = await info.wait()\n            if (result) {\n              setRefresh((state) => !state)\n              toastSuccess(\n                ToastTitle.success,\n                <TransactionSubmittedInfo content=\"The transaction has been successfully\" txHash={info.hash} />,\n              )\n              clearAllPendingAction()\n              setActiveAmount('')\n              setNeutralizeLoading(false)\n              await handleUpdatePosition()\n            }\n          }\n        } catch (e: any) {\n          setNeutralizeLoading(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    })\n    // return\n  }, [\n    pendingActionList,\n    currentPosition.mintTokenInfo.decimals,\n    currentPosition.positionAddress,\n    signer,\n    chainId,\n    toastInfo,\n    setRefresh,\n    toastSuccess,\n    clearAllPendingAction,\n    setActiveAmount,\n    handleUpdatePosition,\n    toastError,\n  ])\n\n  const estimateNeutralizeFeeWarningFlag = useCallback(() => {\n    if (neutralizeType === 'wallet') {\n      return (\n        walletTokenBalance &&\n        newNeutralizeFee > walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n      )\n    }\n    if (neutralizeType === 'avatar') {\n      return (\n        avatarAssetList && newNeutralizeFee > avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol]\n      )\n    }\n    return false\n  }, [\n    avatarAssetList,\n    currentPosition.mintTokenInfo.settlementCurrency.symbol,\n    neutralizeType,\n    newNeutralizeFee,\n    walletTokenBalance,\n  ])\n\n  const tokenAmountBalanceWarningFlag = useCallback(\n    (type: string) => {\n      if (neutralizeType === 'wallet' && type === 'wallet') {\n        return walletTokenBalance && activeInfo.amount > walletTokenBalance[currentMintToken] ? 'red' : ''\n      }\n      if (neutralizeType === 'avatar' && type === 'avatar') {\n        return avatarAssetList && activeInfo.amount > avatarAssetList[currentMintToken] ? 'red' : ''\n      }\n      return ''\n    },\n    [neutralizeType, walletTokenBalance, activeInfo.amount, currentMintToken, avatarAssetList],\n  )\n\n  const walletNeutralizeFeeWarningFlag = useCallback(\n    (type: string) => {\n      const { settlementCurrency } = currentPosition.mintTokenInfo\n      if (neutralizeType === type) {\n        return walletTokenBalance && newNeutralizeFee > walletTokenBalance[settlementCurrency.symbol] ? 'red' : ''\n      }\n      if (neutralizeType === type) {\n        return avatarAssetList && newNeutralizeFee > avatarAssetList[settlementCurrency.symbol] ? 'red' : ''\n      }\n      return ''\n    },\n    [avatarAssetList, currentPosition.mintTokenInfo, neutralizeType, newNeutralizeFee, walletTokenBalance],\n  )\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography sx={{ fontSize: 16, fontWeight: 500 }}>Neutralize {currentMintToken}</Typography>\n      </Box>\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 1.6 }}>\n        <Box\n          sx={{\n            height: '45px',\n            transition: '300ms all',\n            width: '100%',\n          }}\n        >\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.2, width: '100%' }}>\n            <Fbtc20Icon style={{ width: 42, height: 42 }} />\n            <div\n              style={{\n                width: '100%',\n                // transition: 'all 300ms',\n                position: 'relative',\n              }}\n            >\n              <InputBox>\n                <input\n                  type=\"number\"\n                  // placeholder={walletTokenBalance[token] }\n                  placeholder=\"0\"\n                  value={activeInfo?.amount ?? ''}\n                  onBlur={() => {\n                    if (activeInfo?.amount.toString() === '' || activeInfo?.amount < 0) {\n                      setAvailableShowFlag(false)\n                    }\n                  }}\n                  onFocus={() => setAvailableShowFlag(true)}\n                  onChange={(event) => {\n                    const inputValue = event.target.value\n                    let formattedValue = ''\n                    const cleanedValue = inputValue.replace(/[^\\d.]/g, '')\n                    if (cleanedValue.includes('.')) {\n                      const parts = cleanedValue.split('.')\n                      parts[1] = parts[1]?.slice(0, currentPosition.mintTokenInfo.decimals)\n                      formattedValue = parts.join('.')\n                    } else {\n                      formattedValue = cleanedValue\n                    }\n\n                    setActiveAmount(formattedValue || '')\n                  }}\n                />\n              </InputBox>\n              {activeInfo?.token && availableShowFlag ? (\n                <AvailableBox>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: 1,\n                      width: '100%',\n                      color: 'rgba(0,0,0,.5)',\n                      paddingLeft: '4px',\n                      position: 'relative',\n                    }}\n                  >\n                    <AvailableText>\n                      {neutralizeType === 'wallet'\n                        ? walletTokenBalance[activeInfo?.token]\n                        : avatarAssetList[activeInfo?.token]}{' '}\n                      Available\n                    </AvailableText>\n                  </Box>\n                </AvailableBox>\n              ) : (\n                <></>\n              )}\n            </div>\n          </Box>\n        </Box>\n        <Box>\n          <Button\n            size=\"small\"\n            sx={{\n              textTransform: 'none',\n              borderRadius: 1.8,\n              color: 'rgba(110, 214, 243, 1)',\n            }}\n            onClick={() => onMax()}\n          >\n            Max\n          </Button>\n        </Box>\n      </Box>\n\n      <SelectTypeWrap>\n        <p className=\"title-neutralize\">Neutralize the asset from</p>\n        <div className=\"content\">\n          <div\n            className={`item_wrap ${neutralizeType === 'wallet' ? 'active' : ''}`}\n            onClick={() => {\n              setNeutralizeType('wallet')\n              const neutralize = pendingActionList.find((it) => it.neutralizeType === 'avatar')\n              console.log('neutralize', neutralize)\n              if (neutralize) {\n                deleteNeutralizePendingAction(neutralize.token, neutralize.neutralizeType)\n              } else if ((activeInfo.amount > 0 && isUpdate) || haveTokenFlag) {\n                addPendingAction({\n                  currentMintToken,\n                  tokenType: TokenType.NEUTRALIZE,\n                  amount: Number(activeInfo.amount),\n                  neutralizeType: 'wallet',\n                  price: 1,\n                } as any)\n              }\n            }}\n            onKeyUp={() => null}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"item wallet\">\n              <h4>\n                <Wallet /> My Wallet\n              </h4>\n              <p>\n                <span>{currentMintToken}</span>\n                <span\n                  style={{\n                    color: tokenAmountBalanceWarningFlag('wallet'),\n                  }}\n                >\n                  {(walletTokenBalance && TokenUtils.formatFourDecimals(walletTokenBalance[currentMintToken])) || 0}\n                </span>\n              </p>\n              <p>\n                <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                <span\n                  style={{\n                    color: walletNeutralizeFeeWarningFlag('wallet'),\n                  }}\n                >\n                  {(walletTokenBalance &&\n                    TokenUtils.formatFourDecimals(\n                      walletTokenBalance[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n                    )) ||\n                    0}\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <div\n            className={`item_wrap ${neutralizeType === 'avatar' ? 'active' : ''}`}\n            onClick={() => {\n              setNeutralizeType('avatar')\n              const neutralize = pendingActionList.find((it) => it.neutralizeType === 'wallet')\n              console.log('neutralize', neutralize)\n              if (neutralize) {\n                deleteNeutralizePendingAction(neutralize.token, neutralize.neutralizeType)\n              } else if ((activeInfo.amount > 0 && isUpdate) || haveTokenFlag) {\n                addPendingAction({\n                  token: currentMintToken,\n                  tokenType: TokenType.NEUTRALIZE,\n                  amount: Number(activeInfo.amount),\n                  neutralizeType: 'avatar',\n                  price: 1,\n                } as any)\n              }\n            }}\n            onKeyUp={() => null}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"item avatar\">\n              <h4>\n                <AvatarIcon />\n                Collateral\n              </h4>\n              <p>\n                <span>{currentMintToken}</span>\n                <span\n                  style={{\n                    color: tokenAmountBalanceWarningFlag('avatar'),\n                  }}\n                >\n                  {(avatarAssetList && TokenUtils.formatFourDecimals(avatarAssetList[currentMintToken])) || 0}\n                </span>\n              </p>\n              <p>\n                <span>{currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n                <span\n                  style={{\n                    color: walletNeutralizeFeeWarningFlag('wallet'),\n                  }}\n                >\n                  {(avatarAssetList &&\n                    TokenUtils.formatFourDecimals(\n                      avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n                    )) ||\n                    0}\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </SelectTypeWrap>\n\n      <TipInfo>\n        {estimateNeutralizeFeeWarningFlag() ? <WarnRedIcon /> : <WarnGrayIcon />}\n\n        <p\n          style={{\n            color: estimateNeutralizeFeeWarningFlag() ? 'red' : '',\n          }}\n        >\n          A 1.0% fee of the token value will be levied after the position is neutralized.\n        </p>\n      </TipInfo>\n\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: 3,\n          mt: 1.6,\n        }}\n      >\n        <ActionButton\n          variant=\"contained\"\n          disableElevation\n          disabled={neutralizeLoading}\n          onClick={() => {\n            clearAllPendingAction()\n            clearActive()\n\n            // clearActive()\n            // setNeutralizeAmount('')\n            setActiveTab(1)\n          }}\n        >\n          Cancel\n        </ActionButton>\n        {checkApproveLoading ? (\n          <ActionButton disabled variant=\"contained\" disableElevation>\n            Check Approving\n          </ActionButton>\n        ) : (\n          <ActionButton\n            variant=\"contained\"\n            disableElevation\n            disabled={disableFlag || approveFlag || neutralizeLoading}\n            onClick={async () => {\n              const action = {\n                token: currentMintToken as unknown as string,\n                tokenType: TokenType.NEUTRALIZE,\n                amount: Number(activeInfo.amount),\n                neutralizeType,\n                price: 1,\n              }\n              if (!approveStatus) {\n                setApproveFlag(true)\n                try {\n                  const tx = await onApprove()\n                  toastInfo('Approve Submitted')\n                  const receipt = await tx.wait()\n                  if (receipt.status === 1) {\n                    addPendingAction(action)\n                    clearActive()\n                    setApproveFlag(false)\n                    toastSuccess('Approved Successfully')\n                  }\n                } catch (err: any) {\n                  setApproveFlag(false)\n                }\n              } else if (isUpdate || haveTokenFlag) {\n                updateNeutralizePendingAction(action)\n              } else if (activeInfo.amount > 0) {\n                addPendingAction(action)\n              }\n            }}\n          >\n            {!approveStatus ? 'Approve & Add' : `${isUpdate || haveTokenFlag ? 'Update' : 'Add'} Action`}\n          </ActionButton>\n        )}\n      </Box>\n      {pendingActionList.length > 0 && (\n        <Box>\n          <TableBox\n            setNeutralizeType={(value) => {\n              setNeutralizeType(value)\n            }}\n          />\n        </Box>\n      )}\n\n      {pendingActionList.length > 0 && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 3 }}>\n          <ActionButton\n            onClick={() => {\n              onNeutralize()\n            }}\n            disabled={submitDisable || neutralizeLoading}\n            variant=\"contained\"\n            disableElevation\n          >\n            Submit Transaction\n          </ActionButton>\n        </Box>\n      )}\n      <NeutralizeEstimatedDashBoard neutralizeType={neutralizeType} />\n    </Box>\n  )\n}\n\nexport default NeutralizeRightBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport NeutralizeImg from 'assets/svg/neutralize.svg'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'components/uikit'\nimport { BtleftCard, BtrightCard, waistyle } from './StyleCommon'\nimport NeutralizeRightBox from './NeutralizeRight'\n\nconst ImgBox = styled('div')`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 539px;\n  margin: auto;\n\n  img {\n    width: 539px;\n    height: 368.98px;\n  }\n\n  .nutralize_action {\n    position: absolute;\n    display: flex;\n    width: 100px;\n    top: 0;\n    right: 43px;\n  }\n\n  .collateral_action {\n    bottom: 0;\n    left: 0;\n    position: absolute;\n    display: flex;\n\n    p {\n      flex-direction: column;\n    }\n  }\n`\n\nconst OrderWrap = styled('span')`\n  font-family: PingFangSC-Medium, sans-serif;\n  display: block;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 25px;\n  font-weight: 500;\n  font-size: 20px;\n  border: 1px solid #000000;\n  color: #000000;\n  margin-right: 13px;\n  flex: none;\n`\n\nconst Text = styled('p')`\n  span {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 22px;\n    color: #000000;\n    white-space: nowrap;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst CustomButton = styled(Button)`\n  box-shadow: none !important;\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%) !important;\n  color: #000 !important;\n  border-radius: 20px !important;\n  height: 24px !important;\n  line-height: 24px !important;\n  font-family: PingFangSC-Medium, sans-serif !important;\n  font-weight: 500 !important;\n  font-size: 12px !important;\n  letter-spacing: 0.02em !important;\n  margin-top: 13px !important;\n  white-space: nowrap !important;\n`\n\nfunction NeutralizetBox() {\n  return (\n    <>\n      <div style={waistyle}>\n        <BtleftCard>\n          <ImgBox>\n            <img src={NeutralizeImg} alt=\"\" />\n            <div className=\"action nutralize_action\">\n              <OrderWrap>1</OrderWrap>{' '}\n              <Text>\n                <span>Neutralize</span>\n              </Text>\n            </div>\n\n            <div className=\"action collateral_action\">\n              <OrderWrap>2</OrderWrap>{' '}\n              <Text>\n                <span>\n                  Get back the <br /> collateral to wallet\n                </span>\n                <Link to=\"/collateral/manage\">\n                  <CustomButton>Collateral Management</CustomButton>\n                </Link>\n              </Text>\n            </div>\n          </ImgBox>\n        </BtleftCard>\n        <BtrightCard>\n          <NeutralizeRightBox />\n        </BtrightCard>\n      </div>\n    </>\n  )\n}\n\nexport default NeutralizetBox\n","import React, { memo, useEffect, useMemo, useState } from 'react'\nimport { Box } from '@mui/material'\nimport { Link } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport { BTitle } from 'components/CommonComponent'\nimport Select from 'components/Select'\nimport { useWeb3React } from 'web3-react-core'\nimport { useShortActiveAction, useShortPendingAction, useShortInfo } from 'state/Short/hooks'\nimport { TokenType } from 'state/Short/shortSlice'\nimport { useAppSelector } from 'state'\nimport { ArrowLine } from 'components/uikit'\nimport { TokenUtils } from 'utils/transformHelper'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { isSupportedChainId } from 'utils/web3React'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { SupportedChainId } from 'config/constants/chains'\nimport Logo from 'components/Logo'\nimport DashboardContent from './components/DashboardContent'\nimport ShortPannel from './components/ShortPannel'\nimport { ActionButton, ShortPageWraperStyle } from './components/StyleCommon'\nimport NeutralizeBox from './components/NeutralizeImg'\n\nconst Wrapper = styled('div')`\n  padding-right: 40px;\n  height: 80vh;\n  overflow: scroll;\n  min-width: 1200px;\n  padding-bottom: 30px;\n`\nconst Tip = styled('div')`\n  font-size: 14px;\n`\n\nfunction DashboardPage() {\n  const { chainId } = useWeb3React()\n\n  const { clearAllPendingAction } = useShortPendingAction()\n\n  const { pendingActionList } = useShortPendingAction()\n  const { setActionInfo, setActiveAmount, setActiveTab, clearActive, activeInfo } = useShortActiveAction()\n  const activeTab = useAppSelector((state) => state.short.activeTab)\n  const shortAmount = useMemo(() => {\n    const _shortInfo = pendingActionList.filter((item) => item.tokenType === TokenType.SHORT)\n    return (_shortInfo.length && _shortInfo[0].amount) || ''\n  }, [pendingActionList])\n\n  const [pageActiveTab, setPageActiveTab] = useState<any>(activeTab)\n  const { onChangeCollateralIndex } = useShortInfo()\n\n  const { currentMintToken, currentPosition, collateralIndex } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n  const mintTokens = useMemo(() => {\n    if (isSupportedChainId(chainId)) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      return Object.keys(mintTokenChainConfigs[chainId as SupportedChainId].tokens).map((key) => {\n        return {\n          token: _tokens[key as MintTokenKey].symbol,\n          address: _tokens[key as MintTokenKey].address,\n          decimals: _tokens[key as MintTokenKey].decimals,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={_tokens[key as MintTokenKey].logo}\n              symbol={_tokens[key as MintTokenKey].symbol}\n            />\n          ),\n        }\n      })\n    }\n    return []\n  }, [chainId])\n\n  useEffect(() => {\n    setPageActiveTab(activeTab)\n  }, [activeTab])\n\n  useEffect(() => {\n    onChangeCollateralIndex({\n      ratio: Number(TokenUtils.formatTokenAmount(collateralIndex.collateralRatio, 2)),\n      coverage: Number(TokenUtils.formatTokenAmount(collateralIndex.prepaidInterestCoverage, 0)),\n    })\n  }, [collateralIndex, onChangeCollateralIndex])\n\n  return (\n    <Box sx={ShortPageWraperStyle.box}>\n      <BTitle>Short & Neutralize</BTitle>\n      <Wrapper>\n        <Box sx={ShortPageWraperStyle.topBox}>\n          <Select\n            selectValue={currentMintToken}\n            options={mintTokens}\n            isGroup={false}\n            onChange={(e) => {\n              handleChangeCurrentPosition(e)\n              clearAllPendingAction()\n              setActiveAmount('')\n              clearActive()\n              setActionInfo({\n                token: e as unknown as string,\n                tokenType: pageActiveTab === 1 ? TokenType.SHORT : TokenType.NEUTRALIZE,\n              })\n            }}\n          />\n\n          {currentPosition.isEnable && (\n            <Box\n              sx={{\n                display: 'flex',\n                gap: '12px',\n              }}\n            >\n              {pageActiveTab === 1 && (\n                <ActionButton\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={() => {\n                    console.log('activeInfo :>> ', activeInfo)\n                    clearActive()\n                    setActionInfo({ token: currentMintToken as unknown as string, tokenType: TokenType.SHORT })\n                    setActiveAmount(Number(shortAmount) || '')\n                    if (activeTab !== 1) {\n                      clearAllPendingAction()\n                    }\n\n                    setPageActiveTab(1)\n                    setActiveTab(1)\n                  }}\n                >\n                  Short {shortAmount && TokenUtils.formatFourDecimals(Number(shortAmount))}\n                </ActionButton>\n              )}\n              {Number(shortAmount) <= 0 && (\n                <ActionButton\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={() => {\n                    clearAllPendingAction()\n                    setActiveTab(2)\n                    setPageActiveTab(2)\n\n                    setActionInfo({ token: currentMintToken as unknown as string, tokenType: TokenType.NEUTRALIZE })\n                  }}\n                >\n                  Neutralize\n                </ActionButton>\n              )}\n            </Box>\n          )}\n        </Box>\n        {!currentPosition.isEnable && (\n          <Link to=\"/collateral\">\n            {' '}\n            <Tip>\n              Please enable the collateral of {currentPosition.mintTokenInfo.symbol} first <ArrowLine />\n            </Tip>\n          </Link>\n        )}\n        {currentPosition.isEnable && (\n          <>\n            <DashboardContent />\n            {pageActiveTab === 1 && <ShortPannel />}\n            {pageActiveTab === 2 && <NeutralizeBox />}\n          </>\n        )}\n      </Wrapper>\n    </Box>\n  )\n}\n\nexport default memo(DashboardPage)\n","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react'\n\nexport default function Logo(props: { token: string; symbol: string; imgprops?: React.ImgHTMLAttributes<HTMLImageElement> }) {\n  return <img {...props.imgprops} style={{width: 22, height: 22, ...props.imgprops?.style}} src={props.token} alt={props.symbol}  />\n}\n","import { useAppDispatch, useAppSelector } from 'state'\nimport { useWeb3React } from 'web3-react-core'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport tokens from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport { ContractTransaction } from 'ethers'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { chainConfigs, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport {\n  ActionType,\n  NeetralizePendingAction,\n  PendingAction,\n  TokenType,\n  updateActiveAmount,\n  updateActionInfo,\n  updateActiveActionIndex,\n  setShortPendingAction,\n  updateActiveTab,\n  updateShortRateInfo,\n} from './shortSlice'\n\nexport function useShortActiveTokenApprove() {\n  const { account, chainId } = useWeb3React()\n  const activeInfo = useAppSelector((state) => state.short.activeInfo)\n  // const { position } = useCurrentCpt()\n  const { currentPosition } = usePositionInfo()\n  const { onCheckApprove } = useCheckApprove()\n  const { handleApprove } = useApprove(account, activeInfo.token ? tokens[activeInfo.token].address[chainId] : '0')\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [checkApproveLoading, setCheckApproveLoading] = useState(false)\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    if (activeInfo.token) {\n      setCheckApproveLoading(true)\n      onCheckApprove(\n        account,\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address,\n        currentPosition.positionAddress,\n      )\n        .then((res) => {\n          if (res && res._hex > 0) {\n            setApproveStatus(true)\n          } else {\n            setApproveStatus(false)\n          }\n        })\n        .catch(() => {\n          setApproveStatus(false)\n        })\n        .finally(() => {\n          setCheckApproveLoading(false)\n        })\n    }\n\n    // console.log('valueToKeyMap[activeInfo.token]', activeInfo.token, valueToKeyMap[activeInfo.token])\n  }, [account, activeInfo, chainId, currentPosition.positionAddress, onCheckApprove])\n  const onApprove = useCallback(async () => {\n    try {\n      setApproveStatus(true)\n      const info = await handleApprove(currentPosition.positionAddress)\n\n      return info as ContractTransaction\n    } catch (error: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${error.reason}`)\n      throw error\n    }\n  }, [handleApprove, currentPosition.positionAddress, toastError])\n\n  return { approveStatus, onApprove, checkApproveLoading }\n}\n\n// short active action and info\nexport function useShortActiveAction() {\n  const dispatch = useAppDispatch()\n  const { activeAmount, activeInfo, activeIndex } = useAppSelector((state) => state.short)\n  const { pendingActionList } = useShortPendingAction()\n  const setActionInfo = useCallback(\n    (data: { token?: string; tokenType?: TokenType } = {}) => {\n      dispatch(updateActionInfo({ activeInfo: data }))\n      const _index = pendingActionList.findIndex(\n        (item) => item.token === data.token && item.tokenType === data.tokenType,\n      )\n      if (_index >= 0) {\n        dispatch(updateActiveActionIndex({ index: _index }))\n      }\n    },\n    [dispatch, pendingActionList],\n  )\n  const setActiveTab = useCallback(\n    (index: number) => {\n      dispatch(updateActiveTab({ index }))\n    },\n    [dispatch],\n  )\n  const setActionIndex = useCallback(\n    (index: number) => {\n      dispatch(updateActiveActionIndex({ index }))\n    },\n    [dispatch],\n  )\n  const setActiveAmount = useCallback(\n    (amount: any) => {\n      dispatch(updateActiveAmount({ amount }))\n    },\n    [dispatch],\n  )\n  const clearActive = useCallback(() => {\n    setActionInfo()\n    setActiveAmount('')\n    setActionIndex(-1)\n  }, [setActionIndex, setActionInfo, setActiveAmount])\n\n  // const { approveStatus, onApprove } = useShortActiveTokenApprove()\n  const _activeInfo = useMemo(() => {\n    if (activeInfo?.token) {\n      return {\n        ...activeInfo,\n        amount: activeAmount,\n        activeIndex,\n        // approveStatus,\n      }\n    }\n    return { token: null, amount: '', tokenType: null, activeIndex: -1, approveStatus: false }\n  }, [activeAmount, activeIndex, activeInfo])\n\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return {\n    setActionInfo,\n    setActiveAmount,\n    clearActive,\n    setActiveTab,\n    activeInfo: _activeInfo,\n    setActionIndex,\n    onChangeCollateralIndex,\n  }\n}\n\nexport function useShortPendingAction() {\n  const dispatch = useAppDispatch()\n  const { pendingActions } = useAppSelector((state) => state.short)\n  const _pendingActions = useMemo(() => new Map(pendingActions), [pendingActions])\n  // add action\n  const addPendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = _pendingActions.get(data.token) || []\n      _pendingActions.set(data.token, [..._actions, { ...data, type: ActionType.ADD }])\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // delete action\n  const deletePendingAction = useCallback(\n    (token: string, tokenType: TokenType) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.tokenType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // clear all action\n  const clearAllPendingAction = useCallback(() => {\n    dispatch(setShortPendingAction({ actions: new Map() }))\n  }, [dispatch])\n\n  // update action\n  const updatePendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.tokenType === data.tokenType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const updateNeutralizePendingAction = useCallback(\n    (data: Pick<NeetralizePendingAction, 'amount' | 'price' | 'token' | 'tokenType' | 'neutralizeType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.neutralizeType === data.neutralizeType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const deleteNeutralizePendingAction = useCallback(\n    (token: string, tokenType: any) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.neutralizeType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n\n  // get token type\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActions.forEach((item, index) => {\n      _map.set(\n        index,\n        item.map((i) => i.tokenType),\n      )\n    })\n    return _map\n  }, [pendingActions])\n\n  const pendingActionList = useMemo(() => {\n    return Array.from(pendingActions.values()).flat()\n  }, [pendingActions])\n\n  const tokenAmount = useMemo(() => {\n    const _obg = {}\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY || item.tokenType === TokenType.WithDraw) {\n        _obg[item.token] = item.amount\n      }\n    })\n    return _obg\n  }, [pendingActionList])\n\n  const shortAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SHORT) {\n        _amount = item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const neutralizeAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAllAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAmount = useMemo(() => {\n    const _amount = new Map<string, number>()\n    pendingActions.forEach((items) => {\n      const item = items.filter((i) => i.tokenType === TokenType.SUPPLY)[0]\n      if (item) {\n        _amount.set(item.token, item.amount)\n      }\n    })\n    return _amount\n  }, [pendingActions])\n  return {\n    addPendingAction,\n    clearAllPendingAction,\n    deletePendingAction,\n    updatePendingAction,\n    deleteNeutralizePendingAction,\n    updateNeutralizePendingAction,\n    pendingTokenTypes,\n    pendingActions,\n    pendingActionList,\n    tokenAmount,\n    shortAmount,\n    supplyAmount,\n    supplyAllAmount,\n    neutralizeAmount,\n  }\n}\n\nexport function useShortInfo() {\n  const { rateInfo, activeTab, activeInfo } = useAppSelector((state) => state.short)\n\n  const dispatch = useAppDispatch()\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n  return {\n    rateInfo,\n    onChangeCollateralIndex,\n    activeTab,\n    activeInfo,\n  }\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","export const MintThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n\nexport const LiquidationThresholdValue = {\n  days: 10,\n  ratio: 110,\n}\n\nexport const ShortThresholdValue = {\n  days: 20,\n  ratio: 120,\n}\n"],"sourceRoot":""}