{"version":3,"sources":["views/MyPage/components/Action.tsx","views/MyPage/components/Title.tsx","views/MyPage/components/icon/History.tsx","views/MyPage/components/HoldingsWallet.tsx","views/MyPage/components/OutstandingDebt.tsx","views/MyPage/index.tsx","hooks/useHashPowerToken.ts","components/Table/icon/SortIcon.tsx","components/Table/Table.tsx","state/Short/hooks.ts","hooks/useApprove.ts","components/Tabs/index.tsx","utils/addAsset.ts"],"names":["ActionButton","styled","Button","_templateObject","_taggedTemplateLiteral","claimHelper","ButtonStyled","_templateObject2","contracts","Action","_ref","row","address","rewardsData","signer","useSystemParams","claimStatus","setClaimStatus","useState","setRefresh","useHashPowerToken","connector","active","chainId","account","useWeb3React","toastInfo","toastSuccess","toastError","useToast","symbol","walletTokenBalance","isAdding","setIsAdding","addToMetaMask","useCallback","async","addAsset","tokenSymbol","useEffect","walletRewards","epochReward","isZero","avatarRewards","claimAll","claimContract","getContract","abi","params","push","avatar","Number","txInfo","multipleClaim","toLargeUnits","tokens","WBTC","decimals","claimRewardsList","window","localStorage","getItem","JSON","parse","_data","id","uuid","txHash","hash","date","Date","getTime","token","type","length","setItem","stringify","ToastTitle","submited","_jsx","TransactionSubmittedInfo","content","result","wait","success","state","e","failed","reason","children","_jsxs","Stack","direction","spacing","disabled","onClick","Title","TitleWrap","props","HistoryIcon","Svg","viewBox","fill","d","columns","numeric","disablePadding","isSort","label","HoldingsWallet","positionAll","tokenPrice","allowedTokens","usePositionInfo","dataSource","useMemo","Object","values","map","item","markPrice","settlementCurrency","mintTokenInfo","_avatarAssetList","keys","valueToKeyMap","reduce","acc","key","_tokenPrice$item$posi","isEnable","positionAddress","price","balances","claimableWallet","claimableAvatar","logo","displayMarkPrice","concat","walletBalance","TokenUtils","formatFourDecimals","avatarBalance","displayClaimableWallet","displayClaimableAvatar","Card","style","marginBottom","Link","to","Table","pagination","isMyPage","index","labelId","_Fragment","StyledTableCell","paddingLeft","component","scope","src","display","marginRight","float","width","height","alt","OutstandingDebt","setActiveTab","useShortActiveAction","handleChangeCurrentPosition","usePositionAction","prepaidInterestCoverage","collateralRatio","interestGuaranteed","obligation","epochDebt","estimatedObligationToday","positionStatus","prepaidInterest","computedPI","toNumber","totalAssetsValue","computedTC","collateralValue","displayTotalAssetsValue","displayCoverage","POSITIVE_INFINITY","Math","floor","displayRatio","formatTokenAmount","outstandingDebt","balance","color","fontSize","fontFamily","Wrapper","Box","CommonCard","_templateObject3","SubTitle","_templateObject4","ClaimButton","_templateObject5","getEstimatedDailyReward","lastEpochReward","uniswapV2Multicall","minerInterface","ethers","utils","Interface","MinerABI","blockUpdaterInterface","BlockUpdaterABI","MyPage","prevEpoch","useEpoch","hashPowerTokenList","walletTotal","setWalletTotal","avatarTotal","setAvatarTotal","dailyInterestRewards","setDailyInterestRewards","dailyObligation","setDailyObligation","setRewardsData","blastSepoliaMintTokens","curr","constants","Zero","walletEstimateDailyReward","avatarEstimateDailyReward","allRewards","setAllRewards","login","logout","useAuth","onPresentConnectModal","useWalletModal","isLogin","isSupportedChainId","pendingReward","_tokens","mintTokenChainConfigs","multicall","Multicall","prototype","hasOwnProperty","call","tokenInfo","positionInfo","collateralBalance","tokenBalances","tokenRewards","walletHasRweards","positionHasRweards","holderInfoMappingCalls","target","callData","encodeFunctionData","functionSignature","addAbi","blockUpdater","returnData","holderInfoMapping","aggregate","pendingRewardCalls","holderInfos","toSmallUnits","String","holder","reward","forEach","_walletTotal","_avatarTotal","_dailyInterestRewards","_dailyObligation","_rewardsAll","_prices$USDT","prices","avatarAssetList","WBTCToUSD","USDT","currentWBTCPrice","lpAllRewards","rewardsTransfromToUsdt","rewards","usdt","lptoken","totalRwardsWbtc","totalRwardsUsdt","totalUSDT","formatCurrencyTwoDecimals","rewardPannel","Grid","container","lineHeight","xs","toFixed","dir","BTitle","formatNumberWithUnits","paddingTop","paddingBottom","Divider","margin","className","epoch","includes","replace","Tabs","tabsStyle","minHeight","tabStyle","tab","React","memo","hashPowerToken","useContext","HashPowerTokenContext","undefined","Error","svg","SortIcon","order","xmlns","TableCell","tableCellClasses","head","border","body","borderBottom","StyledTableRow","TableRow","cursor","BoxWrapper","descendingComparator","a","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTableHead","onRequestSort","TableHead","headCell","sortDirection","TableSortLabel","property","event","IconComponent","marginLeft","EnhancedTable","rowClick","pages","selectKey","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleClick","dataSourceDom","hover","role","tabIndex","slice","textAlign","colSpan","rowSpan","TableContainer","sx","minWidth","handleRequestSort","console","log","TableBody","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onChangePage","onRowsPerPageChange","parseInt","value","useShortActiveTokenApprove","activeInfo","useAppSelector","short","currentPosition","onCheckApprove","useCheckApprove","handleApprove","useApprove","approveStatus","setApproveStatus","checkApproveLoading","setCheckApproveLoading","chainConfigs","then","res","_hex","catch","finally","onApprove","error","dispatch","useAppDispatch","activeAmount","activeIndex","pendingActionList","useShortPendingAction","setActionInfo","data","arguments","updateActionInfo","_index","findIndex","tokenType","updateActiveActionIndex","updateActiveTab","setActionIndex","setActiveAmount","amount","updateActiveAmount","clearActive","_activeInfo","onChangeCollateralIndex","ratio","coverage","updateShortRateInfo","rateInfo","rate","pendingActions","_pendingActions","Map","addPendingAction","_actions","get","set","ActionType","ADD","setShortPendingAction","actions","deletePendingAction","_nextList","filter","clearAllPendingAction","updatePendingAction","splice","updateNeutralizePendingAction","neutralizeType","deleteNeutralizePendingAction","pendingTokenTypes","_map","i","Array","from","flat","tokenAmount","_obg","TokenType","SUPPLY","WithDraw","shortAmount","_amount","SHORT","neutralizeAmount","NEUTRALIZE","supplyAllAmount","supplyAmount","items","useShortInfo","activeTab","_ref2","spender","contract","ERC20","allowance","owner","library","getSigner","approve","MaxUint256","AntTabs","TabIndicatorProps","justifyContent","backgroundColor","maxWidth","borderRadius","background","AntTab","Tab","disableRipple","theme","textTransform","breakpoints","up","fontWeight","opacity","typography","fontWeightMedium","withRouter","defaultTabsValue","history","setValue","onChange","handleChange","newValue","it","provider","getProvider","request","method","options"],"mappings":"ydAiBA,MAAMA,EAAeC,YAAOC,IAAPD,CAAcE,MAAAC,YAAA,yMAsB7B,YAAEC,IAZmBJ,YAAOK,IAAPL,CAAoBM,MAAAH,YAAA,gRAYvBI,KA6ITC,I,EAAAA,EA5If,SAAeC,GAAiC,IAAhC,IAAEC,EAAG,QAAEC,EAAO,YAAEC,GAAaH,EAC3C,MAAM,OAAEI,GAAWC,eACZC,EAAaC,GAAkBC,oBAAS,IACzC,WAAEC,GAAeC,eACjB,UAAEC,EAAS,OAAEC,EAAM,QAAEC,EAAO,QAAEC,GAAYC,eAC1C,UAAEC,EAAS,aAAEC,EAAY,WAAEC,GAAeC,eAC1C,OAAEC,GAAWnB,GACb,mBAAEoB,GAAuBX,eACxBY,EAAUC,GAAef,oBAAS,GAEnCgB,EAAgBC,uBAAYC,UAC5Bd,GAAUD,GAAaS,IACzBG,GAAY,SACNI,YAAS,CAAEhB,YAAWiB,YAAaR,EAAQP,YACjDU,GAAY,GACd,GACC,CAACZ,EAAWC,EAAQC,EAASO,IAEhCS,qBAAU,KACH1B,GAIHA,EAAY2B,cAAcC,YAAYC,UACtC7B,EAAY8B,cAAcF,YAAYC,UAEtCzB,GAAe,EACjB,GACC,CAACJ,EAAaF,EAAKoB,IACtB,MAAMa,EAAWT,uBAAYC,UAC3B,GAAItB,EAAQ,CACV,MAAM+B,EAAgBC,YAAYhC,EAAQT,EAAY0C,IAAK1C,EAAYO,QAAQW,IAC/E,GAAIsB,EACF,IACE,MAAMG,EAAS,GACfA,EAAOC,KAAK,CAACtC,EAAIC,QAAQW,GAAUC,IAE/Bb,EAAIuC,QAAUC,OAAOxC,EAAIuC,QAAU,GACrCF,EAAOC,KAAK,CAACtC,EAAIC,QAAQW,GAAUZ,EAAIuC,SAEzCjC,GAAe,GAEf,MAAMmC,QAAeP,EAAcQ,cAAcL,GAC3CL,EAAgBW,YAAazC,EAAY8B,cAAc,GAAIY,IAAOC,KAAKC,UACvEjB,EAAgBc,YAAazC,EAAY2B,cAAc,GAAIe,IAAOC,KAAKC,UAC7E,GAAIL,EAAQ,CACV,IAAIM,EAAmBC,OAAOC,aAAaC,QAAQ,oBACnD,GAAIH,EAAkB,CACpBA,EAAmBI,KAAKC,MAAML,GAC9B,MAAMM,EAAQ,IAETN,EACH,CACEO,GAAIC,MACJC,OAAQf,EAAOgB,KACfC,MAAM,IAAIC,MAAOC,UACjBjC,YAAa3B,EAAI6D,MACjBhC,gBACAG,gBACA8B,KAAM,cAGNzB,EAAO0B,OAAS,GAClBV,EAAMf,KAAK,CACTgB,GAAIC,MACJC,OAAQf,EAAOgB,KACfC,MAAM,IAAIC,MAAOC,UACjBjC,YAAa3B,EAAI6D,MACjBhC,gBACAG,gBACA8B,KAAM,eAGVd,OAAOC,aAAae,QAAQ,mBAAoBb,KAAKc,UAAUZ,GACjE,KAAO,CACL,MAAMA,EAAQ,CACZ,CACEC,GAAIC,MACJC,OAAQf,EAAOgB,KACfC,MAAM,IAAIC,MAAOC,UACjBjC,YAAa3B,EAAI6D,MACjBhC,gBACAG,gBACA8B,KAAM,cAGNzB,EAAO0B,OAAS,GAClBV,EAAMf,KAAK,CACTgB,GAAIC,MACJC,OAAQf,EAAOgB,KACfC,MAAM,IAAIC,MAAOC,UACjBjC,YAAa3B,EAAI6D,MACjBhC,gBACAG,gBACA8B,KAAM,qBAGVd,OAAOC,aAAae,QAAQ,mBAAoBb,KAAKc,UAAUZ,GACjE,CAEAtC,EAAUmD,IAAWC,SAAUC,cAACC,IAAwB,CAACb,OAAQf,EAAOgB,KAAMa,QAAQ,8BACtF,MAAMC,QAAe9B,EAAO+B,OAC5BxD,EAAakD,IAAWO,QAASL,cAACC,IAAwB,CAACb,OAAQf,EAAOgB,KAAMa,QAAQ,oCACxF9D,GAAYkE,IAAWA,IAEnBH,GACFjE,GAAe,EAEnB,CACF,CAAE,MAAOqE,GACPrE,GAAe,GACfW,EAAWiD,IAAWU,OAAS,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,OACnC,CAEJ,IACC,CAAChE,EAASD,EAASV,EAAaF,EAAKQ,EAAYL,EAAQc,EAAYF,EAAWC,IAEnF,OACEoD,cAAA,OAAAU,SACEC,eAACC,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAEJ,SAAA,CAChCV,cAAC/E,EAAY,CAAC8F,SAAU9E,EAAa+E,QAASnD,EAAS6C,SAAC,kBAYxDV,cAAC/E,EAAY,CAAC8F,SAAU9D,EAAU+D,QAAS7D,EAAcuD,SAAC,wBAMlE,EC/KA,MAAMO,EAAQ/F,YAAO,MAAPA,CAAaE,MAAAC,YAAA,skBAuCZ6F,MAPf,SAAmBC,GACjB,MAAM,SAACT,GAAYS,EACnB,OACEnB,cAACiB,EAAK,IAAKE,EAAKT,SAAGA,GAEvB,EC7BeU,MARf,SAAqBD,GACnB,OACEnB,cAACqB,IAAG,CAACC,QAAQ,YAAYC,KAAK,UAAWJ,EAAKT,SAC1CV,cAAA,QAAMwB,EAAE,y8DAAy8DD,KAAK,aAG99D,ECKA,MAAME,EAAU,CACd,CACEvC,GAAI,SACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,UAET,CACE3C,GAAI,YACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,cAET,CACE3C,GAAI,gBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,aAET,CACE3C,GAAI,gBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,iBAET,CACE3C,GAAI,kBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,yBAET,CACE3C,GAAI,kBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,6BAET,CACE3C,GAAI,SACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,WA6GIC,MApGf,SAAuBnG,GAEnB,IAFoB,YAAEG,GAEzBH,EACC,MAAM,mBAAEqB,GAAuBX,eACzB,QAAEI,GAAYC,eACd,YAAEqF,EAAW,WAAEC,EAAU,cAAEC,GAAkBC,cAE7CC,EAAaC,mBAAQ,IACZC,OAAOC,OAAOP,GAEfQ,KAAKC,IACf,IAAIC,EAAY,EAChB,MAAM,mBAAEC,GAAuBF,EAAKG,cACpC,IAAIC,EAAmBP,OAAOQ,KAAKC,KAAeC,QAAO,CAACC,EAAKC,KACtD,IACFD,EACH,CAACC,GAAM,KAER,CAAC,GACoD,IAADC,EAAnDV,EAAKW,UAAYnB,EAAWQ,EAAKY,mBACnCX,EAAYlE,YACiD,QADrC2E,EACtBlB,EAAWQ,EAAKY,iBAAiBZ,EAAKG,cAAc5F,eAAO,IAAAmG,OAAA,EAA3DA,EAA6DG,MAC7DX,EAAmBhE,UACnB,IAGJ,GAAI8D,EAAKW,UAAYlB,EAAcO,EAAKY,iBAAkB,CACxD,MAAM,SAAEE,EAAQ,OAAE9E,GAAWyD,EAAcO,EAAKY,iBAC5CE,GAAY9E,IACdoE,EAAmBP,OAAOQ,KAAKS,GAAUP,QAAO,CAACC,EAAKC,KAC7C,IACFD,EACH,CAACC,GAAM1E,YAAa+E,EAASL,GAAMzE,EAAOyE,GAAKvE,UAAU,MAE1D,IACEkE,IAIT,CACA,MAAMW,EAAkBhF,YAAazC,EAAY0G,EAAKG,cAAc5F,QAAQU,cAAcC,YAAagF,EAAmBhE,UAAU,GAC9H8E,EAAkBjF,YAAazC,EAAY0G,EAAKG,cAAc5F,QAAQa,cAAcF,YAAagF,EAAmBhE,UAAU,GACpI,MAAO,CACL3B,OAAQyF,EAAKG,cAAc5F,OAC3B0G,KAAMjB,EAAKG,cAAcc,KACzBhB,YACAiB,iBAAiB,GAADC,OAAKlB,EAAS,KAAAkB,OAAIjB,EAAmB3F,QACrD6G,cAAexF,OAAOyF,IAAWC,mBAAmB9G,EAAmBwF,EAAKG,cAAc5F,UAC1FgH,cAAe3F,OAAOwE,EAAiBJ,EAAKG,cAAc5F,SAC1DwG,kBACAC,kBACAQ,uBAAuB,GAADL,OAAKJ,EAAe,KAAAI,OAAIjB,EAAmB3F,QACjEkH,uBAAuB,GAADN,OAAKH,EAAe,KAAAG,OAAIjB,EAAmB3F,QAClE,KAEF,CAACkF,EAAeF,EAAajG,EAAakG,EAAYhF,IAEzD,OACE2D,eAACuD,IAAI,CAACC,MAAO,CAAEC,aAAc,IAAK1D,SAAA,CAChCC,eAACM,EAAK,CAAAP,SAAA,CACJV,cAAA,MAAAU,SAAI,+BACJC,eAAC0D,IAAI,CAACC,GAAG,qBAAoB5D,SAAA,CAC3BV,cAACoB,EAAW,IAAG,yBAGnBpB,cAACuE,IAAK,CACJ9C,QAASA,EACTU,WAAYA,EACZqC,YAAY,EACZC,UAAQ,EACRvE,QAASA,CAACtE,EAAK8I,EAAOC,IACpBhE,eAAAiE,WAAA,CAAAlE,SAAA,CACEC,eAACkE,IAAe,CAACV,MAAO,CAAEW,YAAa,GAAKC,UAAU,KAAK7F,GAAIyF,EAASK,MAAM,MAAKtE,SAAA,CACjFV,cAAA,OACEiF,IAAKrJ,EAAI6H,KACTU,MAAO,CAAEe,QAAS,QAASC,YAAa,EAAGC,MAAO,OAAQC,MAAO,GAAIC,OAAQ,IAC7EC,IAAI,SAEL3J,EAAImB,UAEPiD,cAAC6E,IAAe,CAAAnE,SAAE9E,EAAI8H,mBACtB1D,cAAC6E,IAAe,CAAAnE,SAAE9E,EAAIgI,gBACtB5D,cAAC6E,IAAe,CAAAnE,SACb9E,EAAImI,gBAEP/D,cAAC6E,IAAe,CAAAnE,SACb9E,EAAIoI,yBAEPhE,cAAC6E,IAAe,CAAAnE,SACb9E,EAAIqI,yBAEPjE,cAAC6E,IAAe,CAAAnE,SACdV,cAACtE,EAAM,CAACE,IAAKA,EAAKC,QAASY,EAASX,YAAaA,EAAYF,EAAImB,mBAO/E,E,iBC5JA,MAAM0E,GAAU,CACd,CACEvC,GAAI,SACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,UAET,CACE3C,GAAI,YACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,cAET,CACE3C,GAAI,mBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,oBAET,CACE3C,GAAI,kBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,oBAET,CACE3C,GAAI,0BACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,6BAET,CACE3C,GAAI,kBACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,6BAST,CACE3C,GAAI,SACJwC,SAAS,EACTC,gBAAgB,EAChBC,QAAQ,EACRC,MAAO,WAwJI2D,I,eAAAA,GApJf,WACE,MAAM,aAAEC,GAAiBC,eAEnB,YAAE3D,EAAW,WAAEC,EAAU,cAAEC,GAAkBC,eAC7C,4BAAEyD,GAAgCC,cAIlCzD,EAAaC,mBAAQ,IACZC,OAAOC,OAAOP,GAEfQ,KAAKC,IACf,IAAIC,EAAY,EAChB,MAAM,mBAAEC,GAAuBF,EAAKG,cACpC,IAAIC,EAAmBP,OAAOQ,KAAKC,KAAeC,QAAO,CAACC,EAAKC,KACtD,IACFD,EACH,CAACC,GAAM,KAER,CAAC,GACoD,IAADC,EAAnDV,EAAKW,UAAYnB,EAAWQ,EAAKY,mBACnCX,EAAYlE,YACiD,QADrC2E,EACtBlB,EAAWQ,EAAKY,iBAAiBZ,EAAKG,cAAc5F,eAAO,IAAAmG,OAAA,EAA3DA,EAA6DG,MAC7DX,EAAmBhE,UACnB,IAGJ,GAAI8D,EAAKW,UAAYlB,EAAcO,EAAKY,iBAAkB,CACxD,MAAM,SAAEE,EAAQ,OAAE9E,GAAWyD,EAAcO,EAAKY,iBAC5CE,GAAY9E,IACdoE,EAAmBP,OAAOQ,KAAKS,GAAUP,QAAO,CAACC,EAAKC,KAC7C,IACFD,EACH,CAACC,GAAM1E,YAAa+E,EAASL,GAAMzE,EAAOyE,GAAKvE,UAAU,MAE1D,IACEkE,IAIT,CACA,MAAM,wBAAEiD,EAAuB,gBAAEC,GAAoBtD,GAC/C,mBAAEuD,EAAkB,WAAEC,EAAU,UAAEC,EAAS,yBAAEC,GAAiC,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,eAChFC,EAAkBC,YAAW,CACjCN,mBAAoBA,EAAmBO,WACvCN,WAAYA,EAAWM,WACvBL,UAAWA,EAAUK,WACrBJ,yBAA0BA,EAAyBI,aAE/CC,EAAmBhI,YACvBiI,YAAW,CACTC,gBAAiBjE,EAAK2D,eAAeM,gBAAgBH,WACrDF,oBAEE,OAAJ5D,QAAI,IAAJA,OAAI,EAAJA,EAAMG,cAAcD,mBAAmBhE,UAEzC,MAAO,CACL3B,OAAQyF,EAAKG,cAAc5F,OAC3B0G,KAAMjB,EAAKG,cAAcc,KACzBhB,YACAiB,iBAAiB,GAADC,OAAKlB,EAAS,KAAAkB,OAAIjB,EAAmB3F,QACrDgH,cAAe3F,OAAOwE,EAAiBJ,EAAKG,cAAc5F,SAC1D8I,0BACAC,kBACAS,mBACAG,wBAAwB,GAAD/C,OAAKE,IAAWC,mBAAmByC,GAAiB,KAAA5C,OAAQ,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMG,cAAcD,mBAAmB3F,QACtH4J,gBACEd,IAA4BzH,OAAOwI,kBAAoB,UAAI,GAAAjD,OAAMkD,KAAKC,MAAMjB,GAAwB,SACtGkB,aACEjB,IAAoB1H,OAAOwI,kBACvB,UACCd,GAAe,GAAAnC,OAAOE,IAAWmD,kBAAkBlB,EAAiB,GAAE,MAAG,GAAAnC,OAAQmC,GACxFmB,gBAAiB1I,YAAaiE,EAAK0E,QAAS1E,EAAKG,cAAcjE,UAAU,GAC1E,KAEF,CAACuD,EAAeF,EAAaC,IAGhC,OACErB,eAACuD,IAAI,CAACC,MAAO,CAAEC,aAAc,IAAK1D,SAAA,CAChCC,eAACM,EAAK,CAAAP,SAAA,CACJV,cAAA,MAAAU,SAAI,qBACJC,eAAC0D,IAAI,CAACC,GAAG,sBAAqB5D,SAAA,CAC5BV,cAACoB,EAAW,IAAG,8BAInBpB,cAACuE,IAAK,CACJ9C,QAASA,GACTU,WAAYA,EACZqC,YAAY,EACZC,UAAQ,EACRvE,QAASA,CAACtE,EAAK8I,EAAOC,IACpBhE,eAAAiE,WAAA,CAAAlE,SAAA,CACEC,eAACkE,IAAe,CAACV,MAAO,CAAEW,YAAa,GAAKC,UAAU,KAAK7F,GAAIyF,EAASK,MAAM,MAAKtE,SAAA,CACjFV,cAAA,OACEiF,IAAKrJ,EAAI6H,KACTU,MAAO,CAAEe,QAAS,QAASC,YAAa,EAAGC,MAAO,OAAQC,MAAO,GAAIC,OAAQ,IAC7EC,IAAI,SAEL3J,EAAImB,UAEPiD,cAAC6E,IAAe,CAAAnE,SAAE9E,EAAI8H,mBACtB1D,cAAC6E,IAAe,CAAAnE,SACb9E,EAAI8K,0BAEP1G,cAAC6E,IAAe,CAAAnE,SACb9E,EAAImL,eAEP/G,cAAC6E,IAAe,CAAAnE,SACb9E,EAAI+K,kBAEP3G,cAAC6E,IAAe,CAAAnE,SACb9E,EAAIqL,kBAGPjH,cAAC6E,IAAe,CAAAnE,SACdC,eAACC,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAEJ,SAAA,CAChCV,cAACqE,IAAI,CACHF,MAAO,CAAEgD,MAAO,UAAWC,SAAU,OAAQC,WAAY,iCACzD/C,GAAG,qBACHtD,QAASA,KAEP2E,EAA4B/J,EAAImB,OAAO,EACvC2D,SACH,sBAGDV,cAACqE,IAAI,CACHF,MAAO,CAAEgD,MAAO,UAAWC,SAAU,OAAQC,WAAY,iCACzD/C,GAAG,mBACHtD,QAASA,KACPyE,EAAa,GAEbE,EAA4B/J,EAAImB,OAAO,EACvC2D,SACH,2BAUjB,E,UC7LA,MAAM4G,GAAUpM,YAAO,MAAPA,CAAaE,QAAAC,YAAA,gEAKvBkM,GAAMrM,YAAO,MAAPA,CAAaM,QAAAH,YAAA,uLAYnBmM,GAAatM,YAAOgJ,IAAPhJ,CAAYuM,QAAApM,YAAA,0mBAmCzBqM,GAAWxM,YAAO+F,IAAP/F,CAAayM,QAAAtM,YAAA,qKASxBuM,GAAc1M,YAAOC,IAAPD,CAAc2M,QAAAxM,YAAA,oYAoB5ByM,GAA0BA,CAACC,EAA4Bb,IACpDL,KAAKC,MAAMiB,EAAgBzB,WAAaY,EAAQZ,WAAa,OAE9DhL,YAAW,sBAAE0M,IAAuBvM,IACtCwM,GAAiB,IAAIC,SAAOC,MAAMC,UAAUC,GAC5CC,GAAwB,IAAIJ,SAAOC,MAAMC,UAAUG,GAGzD,SAASC,KACP,MAAM,UAAEC,GAAcC,gBACfzM,EAAaC,GAAkBC,oBAAS,IACzC,mBAAEwM,EAAkB,mBAAE3L,EAAkB,WAAEZ,GAAeC,eACzD,OAAEN,GAAWC,eACb,QAAEQ,EAAO,QAAEC,EAAO,OAAEF,GAAWG,eAC/B,WAAEG,EAAU,aAAED,EAAY,UAAED,GAAcG,eACzC8L,EAAaC,GAAkB1M,mBAAS,IACxC2M,EAAaC,GAAkB5M,mBAAS,IACxC6M,EAAsBC,GAA2B9M,mBAAS,IAC1D+M,EAAiBC,GAAsBhN,mBAAS,IAChDL,EAAasN,GAAkBjN,mBAAqBkG,OAAOC,OAAO+G,KAAwBtG,QAAO,CAACC,EAAKsG,KACrG,IACFtG,EACH,CAACsG,EAAKvM,QAAS,CACbU,cAAe,CACbC,YAAawK,SAAOqB,UAAUC,MAEhC5L,cAAe,CACbF,YAAawK,SAAOqB,UAAUC,MAEhCC,0BAA2B,EAC3BC,0BAA2B,MAG9B,CAAC,KACGC,EAAYC,GAAiBzN,mBAAS,KACvC,MAAE0N,EAAK,OAAEC,GAAWC,eACpB,sBAAEC,GAA0BC,YAAeJ,EAAOC,EAAQrN,GAE1DyN,EAAU9H,mBAAQ,IACf7F,GAAUC,GAAW2N,YAAmB3N,IAC9C,CAACD,EAAQC,KACN,YAAEuF,GAAW,WAAEC,GAAU,cAAEC,IAAkBC,cAG7CrE,GAAWT,uBAAYC,UAC3B,GAAKZ,GAKL,GAAIV,EAAQ,CACV,MAAM+B,EAAgBC,YAAYhC,EAAQT,GAAY0C,IAAK1C,GAAYO,QAAQW,IAC/E,GAAIsB,EACF,IACE,MAAMG,EAAS,GACf,IAAK,MAAMuE,KAAQmG,EACjB1K,EAAOC,KAAK,CAACsE,EAAK3G,QAAQW,GAAUC,IAChC+F,EAAKrE,QAAUC,OAAOoE,EAAKrE,QAAU,GACvCF,EAAOC,KAAK,CAACsE,EAAK3G,QAAQW,GAAUgG,EAAKrE,SAG7CjC,GAAe,GACf,MAAMmC,QAAeP,EAAcQ,cAAcL,GAC7CI,IACF1B,EAAUmD,IAAWC,SAAUC,cAACC,IAAwB,CAACb,OAAQf,EAAOgB,KAAMa,QAAQ,oCAChF7B,EAAO+B,OACbxD,EAAakD,IAAWO,QAASL,cAACC,IAAwB,CAACb,OAAQf,EAAOgB,KAAMa,QAAQ,oCACxF9D,GAAYkE,IAAWA,IACvBpE,GAAe,GAEnB,CAAE,MAAOqE,GACPrE,GAAe,GACfW,EAAWiD,IAAWU,OAAS,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGE,OACnC,CAEJ,OA7BEuJ,GA6BF,GACC,CACDvN,EACAD,EACAmM,EACAvM,EACAL,EACAc,EACAF,EACAC,EACAoN,IAGII,GAAgBhN,uBAAYC,UAChC,GAAI6M,GAAWlN,EAAoB,CACjC,MAAMqN,EAAUC,IAAsB9N,GAA6BgC,OAC7D+L,EAAY,IAAIC,IAAUhO,EAASwL,GAAmBnM,QAASmM,GAAmBhK,KAExF,IAAK,MAAMiF,KAAOoH,EAChB,GAAIhI,OAAOoI,UAAUC,eAAeC,KAAKN,EAASpH,GAAM,CACtD,MAAM2H,EAAYP,EAAQpH,GACpB4H,EAAe9I,GAAYkB,GAC3BW,EAAgB5G,EAAmB4N,EAAU7N,SAAW,EAC9D,IAAI+N,EAAoB,EAExB,GAAID,EAAa1H,UAAYlB,GAAc4I,EAAazH,iBAAkB,CAExE,MAAM,SAAEE,EAAQ,OAAE9E,GAAWyD,GAAc4I,EAAazH,iBAClD2H,EAAgB1I,OAAOQ,KAAKS,GAAUP,QAAO,CAACC,EAAKsG,KAChD,IACFtG,EACH,CAACsG,GAAO/K,YAAa+E,EAASgG,GAAO9K,EAAO8K,GAAM5K,UAAU,MAE7D,CAAC,GACJoM,EAAoBC,EAAcH,EAAU7N,SAAW,CACzD,CAIA,MAAMiO,EAAe,CACnBvN,cAAe,CACbC,YAAawK,SAAOqB,UAAUC,MAEhC5L,cAAe,CACbF,YAAawK,SAAOqB,UAAUC,MAEhCC,0BAA2B,EAC3BC,0BAA2B,GAE7B,IAAIuB,GAAmB,EACnBC,GAAqB,EAGzB,MAAMC,EAAyB,GAmB/B,GAlBIvH,IACFqH,GAAmB,EACnBE,EAAuBjN,KAAK,CAC1BkN,OAAQR,EAAU/O,QAClBwP,SAAUpD,GAAeqD,mBAAmB,oBAAqB,CAAC7O,IAClE8O,kBAAmB,uBAGnBV,EAAa1H,UAAY2H,EAAoB,IAC/CI,GAAqB,EACrBC,EAAuBjN,KAAK,CAC1BkN,OAAQR,EAAU/O,QAClBwP,SAAUpD,GAAeqD,mBAAmB,oBAAqB,CAACT,EAAazH,kBAC/EmI,kBAAmB,uBAGvBhB,EAAUiB,OAAOZ,EAAU/O,QAASwM,GACpCkC,EAAUiB,OAAOZ,EAAUa,aAAclD,GACH,IAAlC4C,EAAuBxL,OACzB,SAEF,MACE+L,YAAY,kBAAEC,UACNpB,EAAUqB,UAAUT,GACxBU,EAAqB,GAC3B,GAAsC,IAAlCV,EAAuBxL,OAAc,CACvC,GAAIsL,EAAkB,CACpB,MAAMa,EAAcH,EAAkB,GAEtCE,EAAmB3N,KAAK,CACtBkN,OAAQR,EAAUa,aAClBJ,SAAU/C,GAAsBgD,mBAAmB,gBAAiB,CAClES,YAAaC,OAAOpI,GAAgBgH,EAAUlM,UAC9CoN,EAAY,GACZA,EAAY,GACZA,EAAY,KAEdP,kBAAmB,iBAEvB,CACA,GAAIL,EAAoB,CACtB,MAAMY,EAAcH,EAAkB,GAEtCE,EAAmB3N,KAAK,CACtBkN,OAAQR,EAAUa,aAClBJ,SAAU/C,GAAsBgD,mBAAmB,gBAAiB,CAClES,YAAaC,OAAOlB,GAAoBF,EAAUlM,UAClDoN,EAAY,GACZA,EAAY,GACZA,EAAY,KAEdP,kBAAmB,iBAEvB,CACF,MACEM,EAAmB3N,QAAQyN,EAAkBpJ,KAAI,CAAC0J,EAAQvH,KACjD,CACL0G,OAAQR,EAAUa,aAClBJ,SAAU/C,GAAsBgD,mBAAmB,gBAAiB,CAClES,YAAaC,OAAiB,IAAVtH,EAAcd,EAAgBkH,GAAoBF,EAAUlM,UAChFuN,EAAO,GACPA,EAAO,GACPA,EAAO,KAETV,kBAAmB,qBAIzB,MAEEG,YAAY,cAAEtB,UACNG,EAAUqB,UAAUC,GAE9B,GAAkC,IAA9BA,EAAmBlM,OAAc,CACnC,MAAMuM,EAAS9B,EAAc,GACzBa,IACFD,EAAavN,cAAgB,CAC3BC,YAAawO,EAAOxO,aAEtBsN,EAAavB,0BAA4B3B,GAAwB+C,EAAa9C,gBAAiBgE,YAAaC,OAAOpI,GAAgBgH,EAAUlM,YAE3IwM,IACFF,EAAapN,cAAgB,CAC3BF,YAAawO,EAAOxO,aAEtBsN,EAAatB,0BAA4B5B,GAAwB+C,EAAa9C,gBAAiBgE,YAAaC,OAAOlB,GAAoBF,EAAUlM,WAErJ,MACE0L,EAAc+B,SAAQ,CAACD,EAAQxH,KACf,IAAVA,IACFsG,EAAavN,cAAgB,CAC3BC,YAAawO,EAAOxO,aAEtBsN,EAAavB,0BAA4B3B,GAAwB+C,EAAa9C,gBAAiBgE,YAAaC,OAAOpI,GAAgBgH,EAAUlM,YAEjI,IAAVgG,IACFsG,EAAapN,cAAgB,CAC3BF,YAAawO,EAAOxO,aAEtBsN,EAAatB,0BAA4B5B,GAAwB+C,EAAa9C,gBAAiBgE,YAAaC,OAAOlB,GAAoBF,EAAUlM,WACnJ,IAGJ0K,GAAgB9I,IACP,IACFA,EACH,CAAC2C,GAAM+H,KAGb,CAEJ,IACC,CAACvO,EAASwF,GAAezF,EAAS0N,EAASnI,GAAa/E,IAE3DQ,qBAAU,KACR4M,IAAe,GACd,CAACA,KAEJ5M,qBAAU,KACR,IAAI4O,EAAe,EACfC,EAAe,EACfC,EAAwB,EACxBC,EAAmB,EACvB,MAAMC,EAAc,GAEpB,IAAK,MAAMhK,KAAQH,OAAOC,OAAOP,IAAc,CAAC,IAAD0K,EAC7C,MAAM,cAAE9J,EAAa,gBAAES,EAAe,SAAED,GAAaX,EAE/CkK,EAAS1K,GAAWoB,GAC1B,IAAKf,OAAOoI,UAAUC,eAAeC,KAAK+B,EAAQ/J,EAAc5F,QAC9D,SAEF,IAAI4P,EAAkBtK,OAAOQ,KAAKC,KAAeC,QAAO,CAACC,EAAKC,KACrD,IACFD,EACH,CAACC,GAAM,KAER,CAAC,GAEJ,GAAIE,GAAYlB,GAAcmB,GAAkB,CAC9C,MAAM,SAAEE,EAAQ,OAAE9E,GAAWyD,GAAcmB,GAC3CuJ,EAAkBtK,OAAOQ,KAAKS,GAAUP,QAAO,CAACC,EAAKC,KAC5C,IACFD,EACH,CAACC,GAAMK,EAASL,GAAKtF,SAAW,EAAIY,YAAa+E,EAASL,GAAMzE,EAAOyE,GAAKvE,UAAU,MAEvF,CAAC,EACN,CAEA,MAAMkO,IAAmB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQG,OAAQ,GAAU,OAANH,QAAM,IAANA,GAAY,QAAND,EAANC,EAAQG,YAAI,IAAAJ,OAAN,EAANA,EAAcpJ,MAAMiD,aAAc,IAAI,GAAK,EAC5EwG,EAAmB1O,OAAOG,YAAamO,EAAO/J,EAAc5F,QAAQsG,MAAOV,EAAcD,mBAAmBhE,WAMlH,GALA0N,GACEpP,EAAmB2F,EAAc5F,QAAU+P,EAAmBF,EAChEP,GACEM,EAAgBhK,EAAc5F,QAAU+P,EACxCF,EACE9Q,EAAY6G,EAAc5F,QAAS,CAGrCuP,IAFkCxQ,EAAY6G,EAAc5F,QAAQ0M,0BAA4B,IAAM9G,EAAcD,mBAAmBhE,SACrG5C,EAAY6G,EAAc5F,QAAQ2M,0BAA4B,IAAM/G,EAAcD,mBAAmBhE,UACpDkO,EACnFL,GAAoBzE,GAAwBtF,EAAKuF,gBAAiBvF,EAAK0E,SAAW,IAAMvE,EAAcD,mBAAmBhE,SAAWkO,EAEpI,MAAMnP,EAAgBW,OACpBG,YAAazC,EAAY6G,EAAc5F,QAAQU,cAAcC,YAAaiF,EAAcD,mBAAmBhE,WAEvGd,EAAgBQ,OACpBG,YAAazC,EAAY6G,EAAc5F,QAAQa,cAAcF,YAAaiF,EAAcD,mBAAmBhE,WAEvGqO,EAAetP,EAAgBG,EAC/BoP,GAA0BvP,EAAgBG,GAAiBgP,EACjEJ,EAAYtO,KAAK,CACf+O,QAASF,EACTG,KAAMF,EACNG,QAASxK,EAAc5F,QAE3B,CACA8L,EAAeuD,GACfrD,EAAesD,GACfpD,EAAwBqD,GACxBnD,EAAmBoD,GACnB3C,EAAc4C,EAChB,IACC,CAACvK,GAAe0G,EAAoB5G,GAAajG,EAAakG,GAAYhF,IAE7E,MAAMoQ,GAAkBhL,mBAAQ,IAChBuH,EAAW5G,QAAO,CAACC,EAAKkJ,IAAWlJ,EAAMkJ,EAAOe,SAAS,IAEtE,CAACtD,IACE0D,GAAkBjL,mBAAQ,KAC9B,MAAMkL,EAAY3D,EAAW5G,QAAO,CAACC,EAAKkJ,IAAWlJ,EAAMkJ,EAAOgB,MAAM,GACxE,OAAOrJ,IAAW0J,0BAA0BD,EAAU,GACrD,CAAC3D,IAEE6D,GAAepL,mBAAQ,IAEzBzB,eAAC8M,IAAI,CAACC,WAAS,EAACvJ,MAAO,CAAEC,aAAc,GAAIuJ,WAAY,OAAQvG,SAAU,QAAS1G,SAAA,CAChFV,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SACfC,eAAA,QAAAD,SAAA,CAAQ0M,IAAmBA,GAAgBS,QAAQ,IAAOT,GAAgB,aAE5EpN,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAGE,IAAI,MAAKpN,SACzBC,eAAA,QAAAD,SAAA,CAAM,IAAE2M,GAAgB,kBAI7B,CAACA,GAAiBD,KACrB,OACEzM,eAAC2G,GAAO,CAAA5G,SAAA,CACNV,cAAC+N,IAAM,CAAArN,SAAC,YACRC,eAAC4G,GAAG,CAAA7G,SAAA,CACFC,eAAC8M,IAAI,CAACC,WAAS,EAAC5M,QAAS,EAAEJ,SAAA,CACzBV,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SACfC,eAAC8M,IAAI,CAACC,WAAS,EAAC5M,QAAS,EAAEJ,SAAA,CACzBV,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,GAAGlN,SAChBC,eAAC6G,GAAU,CAAA9G,SAAA,CACTV,cAAC0H,GAAQ,CAAAhH,SAAC,yCACVC,eAAC8M,IAAI,CAACC,WAAS,EAAAhN,SAAA,CACbC,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SAAA,CACfV,cAAA,MAAAU,SAAI,+BACJC,eAAA,KAAAD,SAAA,CACEV,cAAA,OAAAU,SAAK,WAAO,IAAEmD,IAAWmK,sBAAsBpF,SAGnDjI,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SAAA,CACfV,cAAA,MAAAU,SAAI,kCACJC,eAAA,KAAAD,SAAA,CACEV,cAAA,OAAAU,SAAK,WAAO,IAAEmD,IAAWmK,sBAAsBlF,iBAMzD9I,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,GAAIzJ,MAAO,CAAE8J,WAAY,IAAKvN,SAC3CC,eAAC6G,GAAU,CAACrD,MAAO,CAAE+J,cAAe,IAAKxN,SAAA,CACvCV,cAAC0H,GAAQ,CAAAhH,SAAC,sBACVC,eAAC8M,IAAI,CAACC,WAAS,EAAC5M,QAAS,EAAEJ,SAAA,CACzBC,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SAAA,CACd8M,GACDxN,cAACmO,IAAO,CAAChK,MAAO,CAAEC,aAAc,MAChCzD,eAAC8M,IAAI,CAACC,WAAS,EAACvJ,MAAO,CAAEC,aAAc,GAAIuJ,WAAY,OAAQvG,SAAU,QAAS1G,SAAA,CAChFV,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SACfV,cAAA,QAAAU,SAAM,YAERV,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAGE,IAAI,MAAKpN,SACzBC,eAAA,QAAAD,SAAA,CAAM,IAAE2M,GAAgB,oBAI9B1M,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAGzJ,MAAO,CAAE8J,WAAY,EAAGnJ,YAAa,IAAKpE,SAAA,CAC1DV,cAAA,OACEiF,IAAI,kBACJd,MAAO,CAAEkB,MAAO,IAAKC,OAAQ,IAAK8I,OAAQ,eAAgBlJ,QAAS,SACnEK,IAAI,iBAENvF,cAAC4H,GAAW,CACV7G,SAAU9E,EACVkI,MAAO,CAAEiK,OAAQ,YACjBC,UAAS,GAAA1K,OAAK1H,EAAc,WAAa,IACzC+E,QAASnD,GAAS6C,SACnB,sCASbV,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,EAAElN,SACfC,eAAC6G,GAAU,CAAC6G,UAAU,aAAY3N,SAAA,CAChCC,eAAC+G,GAAQ,CAAAhH,SAAA,CAAC,SAAO+H,EAAU6F,MAAM,cACjC3N,eAAC8M,IAAI,CAACC,WAAS,EAAAhN,SAAA,CACbC,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,GAAIzJ,MAAO,CAAEC,aAAc,IAAK1D,SAAA,CAC7CV,cAAA,MAAAU,SAAI,mBACJC,eAAA,KAAAD,SAAA,CACEV,cAAA,OAAAU,SAAK,WAAO,IAAEsN,YAAsBhF,SAGxCrI,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,GAAIzJ,MAAO,CAAEC,aAAc,IAAK1D,SAAA,CAC7CV,cAAA,MAAAU,SAAI,kBACJC,eAAA,KAAAD,SAAA,CACEV,cAAA,OAAAU,SAAK,WAAO,IAAEsN,YAAsB9E,SAGxClJ,cAACyN,IAAI,CAACjL,MAAI,EAACoL,GAAI,GAAIzJ,MAAO,CAAEC,aAAc,IAAK1D,SAC7CV,cAACmO,IAAO,MAGVxN,eAAC8M,IAAI,CAACjL,MAAI,EAACoL,GAAI,GAAIzJ,MAAO,CAAEC,aAAc,IAAK1D,SAAA,CAC7CV,cAAA,MAAAU,SAAI,gBACJC,eAAA,KAAAD,SAAA,CACEV,cAAA,OAAAU,SAAK,WACJsN,YAAsBhF,EAAuBE,GAAiBqF,SAAS,KACpEP,YAAsBhF,EAAuBE,GAAiBsF,QAAQ,IAAK,MAAK,IAAA7K,OAC5EqK,YAAsBhF,EAAuBE,qBAOjElJ,cAAA,OAAKmE,MAAO,CAAEkB,MAAO,QAAS3E,SAC5BV,cAACyO,IAAI,CACHC,UAAW,CACTC,UAAW,GACX7J,YAAa,IAEf8J,SAAU,CACRX,WAAY,EACZC,cAAe,EACfS,UAAW,GACXhB,WAAY,QAEdkB,IAAK,CACH,CACEhN,MAAO,MACPkD,UACEpE,eAAAiE,WAAA,CAAAlE,SAAA,CACEV,cAAC8B,EAAc,CAAChG,YAAaA,IAE7BkE,cAACwF,GAAe,QAItB,CACE3D,MAAO,WACPkD,UAAW/E,cAAC8B,EAAc,CAAChG,YAAaA,KAM1C,CACE+F,MAAO,mBACPkD,UAAW/E,cAACwF,GAAe,eAQ3C,CAEesJ,cAAMC,KAAKvG,G,mCCvkB1B,oBAaenM,IAVWA,KACxB,MAAM2S,EAAiBC,qBAAWC,KAElC,QAAuBC,IAAnBH,EACF,MAAM,IAAII,MAAM,oCAGlB,OAAOJ,CAAc,C,8PCPvB,MAAM3N,EAAMnG,IAAOmU,IAAGjU,MAAAC,YAAA,iFAyBPiU,I,EAAAA,EAlBf,SAAiB3T,GAAW,IAAV,MAAC4T,GAAM5T,EACvB,OACEgF,eAAA,QAAAD,SAAA,CACIV,cAACqB,EAAG,CAACgE,MAAM,IAAIC,OAAO,IAAIhE,QAAQ,UAAUC,KAAK,OAAOiO,MAAM,6BAA4B9O,SAChGV,cAAA,QACEwB,EAAE,gSACFD,KAAgB,QAAVgO,EAAiB,OAAQ,eAEjCvP,cAACqB,EAAG,CAAEgE,MAAM,IAAIC,OAAO,IAAIhE,QAAQ,UAAUC,KAAK,OAAOiO,MAAM,6BAA4B9O,SAC3FV,cAAA,QACEwB,EAAE,gRACFD,KAAgB,SAAVgO,EAAkB,OAAQ,iBAKpC,ECVO,MAAM1K,EAAkB3J,YAAOuU,IAAPvU,EAAkB,MAC/C,CAAC,KAADyI,OAAM+L,IAAiBC,OAAS,CAC9BC,OAAQ,OACRzI,MAAO,sBAET,CAAC,KAADxD,OAAM+L,IAAiBG,OAAS,CAC9BzI,SAAU,GACV0I,aAAc,yBAGLC,EAAiB7U,YAAO8U,IAAP9U,EAAiB,MAC7C+U,OAAQ,UAER,mCAAoC,CAClC7I,SAAU,GACV0I,aAAc,wCAIZI,EAAahV,YAAOqM,IAAPrM,CAAWE,MAAAC,YAAA,iJAS9B,SAAS8U,EAAwBC,EAAMC,EAAMC,GAC3C,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,CACT,CAIA,SAASC,EACPhB,EACAe,GAEA,MAAiB,SAAVf,EACH,CAACa,EAAGC,IAAMF,EAAqBC,EAAGC,EAAGC,GACrC,CAACF,EAAGC,KAAOF,EAAqBC,EAAGC,EAAGC,EAC5C,CAEA,SAASE,EAAcC,EAAYC,GACjC,MAAMC,EAAiBF,EAAMlO,KAAI,CAACqO,EAAIlM,IAAU,CAACkM,EAAIlM,KAQrD,OAPAiM,EAAeE,MAAK,CAACT,EAAGC,KACtB,MAAMd,EAAQmB,EAAWN,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVd,EACKA,EAEFa,EAAE,GAAKC,EAAE,EAAE,IAEbM,EAAepO,KAAKqO,GAAOA,EAAG,IACvC,CAEA,SAASE,EAAkB3P,GACzB,MAAM,MAAEoO,EAAK,QAAEe,EAAO,cAAES,EAAa,QAAEtP,EAAO,SAAEgD,GAAW,GAAUtD,EAKrE,OACEnB,cAACgR,IAAS,CAAAtQ,SACRV,cAACgQ,IAAQ,CAAAtP,SACNe,EAAQc,KAAI,CAAC0O,EAAUvM,KACtB1E,qBAAC6E,EAAe,CACdV,MAAO,CAAEW,YAAuB,IAAVJ,GAAeD,GAAY,GAEjDyM,cAAeZ,IAAYW,EAAS/R,IAAKqQ,EAAc7O,SAErDuQ,EAASrP,OAmBTjB,eAACwQ,IAAc,CACb5U,OAAQ+T,IAAYW,EAAS/R,GAC7B2B,UAAWyP,IAAYW,EAAS/R,GAAKqQ,EAAQ,MAC7CvO,SAnCaoQ,EAmCcH,EAAS/R,GAnCTmS,IACvCN,EAAcM,EAAOD,EAAS,GAmClBE,cAAe,KACfnN,MAAO,CACLgD,MAAO,iBACPE,WAAY,kCACZ3G,SAAA,CAEDuQ,EAASpP,MACTyO,IAAYW,EAAS/R,GACpBc,cAACuH,IAAG,CAACxC,UAAU,OAAOZ,MAAO,CAAEoN,WAAY,GAAI7Q,SAE7CV,cAACsP,EAAQ,CAACC,MAAOA,MAEjB,QAlCN5O,eAACwQ,IAAc,CACb5U,OAAQ+T,IAAYW,EAAS/R,GAC7B2B,UAAWyP,IAAYW,EAAS/R,GAAKqQ,EAAQ,MAC7C+B,cAAe,KACfnN,MAAO,CACLgD,MAAO,iBACPE,WAAY,kCACZ3G,SAAA,CAEDuQ,EAASpP,MACTyO,IAAYW,EAAS/R,GACpBc,cAACuH,IAAG,CAACxC,UAAU,OAAOZ,MAAO,CAAEoN,WAAY,GAAI7Q,SAE7CV,cAACsP,EAAQ,CAACC,MAAOA,MAEjB,SAnBH0B,EAAS/R,IAVGkS,KAoDpB,OAIT,CAEe,SAASI,EAAcrQ,GACpC,MAAM,WAAEgB,EAAU,QAAEV,EAAO,QAAEvB,EAAO,WAAEsE,EAAU,SAAEiN,EAAQ,SAAEhN,EAAQ,MAAEiN,EAAK,UAAEC,GAAcxQ,GAEpFoO,EAAOqC,GAAY9C,IAAM3S,SAAgB,SACzCmU,EAASuB,GAAc/C,IAAM3S,SAASsF,EAAQ,GAAGvC,KACjD4S,EAAUC,GAAejD,IAAM3S,SAA4B,KAC3D6V,EAAMC,GAAWnD,IAAM3S,SAAS,IAChC+V,EAAaC,GAAkBrD,IAAM3S,SAAS,IAQ/CiW,EAAchV,uBAClB,CAACiU,EAAOzV,KAgBF6V,GACFA,EAASJ,EAAOzV,EAClB,GAEF,CAAC6V,IAgBGY,EAAgBvD,IAAM1R,aAAY,IAClC+E,GAAcA,EAAWxC,QAAU6E,EACjCkN,EACKlB,EAAWrO,EAAYoO,EAAchB,EAAOe,IAChD/N,KAAI,CAAC3G,EAAK8I,KACT,MAAMC,EAAO,2BAAAhB,OAA8Be,GAC3C,OACE1E,cAAC+P,EAAc,CACbuC,OAAK,EACLtR,QAAUqQ,GAAUe,EAAYf,EAAOzV,GACvC2W,KAAK,WACLC,UAAW,EAAE9R,SAGZR,EAAQtE,EAAK8I,EAAOC,IAAQ,OAAAhB,OAFjBgB,GAGG,IAIlB6L,EAAWrO,EAAYoO,EAAchB,EAAOe,IAChDmC,MAAMT,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C3P,KAAI,CAAC3G,EAAK8I,KACT,MAAMC,EAAO,2BAAAhB,OAA8Be,GAC3C,OACE1E,cAAC+P,EAAc,CACbuC,OAAK,EACLtR,QAAUqQ,GAAUe,EAAYf,EAAOzV,GACvC2W,KAAK,WACLC,UAAW,EAAE9R,SAGZR,EAAQtE,EAAK8I,EAAOC,IAAQ,OAAAhB,OAFjBgB,GAGG,IAIrBxC,GAAcA,EAAWxC,SAAW6E,EAC/BgM,EAAWrO,EAAYoO,EAAchB,EAAOe,IAAU/N,KAAI,CAAC3G,EAAK8I,KACrE,MAAMC,EAAO,2BAAAhB,OAA8Be,GAC3C,OACE1E,cAAC+P,EAAc,CACbuC,OAAK,EACLtR,QAAUqQ,GAAUe,EAAYf,EAAOzV,GACvC2W,KAAK,WACLC,UAAW,EAAE9R,SAGZR,EAAQtE,EAAK8I,EAAOC,IAAQ,OAAAhB,OAFjBgB,GAGG,IAKrB3E,cAAC+P,EAAc,CAAArP,SACbV,cAAC6E,EAAe,CAACV,MAAO,CAAEuO,UAAW,UAAYC,QAASlR,EAAQ9B,OAAQiT,QAAS,EAAElS,SAAC,eAKzF,CAACe,EAAQ9B,OAAQO,EAASiC,EAAYiQ,EAAa7C,EAAOe,EAAS0B,EAAMN,EAAOlN,EAAY0N,IAC/F,OACEvR,eAACuP,EAAU,CAAAxP,SAAA,CACTV,cAAC6S,IAAc,CAAAnS,SACbC,eAAC4D,IAAK,CAACuO,GAAI,CAAEC,SAAU,MAAQ,kBAAgB,aAAYrS,SAAA,CACzDV,cAAC8Q,EAAiB,CAChBvB,MAAOA,EACPe,QAASA,EACTS,cA9GgBiC,CAAC3B,EAAkCD,KAC3D6B,QAAQC,IAAI,SAAU9B,GAEtBQ,EADctB,IAAYc,GAAsB,QAAV7B,EACrB,OAAS,OAC1BsC,EAAWT,EAAS,EA2GZ3P,QAASA,EACTgD,SAAUA,IAEZzE,cAACmT,IAAS,CAAAzS,SACP2R,WA2CN7N,EACCxE,cAACoT,IAAe,CACdC,mBAAoB,CAAC,IACrBtO,UAAU,MACVuO,MAAO5B,GAAUvP,GAAcA,EAAWxC,QAAW,EACrDuS,YAAaA,EACbF,KAAMA,EACNuB,aAvIiBC,CAACnC,EAAgBoC,KACxCxB,EAAQwB,GACJjP,GAAcrD,EAAMuS,cACtBvS,EAAMuS,aAAaD,EACrB,EAoIME,oBAjIyBtC,IAC/Bc,EAAeyB,SAASvC,EAAMjG,OAAOyI,MAAO,KAC5C5B,EAAQ,EAAE,IAiIJ,OAGV,C,mCC7TA,8NAwBO,SAAS6B,IACd,MAAM,QAAErX,EAAO,QAAED,GAAYE,cACvBqX,EAAaC,aAAgB1T,GAAUA,EAAM2T,MAAMF,cAEnD,gBAAEG,GAAoBhS,eACtB,eAAEiS,GAAmBC,eACrB,cAAEC,GAAkBC,YAAW7X,EAASsX,EAAWtU,MAAQjB,IAAOuV,EAAWtU,OAAO5D,QAAQW,GAAW,MACtG+X,EAAeC,GAAoBrY,oBAAS,IAC5CsY,EAAqBC,GAA0BvY,oBAAS,IACzD,WAAEU,GAAeC,cAEvBU,qBAAU,KACJuW,EAAWtU,QACbiV,GAAuB,GACvBP,EACE1X,EACAkY,IAAanY,GAA6BgC,OAAOsE,IAAciR,EAAWtU,QAAQ5D,QAClFqY,EAAgB9Q,iBAEfwR,MAAMC,IACDA,GAAOA,EAAIC,KAAO,EACpBN,GAAiB,GAEjBA,GAAiB,EACnB,IAEDO,OAAM,KACLP,GAAiB,EAAM,IAExBQ,SAAQ,KACPN,GAAuB,EAAM,IAEnC,GAGC,CAACjY,EAASsX,EAAYvX,EAAS0X,EAAgB9Q,gBAAiB+Q,IAcnE,MAAO,CAAEI,gBAAeU,UAbN7X,uBAAYC,UAC5B,IACEmX,GAAiB,GAGjB,aAFmBH,EAAcH,EAAgB9Q,gBAGnD,CAAE,MAAO8R,GAGP,MAFAV,GAAiB,GACjB3X,EAAWiD,IAAWU,OAAO,GAADmD,OAAKuR,EAAMzU,SACjCyU,CACR,IACC,CAACb,EAAeH,EAAgB9Q,gBAAiBvG,IAEjB4X,sBACrC,CAGO,SAAS/O,IACd,MAAMyP,EAAWC,eACX,aAAEC,EAAY,WAAEtB,EAAU,YAAEuB,GAAgBtB,aAAgB1T,GAAUA,EAAM2T,SAC5E,kBAAEsB,GAAsBC,IACxBC,EAAgBrY,uBACpB,WAA2D,IAA1DsY,EAA+CC,UAAAhW,OAAA,QAAAwP,IAAAwG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDR,EAASS,YAAiB,CAAE7B,WAAY2B,KACxC,MAAMG,EAASN,EAAkBO,WAC9BtT,GAASA,EAAK/C,QAAUiW,EAAKjW,OAAS+C,EAAKuT,YAAcL,EAAKK,YAE7DF,GAAU,GACZV,EAASa,YAAwB,CAAEtR,MAAOmR,IAE9C,GACA,CAACV,EAAUI,IAEP9P,EAAerI,uBAClBsH,IACCyQ,EAASc,YAAgB,CAAEvR,UAAS,GAEtC,CAACyQ,IAEGe,EAAiB9Y,uBACpBsH,IACCyQ,EAASa,YAAwB,CAAEtR,UAAS,GAE9C,CAACyQ,IAEGgB,EAAkB/Y,uBACrBgZ,IACCjB,EAASkB,YAAmB,CAAED,WAAU,GAE1C,CAACjB,IAEGmB,EAAclZ,uBAAY,KAC9BqY,IACAU,EAAgB,IAChBD,GAAgB,EAAE,GACjB,CAACA,EAAgBT,EAAeU,IAG7BI,EAAcnU,mBAAQ,IACZ,OAAV2R,QAAU,IAAVA,KAAYtU,MACP,IACFsU,EACHqC,OAAQf,EACRC,eAIG,CAAE7V,MAAO,KAAM2W,OAAQ,GAAIL,UAAW,KAAMT,aAAc,EAAGf,eAAe,IAClF,CAACc,EAAcC,EAAavB,IAEzByC,EAA0BpZ,uBAC9BzB,IAA0B,IAAzB,MAAE8a,EAAK,SAAEC,GAAU/a,EAClBwZ,EACEwB,YAAoB,CAClBC,SAAU,CACRC,KAAMJ,EACNC,cAGL,GAEH,CAACvB,IAGH,MAAO,CACLM,gBACAU,kBACAG,cACA7Q,eACAsO,WAAYwC,EACZL,iBACAM,0BAEJ,CAEO,SAAShB,IACd,MAAML,EAAWC,eACX,eAAE0B,GAAmB9C,aAAgB1T,GAAUA,EAAM2T,QACrD8C,EAAkB3U,mBAAQ,IAAM,IAAI4U,IAAIF,IAAiB,CAACA,IAE1DG,EAAmB7Z,uBACtBsY,IACC,MAAMwB,EAAWH,EAAgBI,IAAIzB,EAAKjW,QAAU,GACpDsX,EAAgBK,IAAI1B,EAAKjW,MAAO,IAAIyX,EAAU,IAAKxB,EAAMhW,KAAM2X,IAAWC,OAE1EnC,EAASoC,YAAsB,CAAEC,QAAST,IAAmB,GAE/D,CAAC5B,EAAU4B,IAGPU,EAAsBra,uBAC1B,CAACqC,EAAesW,KACd,MACM2B,EADW,IAAKX,EAAgBI,IAAI1X,IAAU,IACzBkY,QAAQnV,GAASA,EAAKuT,YAAcA,IAC/DgB,EAAgBK,IAAI3X,EAAOiY,GAE3BvC,EAASoC,YAAsB,CAAEC,QAAST,IAAmB,GAE/D,CAAC5B,EAAU4B,IAGPa,EAAwBxa,uBAAY,KACxC+X,EAASoC,YAAsB,CAAEC,QAAS,IAAIR,MAAS,GACtD,CAAC7B,IAGE0C,EAAsBza,uBACzBsY,IACC,MAAMwB,EAAW,IAAKH,EAAgBI,IAAIzB,EAAKjW,QAAU,IACnDoW,EAASqB,EAASpB,WAAWtT,GAASA,EAAKuT,YAAcL,EAAKK,YACpEmB,EAASY,OAAOjC,EAAQ,EAAG,IAAKH,EAAMhW,KAAM2X,IAAWC,MACvDP,EAAgBK,IAAI1B,EAAKjW,MAAOyX,GAEhC/B,EAASoC,YAAsB,CAAEC,QAAST,IAAmB,GAE/D,CAACA,EAAiB5B,IAGd4C,EAAgC3a,uBACnCsY,IACC,MAAMwB,EAAW,IAAKH,EAAgBI,IAAIzB,EAAKjW,QAAU,IACnDoW,EAASqB,EAASpB,WAAWtT,GAASA,EAAKwV,iBAAmBtC,EAAKsC,iBACzEd,EAASY,OAAOjC,EAAQ,EAAG,IAAKH,EAAMhW,KAAM2X,IAAWC,MACvDP,EAAgBK,IAAI1B,EAAKjW,MAAOyX,GAEhC/B,EAASoC,YAAsB,CAAEC,QAAST,IAAmB,GAE/D,CAACA,EAAiB5B,IAGd8C,EAAgC7a,uBACpC,CAACqC,EAAesW,KACd,MACM2B,EADW,IAAKX,EAAgBI,IAAI1X,IAAU,IACzBkY,QAAQnV,GAASA,EAAKwV,iBAAmBjC,IACpEgB,EAAgBK,IAAI3X,EAAOiY,GAE3BvC,EAASoC,YAAsB,CAAEC,QAAST,IAAmB,GAE/D,CAAC5B,EAAU4B,IAIPmB,EAAoB9V,mBAAQ,KAChC,MAAM+V,EAAO,IAAInB,IAOjB,OANAF,EAAe3K,SAAQ,CAAC3J,EAAMkC,KAC5ByT,EAAKf,IACH1S,EACAlC,EAAKD,KAAK6V,GAAMA,EAAErC,YACnB,IAEIoC,CAAI,GACV,CAACrB,IAEEvB,EAAoBnT,mBAAQ,IACzBiW,MAAMC,KAAKxB,EAAexU,UAAUiW,QAC1C,CAACzB,IAEE0B,EAAcpW,mBAAQ,KAC1B,MAAMqW,EAAO,CAAC,EAMd,OALAlD,EAAkBpJ,SAAS3J,IACrBA,EAAKuT,YAAc2C,IAAUC,QAAUnW,EAAKuT,YAAc2C,IAAUE,WACtEH,EAAKjW,EAAK/C,OAAS+C,EAAK4T,OAC1B,IAEKqC,CAAI,GACV,CAAClD,IAEEsD,EAAczW,mBAAQ,KAC1B,IAAI0W,EAAU,EAMd,OALAvD,EAAkBpJ,SAAS3J,IACrBA,EAAKuT,YAAc2C,IAAUK,QAC/BD,EAAUtW,EAAK4T,OACjB,IAEK0C,CAAO,GACb,CAACvD,IAEEyD,EAAmB5W,mBAAQ,KAC/B,IAAI0W,EAAU,EAMd,OALAvD,EAAkBpJ,SAAS3J,IACrBA,EAAKuT,YAAc2C,IAAUO,aAC/BH,GAAWtW,EAAK4T,OAClB,IAEK0C,CAAO,GACb,CAACvD,IAEE2D,EAAkB9W,mBAAQ,KAC9B,IAAI0W,EAAU,EAMd,OALAvD,EAAkBpJ,SAAS3J,IACrBA,EAAKuT,YAAc2C,IAAUC,SAC/BG,GAAWtW,EAAK4T,OAClB,IAEK0C,CAAO,GACb,CAACvD,IAEE4D,EAAe/W,mBAAQ,KAC3B,MAAM0W,EAAU,IAAI9B,IAOpB,OANAF,EAAe3K,SAASiN,IACtB,MAAM5W,EAAO4W,EAAMzB,QAAQS,GAAMA,EAAErC,YAAc2C,IAAUC,SAAQ,GAC/DnW,GACFsW,EAAQ1B,IAAI5U,EAAK/C,MAAO+C,EAAK4T,OAC/B,IAEK0C,CAAO,GACb,CAAChC,IACJ,MAAO,CACLG,mBACAW,wBACAH,sBACAI,sBACAI,gCACAF,gCACAG,oBACApB,iBACAvB,oBACAiD,cACAK,cACAM,eACAD,kBACAF,mBAEJ,CAEO,SAASK,IACd,MAAM,SAAEzC,EAAQ,UAAE0C,EAAS,WAAEvF,GAAeC,aAAgB1T,GAAUA,EAAM2T,QAEtEkB,EAAWC,cAcjB,MAAO,CACLwB,WACAJ,wBAf8BpZ,uBAC9Bmc,IAA0B,IAAzB,MAAE9C,EAAK,SAAEC,GAAU6C,EAClBpE,EACEwB,YAAoB,CAClBC,SAAU,CACRC,KAAMJ,EACNC,cAGL,GAEH,CAACvB,IAKDmE,YACAvF,aAEJ,C,mCCxUA,wHAOO,SAASK,IACd,MAAM,OAAE7X,GAAWG,eACb,OAACX,GAAUC,cAwBjB,MAAO,CAAEmY,eAtBa/W,uBACpBC,MAAOZ,EAAiB+c,EAAiBpO,KACvC,GAAI7O,EACF,IAIE,MAAMkd,EAAW1b,YAAYhC,EAAQ2d,EAAOF,GAC5C,GAAIC,EAAU,CAEZ,aADwBA,EAASE,UAAUld,EAAS2O,EAEtD,CACF,CAAE,MAAO8J,GAEP,OADAjC,QAAQiC,MAAM,2BAA4BA,GACnC,IACT,CAEF,OAAO,IAAI,GAEb,CAAC3Y,EAAQR,IAIb,CAKO,SAASuY,EAAWsF,EAAOJ,GAChC,MAAM,OAAEjd,EAAM,QAAEsd,EAAO,QAAErd,GAAYE,cAkBrC,MAAO,CAAE2X,cAhBajX,uBACpBC,UACE,GAAId,GAAUC,EAAS,CACrB,MAAMT,EAAS+d,YAAUD,EAASD,GAE5BH,EAAW1b,YAAYhC,EAAQ2d,EAAOF,GAA8B,kBAAZA,EAAuBA,EAAQhd,GAAWgd,GAExG,GAAIC,EACF,OAAOA,EAASM,QAAQ3O,EAAQlD,SAAOqB,UAAUyQ,WAErD,CACA,OAAO,IAAI,GAEb,CAACzd,EAAQC,EAASqd,EAASD,EAAOJ,IAItC,C,mCC3DA,sDAkBO,MAAMS,EAAU/e,aAAQiG,GAC7BnB,cAACyO,IAAI,IAAKtN,EAAO+Y,kBAAmB,CAAExZ,SAAUV,cAAA,QAAMqO,UAAU,8BAD3CnT,CAEpB,CACDkT,OAAQ,iBACR,uBAAwB,CACtBlJ,QAAS,OACTiV,eAAgB,SAChB7U,OAAQ,EACR8U,gBAAiB,eAEnB,2BAA4B,CAC1BC,SAAU,GACVhV,MAAO,OACPiV,aAAc,EACdC,WAAY,wDAIHC,EAAStf,aAAQiG,GAA0BnB,cAACya,IAAG,CAACC,eAAa,KAAKvZ,KAAzDjG,EAAoES,IAAA,IAAC,MAAEgf,GAAOhf,EAAA,MAAM,CACxGif,cAAe,OACf7H,SAAU,EACV,CAAC4H,EAAME,YAAYC,GAAG,OAAQ,CAC5B/H,SAAU,GAEZ1L,WAAY,eACZ0T,WAAY,IACZ5V,YAAawV,EAAM7Z,QAAQ,GAC3BqG,MAAO,qBACPC,SAAU,OACV,UAAW,CACTD,MAAO,UACP6T,QAAS,GAEX,iBAAkB,CAChB7T,MAAO,UACP4T,WAAYJ,EAAMM,WAAWC,kBAE/B,qBAAsB,CACpBd,gBAAiB,WAEpB,IAyBce,iBAvBf,SAAwBha,GACtB,MAAM,IAAE0N,EAAG,UAAEH,EAAS,SAAEE,EAAQ,iBAAEwM,EAAgB,QAAEC,GAAYla,GACzD0S,EAAOyH,GAAYxM,WAAe1Q,OAAOgd,IAAqB,GAUrE,OACEza,eAAAiE,WAAA,CAAAlE,SAAA,CACEV,cAACia,EAAO,CAAC9V,MAAOuK,EAAWmF,MAAOA,EAAO0H,SAVxBC,CAACnK,EAA6BoK,KACjDH,EAASG,QAEgBtM,IAArBiM,GACFC,EAAQnd,KAAK,oBAADyF,OAAqB8X,GACnC,EAKkE/a,SAC7DmO,EAAItM,KAAKmZ,GACR1b,cAACwa,EAAM,CAACrW,MAAOyK,EAAyB/M,MAAO6Z,EAAG7Z,OAApB6Z,EAAG7Z,WAGpCgN,EAAItM,KAAI,CAACC,EAAMkC,IAAUA,IAAUmP,GAAS7T,cAAC8O,WAAc,CAAApO,SAAmB8B,EAAKuC,WAAlBvC,EAAKX,WAG7E,G,mCClFA,8CAKexE,eAAeC,EAAQ3B,GAGR,IAHS,UAAEW,EAAS,YAAEiB,EAAW,QAAEf,GAGrCb,EACxBsX,QAAQC,IAAI,cAAeyB,IAAanY,GAASgC,OAAOsE,IAAcvF,IAAc1B,SACtF,IACE,MAAM8f,QAAiBrf,EAAUsf,oBAC3BD,EAASE,QAAQ,CACnBC,OAAQ,oBACR7d,OAAQ,CACNyB,KAAM,QACNqc,QAAS,CACPlgB,QAAS8Y,IAAanY,GAASgC,OAAOsE,IAAcvF,IAAc1B,QAClEkB,OAAQQ,EACRmB,SAAUiW,IAAanY,GAASgC,OAAOsE,IAAcvF,IAAcmB,YAI7E,CAAE,MAAOwW,GACP,CAEJ,C","file":"static/js/16.0ed54878.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { Button, Stack } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport uuid from 'uuid/dist/v4'\nimport { Button as ButtonStyled } from 'components/uikit/components/Button'\nimport { useWeb3React } from 'web3-react-core'\nimport tokens from 'config/constants/tokens'\nimport { toLargeUnits } from 'utils/transformHelper'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport addAsset from '../../../utils/addAsset'\nimport { getContract } from '../../../utils/web3React'\nimport useToast from '../../../hooks/useToast'\nimport useSystemParams from '../../../hooks/useSystemParams'\nimport useHashPowerToken from '../../../hooks/useHashPowerToken'\nimport contracts from '../../../config/constants/contracts'\n\nconst ActionButton = styled(Button)`\n  text-transform: none;\n  cursor: pointer;\n  font-family: PingFangSC-Regular, sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  color: #2aa1ff;\n  padding: 0;\n`\nexport const AlertButton = styled(ButtonStyled)`\n  box-shadow: 0px 2px 0px rgba(0, 0, 0, 0.043);\n  border-radius: 14px;\n  background: linear-gradient(270deg, #7ae9f1 0%, #61c3f7 100%);\n  border-radius: 14px;\n  font-size: 14px;\n  height: 32px;\n  line-height: 32px;\n  color: #000;\n  font-weight: normal;\n`\n\nconst { claimHelper } = contracts\nfunction Action({ row, address, rewardsData }) {\n  const { signer } = useSystemParams()\n  const [claimStatus, setClaimStatus] = useState(false)\n  const { setRefresh } = useHashPowerToken()\n  const { connector, active, chainId, account } = useWeb3React()\n  const { toastInfo, toastSuccess, toastError } = useToast()\n  const { symbol } = row\n  const { walletTokenBalance } = useHashPowerToken()\n  const [isAdding, setIsAdding] = useState(false)\n\n  const addToMetaMask = useCallback(async () => {\n    if (active && connector && symbol) {\n      setIsAdding(true)\n      await addAsset({ connector, tokenSymbol: symbol, chainId })\n      setIsAdding(false)\n    }\n  }, [connector, active, chainId, symbol])\n\n  useEffect(() => {\n    if (!rewardsData) {\n      return\n    }\n    if (\n      rewardsData.walletRewards.epochReward.isZero() &&\n      rewardsData.avatarRewards.epochReward.isZero()\n    ) {\n      setClaimStatus(true)\n    }\n  }, [rewardsData, row, walletTokenBalance])\n  const claimAll = useCallback(async () => {\n    if (signer) {\n      const claimContract = getContract(signer, claimHelper.abi, claimHelper.address[chainId])\n      if (claimContract) {\n        try {\n          const params = []\n          params.push([row.address[chainId], account])\n\n          if (row.avatar && Number(row.avatar) > 0) {\n            params.push([row.address[chainId], row.avatar])\n          }\n          setClaimStatus(true)\n          // }\n          const txInfo = await claimContract.multipleClaim(params)\n          const avatarRewards = toLargeUnits(rewardsData.avatarRewards[0], tokens.WBTC.decimals)\n          const walletRewards = toLargeUnits(rewardsData.walletRewards[0], tokens.WBTC.decimals)\n          if (txInfo) {\n            let claimRewardsList = window.localStorage.getItem('claimRewardsList')\n            if (claimRewardsList) {\n              claimRewardsList = JSON.parse(claimRewardsList)\n              const _data = [\n                // @ts-ignore\n                ...claimRewardsList,\n                {\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'My Wallet',\n                },\n              ]\n              if (params.length > 1) {\n                _data.push({\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'Collateral',\n                })\n              }\n              window.localStorage.setItem('claimRewardsList', JSON.stringify(_data))\n            } else {\n              const _data = [\n                {\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'My Wallet',\n                },\n              ]\n              if (params.length > 1) {\n                _data.push({\n                  id: uuid(),\n                  txHash: txInfo.hash,\n                  date: new Date().getTime(),\n                  tokenSymbol: row.token,\n                  walletRewards,\n                  avatarRewards,\n                  type: 'Total Collateral',\n                })\n              }\n              window.localStorage.setItem('claimRewardsList', JSON.stringify(_data))\n            }\n\n            toastInfo(ToastTitle.submited, <TransactionSubmittedInfo txHash={txInfo.hash} content='Waiting for confirmation'/>)\n            const result = await txInfo.wait()\n            toastSuccess(ToastTitle.success, <TransactionSubmittedInfo txHash={txInfo.hash} content='Transaction has been confirmed'/>)\n            setRefresh((state) => !state)\n\n            if (result) {\n              setClaimStatus(false)\n            }\n          }\n        } catch (e: any) {\n          setClaimStatus(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    }\n  }, [account, chainId, rewardsData, row, setRefresh, signer, toastError, toastInfo, toastSuccess])\n\n  return (\n    <div>\n      <Stack direction=\"row\" spacing={2}>\n        <ActionButton disabled={claimStatus} onClick={claimAll}>\n          Claim Rewards\n        </ActionButton>\n        {/* <ActionButton\n          onClick={() => {\n            window.open(\n              `https://app.uniswap.org/#/swap?inputCurrency=${tokens.WBTC.address[chainId]}&outputCurrency=${row.address[chainId]}&chain=${SupportedChainId[chainId]}`,\n            )\n          }}\n        >\n          Uniswap Trade\n        </ActionButton> */}\n        <ActionButton disabled={isAdding} onClick={addToMetaMask}>\n          Add to Metamask\n        </ActionButton>\n      </Stack>\n    </div>\n  )\n}\n\nexport default Action\n","import React from 'react';\nimport {styled} from \"@mui/material/styles\";\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  h3 {\n    font-family: 'Heebo Medium';\n    font-weight: 500;\n    font-size: 22px;\n    line-height: 32px;\n    color: #000000;\n    margin-bottom: 20px;\n  }\n  a {\n    display: flex;\n    align-items: center;\n    svg{\n      width: 13px;\n      height: 13px;\n      margin-right: 10px;\n    }\n    \n    font-family: 'PingFang SC';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.02em;\n    color: #2AA1FF;\n  }\n\n`\n\nfunction TitleWrap(props) {\n  const {children} = props;\n  return (\n    <Title {...props}>{children}</Title>\n  );\n}\n\nexport default TitleWrap;\n","import React from 'react';\nimport {Svg} from \"components/uikit\";\n\nfunction HistoryIcon(props) {\n  return (\n    <Svg viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n        <path d=\"M13.327 4.31099C14.812 7.49536 13.4342 11.2808 10.2496 12.7657C9.08552 13.3087 7.78443 13.4867 6.51733 13.2763C5.25023 13.066 4.07644 12.4771 3.15028 11.5872C3.03172 11.4696 2.96415 11.31 2.96216 11.143C2.96016 10.976 3.02389 10.815 3.1396 10.6945C3.25531 10.5741 3.41372 10.504 3.58067 10.4993C3.74761 10.4946 3.9097 10.5558 4.03197 10.6695C4.77291 11.3815 5.71197 11.8526 6.72567 12.0209C7.73938 12.1892 8.78028 12.0467 9.71151 11.6123C12.2592 10.4245 13.3614 7.3964 12.1736 4.84872C10.9855 2.30104 7.95738 1.19917 5.40938 2.38695C4.23441 2.93388 3.31272 3.90895 2.83274 5.11281L3.69501 5.18536C3.7507 5.18996 3.80419 5.20915 3.85011 5.24099C3.89603 5.27283 3.93275 5.3162 3.95659 5.36674C3.98042 5.41728 3.99053 5.4732 3.98589 5.52889C3.98124 5.58457 3.96202 5.63805 3.93015 5.68395L2.23678 8.12122C2.17383 8.21198 2.08823 8.28469 1.98849 8.33213C1.88874 8.37958 1.77832 8.4001 1.66819 8.39168C1.56008 8.38327 1.45661 8.34416 1.36997 8.27894C1.28334 8.21372 1.21713 8.12511 1.17915 8.02354L0.176556 5.34604C0.157686 5.29578 0.151838 5.24157 0.159556 5.18844C0.167275 5.13532 0.18831 5.08501 0.220702 5.0422C0.253094 4.99939 0.295791 4.96547 0.344818 4.94361C0.393845 4.92174 0.447608 4.91263 0.501102 4.91713L1.51928 5.00272C1.79126 4.17894 2.229 3.41955 2.80554 2.77133C3.38208 2.1231 4.08522 1.59976 4.87165 1.23354C8.05665 -0.251735 11.8421 1.12599 13.327 4.31068V4.31099ZM7.24274 3.18145C7.40323 3.18148 7.55779 3.24215 7.67544 3.3513C7.79309 3.46046 7.86516 3.61004 7.87719 3.77008L7.8791 3.81781V6.94713L9.78597 8.03818C9.92495 8.11771 10.0288 8.24673 10.0769 8.39947C10.125 8.55222 10.1137 8.71747 10.0453 8.86227L10.0224 8.90681C9.94279 9.04574 9.81375 9.14956 9.66101 9.19756C9.50827 9.24556 9.34304 9.23423 9.19829 9.16581L9.15374 9.1429L7.08683 7.96054C6.95022 7.88242 6.83504 7.77173 6.75155 7.63833C6.66806 7.50494 6.61884 7.35297 6.60828 7.19595L6.60638 7.13199V3.81781C6.60638 3.64904 6.67342 3.48718 6.79276 3.36783C6.9121 3.24849 7.07397 3.18145 7.24274 3.18145V3.18145Z\" fill=\"#2AA1FF\"/>\n    </Svg>\n  );\n}\n\nexport default HistoryIcon;\n","import React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'components/Card'\nimport { useWeb3React } from 'web3-react-core'\nimport Table, { StyledTableCell } from 'components/Table'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport Action from './Action'\nimport Title from './Title'\nimport HistoryIcon from './icon/History'\nimport { RewardData } from '../type'\n\nconst columns = [\n  {\n    id: 'symbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'markPrice',\n    numeric: true,\n    disablePadding: true,\n    isSort: true,\n    label: 'Mark Price',\n  },\n  {\n    id: 'walletBalance',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'In Wallet',\n  },\n  {\n    id: 'avatarBalance',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'In Collateral',\n  },\n  {\n    id: 'claimableWallet',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimable - In Wallet',\n  },\n  {\n    id: 'claimableAvatar',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Claimable - In Collateral',\n  },\n  {\n    id: 'action',\n    numeric: false,\n    disablePadding: false,\n    isSort: false,\n    label: 'Action',\n  },\n]\n/*\n * will\n * add filter\n *\n *\n * */\nfunction HoldingsWallet({ rewardsData }: {\n  rewardsData: RewardData\n}) {\n  const { walletTokenBalance } = useHashPowerToken()\n  const { account } = useWeb3React()\n  const { positionAll, tokenPrice, allowedTokens } = usePositionInfo()\n\n  const dataSource = useMemo(() => {\n    const list = Object.values(positionAll)\n\n    return list.map((item) => {\n      let markPrice = 0\n      const { settlementCurrency } = item.mintTokenInfo\n      let _avatarAssetList = Object.keys(valueToKeyMap).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: 0,\n        }\n      }, {}) as Record<SupportedTokens, number>\n      if (item.isEnable && tokenPrice[item.positionAddress]) {\n        markPrice = toLargeUnits(\n          tokenPrice[item.positionAddress][item.mintTokenInfo.symbol]?.price,\n          settlementCurrency.decimals,\n          true\n        ) as number\n      }\n      if (item.isEnable && allowedTokens[item.positionAddress]) {\n        const { balances, tokens } = allowedTokens[item.positionAddress]\n        if (balances && tokens) {\n          _avatarAssetList = Object.keys(balances).reduce((acc, key) => {\n            return {\n              ...acc,\n              [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n            }\n          }, {\n            ..._avatarAssetList\n          })\n        }\n\n      }\n      const claimableWallet = toLargeUnits(rewardsData[item.mintTokenInfo.symbol].walletRewards.epochReward, settlementCurrency.decimals, true) as number;\n      const claimableAvatar = toLargeUnits(rewardsData[item.mintTokenInfo.symbol].avatarRewards.epochReward, settlementCurrency.decimals, true) as number;\n      return {\n        symbol: item.mintTokenInfo.symbol,\n        logo: item.mintTokenInfo.logo,\n        markPrice,\n        displayMarkPrice: `${markPrice} ${settlementCurrency.symbol}`,\n        walletBalance: Number(TokenUtils.formatFourDecimals(walletTokenBalance[item.mintTokenInfo.symbol])),\n        avatarBalance: Number(_avatarAssetList[item.mintTokenInfo.symbol]),\n        claimableWallet,\n        claimableAvatar,\n        displayClaimableWallet: `${claimableWallet} ${settlementCurrency.symbol}`,\n        displayClaimableAvatar: `${claimableAvatar} ${settlementCurrency.symbol}`,\n      }\n    })\n  }, [allowedTokens, positionAll, rewardsData, tokenPrice, walletTokenBalance])\n\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Title>\n        <h3>Holdings - Hashpower Token</h3>\n        <Link to=\"/history/claimed/0\">\n          <HistoryIcon /> Claimed History\n        </Link>\n      </Title>\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        isMyPage\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell style={{ paddingLeft: 0 }} component=\"th\" id={labelId} scope=\"row\">\n              <img\n                src={row.logo}\n                style={{ display: 'block', marginRight: 7, float: 'left', width: 20, height: 20 }}\n                alt=\"icon\"\n              />\n              {row.symbol}\n            </StyledTableCell>\n            <StyledTableCell>{row.displayMarkPrice}</StyledTableCell>\n            <StyledTableCell>{row.walletBalance}</StyledTableCell>\n            <StyledTableCell>\n              {row.avatarBalance}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayClaimableWallet}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayClaimableAvatar}\n            </StyledTableCell>\n            <StyledTableCell>\n              <Action row={row} address={account} rewardsData={rewardsData[row.symbol]} />\n            </StyledTableCell>\n          </>\n        )}\n      />\n    </Card>\n  )\n}\nexport default HoldingsWallet\n","import React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from 'components/Card'\n// import { BigNumber } from '@ethersproject/bignumber'\nimport Table, { StyledTableCell } from 'components/Table'\nimport { Stack } from '@mui/material'\nimport { useShortActiveAction } from 'state/Short/hooks'\nimport { TokenUtils, toLargeUnits } from 'utils/transformHelper'\nimport { usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\nimport { SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { computedPI, computedTC } from 'utils/computed'\nimport Title from './Title'\nimport HistoryIcon from './icon/History'\n\nconst columns = [\n  {\n    id: 'symbol',\n    numeric: false,\n    disablePadding: true,\n    isSort: true,\n    label: 'Ticker',\n  },\n  {\n    id: 'markPrice',\n    numeric: true,\n    disablePadding: true,\n    isSort: true,\n    label: 'Mark Price',\n  },\n  {\n    id: 'totalAssetsValue',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Collateral Value',\n  },\n  {\n    id: 'collateralRatio',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Collateral Ratio',\n  },\n  {\n    id: 'prepaidInterestCoverage',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Prepaid Interest Coverage',\n  },\n  {\n    id: 'outstandingDebt',\n    numeric: true,\n    disablePadding: false,\n    isSort: true,\n    label: 'Outstanding Debt Position',\n  },\n  // {\n  //   id: 'dailyObligation',\n  //   numeric: true,\n  //   disablePadding: false,\n  //   isSort: true,\n  //   label: 'Daily  Obligation',\n  // },\n  {\n    id: 'action',\n    numeric: false,\n    disablePadding: false,\n    isSort: false,\n    label: 'Action',\n  },\n]\n\nfunction OutstandingDebt() {\n  const { setActiveTab } = useShortActiveAction()\n\n  const { positionAll, tokenPrice, allowedTokens } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n\n\n\n  const dataSource = useMemo(() => {\n    const list = Object.values(positionAll)\n\n    return list.map((item) => {\n      let markPrice = 0\n      const { settlementCurrency } = item.mintTokenInfo\n      let _avatarAssetList = Object.keys(valueToKeyMap).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: 0,\n        }\n      }, {}) as Record<SupportedTokens, number>\n      if (item.isEnable && tokenPrice[item.positionAddress]) {\n        markPrice = toLargeUnits(\n          tokenPrice[item.positionAddress][item.mintTokenInfo.symbol]?.price,\n          settlementCurrency.decimals,\n          true\n        ) as number\n      }\n      if (item.isEnable && allowedTokens[item.positionAddress]) {\n        const { balances, tokens } = allowedTokens[item.positionAddress]\n        if (balances && tokens) {\n          _avatarAssetList = Object.keys(balances).reduce((acc, key) => {\n            return {\n              ...acc,\n              [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n            }\n          }, {\n            ..._avatarAssetList\n          })\n        }\n\n      }\n      const { prepaidInterestCoverage, collateralRatio } = item\n      const { interestGuaranteed, obligation, epochDebt, estimatedObligationToday } = item?.positionStatus\n      const prepaidInterest = computedPI({\n        interestGuaranteed: interestGuaranteed.toNumber(),\n        obligation: obligation.toNumber(),\n        epochDebt: epochDebt.toNumber(),\n        estimatedObligationToday: estimatedObligationToday.toNumber(),\n      })\n      const totalAssetsValue = toLargeUnits(\n        computedTC({\n          collateralValue: item.positionStatus.collateralValue.toNumber(),\n          prepaidInterest,\n        }),\n        item?.mintTokenInfo.settlementCurrency.decimals,\n      ) as number\n      return {\n        symbol: item.mintTokenInfo.symbol,\n        logo: item.mintTokenInfo.logo,\n        markPrice,\n        displayMarkPrice: `${markPrice} ${settlementCurrency.symbol}`,\n        avatarBalance: Number(_avatarAssetList[item.mintTokenInfo.symbol]),\n        prepaidInterestCoverage,\n        collateralRatio,\n        totalAssetsValue,\n        displayTotalAssetsValue: `${TokenUtils.formatFourDecimals(totalAssetsValue)} ${item?.mintTokenInfo.settlementCurrency.symbol}`,\n        displayCoverage:\n          prepaidInterestCoverage === Number.POSITIVE_INFINITY ? '+∞' : `${Math.floor(prepaidInterestCoverage)} days`,\n        displayRatio:\n          collateralRatio === Number.POSITIVE_INFINITY\n            ? '+∞'\n            : (collateralRatio && `${TokenUtils.formatTokenAmount(collateralRatio, 2)}%`) || `${collateralRatio}`,\n        outstandingDebt: toLargeUnits(item.balance, item.mintTokenInfo.decimals, true) as number,\n      }\n    })\n  }, [allowedTokens, positionAll, tokenPrice])\n\n\n  return (\n    <Card style={{ marginBottom: 20 }}>\n      <Title>\n        <h3>Outstanding Debt</h3>\n        <Link to=\"/history/obligation\">\n          <HistoryIcon />\n          Interest Paid History\n        </Link>\n      </Title>\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        pagination={false}\n        isMyPage\n        content={(row, index, labelId) => (\n          <>\n            <StyledTableCell style={{ paddingLeft: 0 }} component=\"th\" id={labelId} scope=\"row\">\n              <img\n                src={row.logo}\n                style={{ display: 'block', marginRight: 7, float: 'left', width: 20, height: 20 }}\n                alt=\"icon\"\n              />\n              {row.symbol}\n            </StyledTableCell>\n            <StyledTableCell>{row.displayMarkPrice}</StyledTableCell>\n            <StyledTableCell>\n              {row.displayTotalAssetsValue}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayRatio}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.displayCoverage}\n            </StyledTableCell>\n            <StyledTableCell>\n              {row.outstandingDebt}\n            </StyledTableCell>\n            {/* <StyledTableCell>{ Number(row.position) && row.positionInfoValues ? `≈ ${formatWBTC(row.positionInfoValues.totalObligation)}` : 0 } WBTC</StyledTableCell> */}\n            <StyledTableCell>\n              <Stack direction=\"row\" spacing={2}>\n                <Link\n                  style={{ color: '#2AA1FF', fontSize: '14px', fontFamily: 'PingFangSC-Regular,sans-serif' }}\n                  to=\"/collateral/manage\"\n                  onClick={() => {\n                    // changeCPT(row)\n                    handleChangeCurrentPosition(row.symbol)\n                  }}\n                >\n                  Manage Collateral\n                </Link>\n                <Link\n                  style={{ color: '#2AA1FF', fontSize: '14px', fontFamily: 'PingFangSC-Regular,sans-serif' }}\n                  to=\"/shortneutralize\"\n                  onClick={() => {\n                    setActiveTab(2)\n                    // changeCPT(row)\n                    handleChangeCurrentPosition(row.symbol)\n                  }}\n                >\n                  Neutralize\n                </Link>\n              </Stack>\n            </StyledTableCell>\n          </>\n        )}\n      />\n    </Card>\n  )\n}\n\nexport default OutstandingDebt\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Grid, Divider } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { BTitle, Title } from 'components/CommonComponent'\nimport { useWeb3React } from 'web3-react-core'\nimport Tabs from 'components/Tabs'\nimport Card from 'components/Card'\nimport { Button, useWalletModal } from 'components/uikit'\nimport contracts from 'config/constants/contracts'\nimport { formatNumberWithUnits } from 'utils/formatTheValue'\nimport { getContract, isSupportedChainId } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport MinerABI from 'config/abi/Miner.json'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport useAuth from 'hooks/useAuth'\nimport BlockUpdaterABI from 'config/abi/BlockUpdater.json'\nimport { SupportedChainId, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { blastSepoliaMintTokens, mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { BigNumber, ethers } from 'ethers'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport Multicall from 'utils/multicall'\nimport { TransactionSubmittedInfo } from 'components/TransactionInfo'\nimport { ToastTitle } from 'config/constants/contants'\nimport HoldingsWallet from './components/HoldingsWallet'\nimport OutstandingDebt from './components/OutstandingDebt'\nimport useSystemParams from '../../hooks/useSystemParams'\nimport useEpoch from '../../hooks/useEpoch'\nimport { RewardData } from './type'\n\nconst Wrapper = styled('div')`\n  width: 100%;\n  height: 100%;\n  overflow: scroll;\n`\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 26px;\n  padding-right: 44px;\n  min-width: 1024px;\n  padding-bottom: 100px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst CommonCard = styled(Card)`\n  padding: 30px;\n  height: 100%;\n\n  &.rightPanel {\n    h4 {\n      line-height: 20px;\n    }\n  }\n  h4 {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 480;\n    font-size: 16px;\n    line-height: 22px;\n    color: black;\n  }\n\n  p {\n    font-family: PingFangSC-Semibold, sans-serif;\n    font-size: 40px;\n    font-weight: 550;\n    line-height: 1;\n    color: #6ed6f3;\n    margin-top: 12px;\n    margin-bottom: 8px;\n    letter-spacing: 1px;\n    sub {\n      font-size: 16px;\n    }\n  }\n  span {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-size: 14px;\n  }\n`\nconst SubTitle = styled(Title)`\n  margin-bottom: 14px;\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 22px;\n  line-height: 31px;\n  color: #000000;\n`\n\nconst ClaimButton = styled(Button)`\n  background: linear-gradient(90deg, #61c2f7 0%, #7ae9f0 100%) !important;\n  border-radius: 20px !important;\n  box-shadow: none !important;\n  height: 30px !important;\n  line-height: 30px !important;\n  color: #000 !important;\n  font-size: 14px !important;\n  display: block !important;\n\n  &.disabled {\n    background: #ddd !important;\n    color: #eee !important;\n  }\n`\n\n// const TableCard = styled(Card)`\n//   margin-bottom: 20px;\n// `\n\nconst getEstimatedDailyReward = (lastEpochReward: BigNumber, balance: BigNumber) => {\n  return Math.floor(lastEpochReward.toNumber() * balance.toNumber() / 1e18)\n}\nconst { claimHelper, uniswapV2Multicall } = contracts\nconst minerInterface = new ethers.utils.Interface(MinerABI)\nconst blockUpdaterInterface = new ethers.utils.Interface(BlockUpdaterABI)\n\n\nfunction MyPage() {\n  const { prevEpoch } = useEpoch()\n  const [claimStatus, setClaimStatus] = useState(false)\n  const { hashPowerTokenList, walletTokenBalance, setRefresh } = useHashPowerToken()\n  const { signer } = useSystemParams()\n  const { chainId, account, active } = useWeb3React()\n  const { toastError, toastSuccess, toastInfo } = useToast()\n  const [walletTotal, setWalletTotal] = useState(0)\n  const [avatarTotal, setAvatarTotal] = useState(0)\n  const [dailyInterestRewards, setDailyInterestRewards] = useState(0)\n  const [dailyObligation, setDailyObligation] = useState(0)\n  const [rewardsData, setRewardsData] = useState<RewardData>(Object.values(blastSepoliaMintTokens).reduce((acc, curr) => {\n    return {\n      ...acc,\n      [curr.symbol]: {\n        walletRewards: {\n          epochReward: ethers.constants.Zero,\n        },\n        avatarRewards: {\n          epochReward: ethers.constants.Zero,\n        },\n        walletEstimateDailyReward: 0,\n        avatarEstimateDailyReward: 0,\n      },\n    }\n  }, {}) as RewardData)\n  const [allRewards, setAllRewards] = useState([])\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, account)\n\n  const isLogin = useMemo(() => {\n    return active && chainId && isSupportedChainId(chainId)\n  }, [active, chainId])\n  const { positionAll, tokenPrice, allowedTokens } = usePositionInfo()\n\n\n  const claimAll = useCallback(async () => {\n    if (!account) {\n      onPresentConnectModal()\n      return\n    }\n\n    if (signer) {\n      const claimContract = getContract(signer, claimHelper.abi, claimHelper.address[chainId])\n      if (claimContract) {\n        try {\n          const params = []\n          for (const item of hashPowerTokenList) {\n            params.push([item.address[chainId], account])\n            if (item.avatar && Number(item.avatar) > 0) {\n              params.push([item.address[chainId], item.avatar])\n            }\n          }\n          setClaimStatus(true)\n          const txInfo = await claimContract.multipleClaim(params)\n          if (txInfo) {\n            toastInfo(ToastTitle.submited, <TransactionSubmittedInfo txHash={txInfo.hash} content='Waiting for confirmation' />)\n            await txInfo.wait()\n            toastSuccess(ToastTitle.success, <TransactionSubmittedInfo txHash={txInfo.hash} content='Transaction has been confirmed' />)\n            setRefresh((state) => !state)\n            setClaimStatus(false)\n          }\n        } catch (e: any) {\n          setClaimStatus(false)\n          toastError(ToastTitle.failed, e?.reason)\n        }\n      }\n    }\n  }, [\n    account,\n    chainId,\n    hashPowerTokenList,\n    setRefresh,\n    signer,\n    toastError,\n    toastInfo,\n    toastSuccess,\n    onPresentConnectModal,\n  ])\n\n  const pendingReward = useCallback(async () => {\n    if (isLogin && walletTokenBalance) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      const multicall = new Multicall(chainId, uniswapV2Multicall.address, uniswapV2Multicall.abi)\n\n      for (const key in _tokens) {\n        if (Object.prototype.hasOwnProperty.call(_tokens, key)) {\n          const tokenInfo = _tokens[key as MintTokenKey]\n          const positionInfo = positionAll[key as MintTokenKey]\n          const walletBalance = walletTokenBalance[tokenInfo.symbol] || 0\n          let collateralBalance = 0\n\n          if (positionInfo.isEnable && allowedTokens[positionInfo.positionAddress]) {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            const { balances, tokens } = allowedTokens[positionInfo.positionAddress]\n            const tokenBalances = Object.keys(balances).reduce((acc, curr) => {\n              return {\n                ...acc,\n                [curr]: toLargeUnits(balances[curr], tokens[curr].decimals, true) as number,\n              }\n            }, {})\n            collateralBalance = tokenBalances[tokenInfo.symbol] || 0\n          }\n\n\n\n          const tokenRewards = {\n            walletRewards: {\n              epochReward: ethers.constants.Zero,\n            },\n            avatarRewards: {\n              epochReward: ethers.constants.Zero,\n            },\n            walletEstimateDailyReward: 0,\n            avatarEstimateDailyReward: 0,\n          }\n          let walletHasRweards = false\n          let positionHasRweards = false\n\n\n          const holderInfoMappingCalls = []\n          if (walletBalance) {\n            walletHasRweards = true\n            holderInfoMappingCalls.push({\n              target: tokenInfo.address,\n              callData: minerInterface.encodeFunctionData('holderInfoMapping', [account]),\n              functionSignature: 'holderInfoMapping',\n            })\n          }\n          if (positionInfo.isEnable && collateralBalance > 0) {\n            positionHasRweards = true\n            holderInfoMappingCalls.push({\n              target: tokenInfo.address,\n              callData: minerInterface.encodeFunctionData('holderInfoMapping', [positionInfo.positionAddress]),\n              functionSignature: 'holderInfoMapping',\n            })\n          }\n          multicall.addAbi(tokenInfo.address, MinerABI)\n          multicall.addAbi(tokenInfo.blockUpdater, BlockUpdaterABI)\n          if (holderInfoMappingCalls.length === 0) {\n            continue\n          }\n          const {\n            returnData: { holderInfoMapping },\n          } = await multicall.aggregate(holderInfoMappingCalls)\n          const pendingRewardCalls = [];\n          if (holderInfoMappingCalls.length === 1) {\n            if (walletHasRweards) {\n              const holderInfos = holderInfoMapping[0]\n              // holderInfoMapping\n              pendingRewardCalls.push({\n                target: tokenInfo.blockUpdater,\n                callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n                  toSmallUnits(String(walletBalance), tokenInfo.decimals),\n                  holderInfos[0],\n                  holderInfos[1],\n                  holderInfos[2],\n                ]),\n                functionSignature: 'pendingReward',\n              })\n            }\n            if (positionHasRweards) {\n              const holderInfos = holderInfoMapping[0]\n              // holderInfoMapping\n              pendingRewardCalls.push({\n                target: tokenInfo.blockUpdater,\n                callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n                  toSmallUnits(String(collateralBalance), tokenInfo.decimals),\n                  holderInfos[0],\n                  holderInfos[1],\n                  holderInfos[2],\n                ]),\n                functionSignature: 'pendingReward',\n              })\n            }\n          } else {\n            pendingRewardCalls.push(...holderInfoMapping.map((holder, index) => {\n              return {\n                target: tokenInfo.blockUpdater,\n                callData: blockUpdaterInterface.encodeFunctionData('pendingReward', [\n                  toSmallUnits(String(index === 0 ? walletBalance : collateralBalance), tokenInfo.decimals),\n                  holder[0],\n                  holder[1],\n                  holder[2],\n                ]),\n                functionSignature: 'pendingReward',\n              }\n            }))\n          }\n          const {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            returnData: { pendingReward },\n          } = await multicall.aggregate(pendingRewardCalls)\n\n          if (pendingRewardCalls.length === 1) {\n            const reward = pendingReward[0]\n            if (walletHasRweards) {\n              tokenRewards.walletRewards = {\n                epochReward: reward.epochReward,\n              }\n              tokenRewards.walletEstimateDailyReward = getEstimatedDailyReward(positionInfo.lastEpochReward, toSmallUnits(String(walletBalance), tokenInfo.decimals))\n            }\n            if (positionHasRweards) {\n              tokenRewards.avatarRewards = {\n                epochReward: reward.epochReward,\n              }\n              tokenRewards.avatarEstimateDailyReward = getEstimatedDailyReward(positionInfo.lastEpochReward, toSmallUnits(String(collateralBalance), tokenInfo.decimals))\n            }\n          } else {\n            pendingReward.forEach((reward, index) => {\n              if (index === 0) {\n                tokenRewards.walletRewards = {\n                  epochReward: reward.epochReward,\n                }\n                tokenRewards.walletEstimateDailyReward = getEstimatedDailyReward(positionInfo.lastEpochReward, toSmallUnits(String(walletBalance), tokenInfo.decimals))\n              }\n              if (index === 1) {\n                tokenRewards.avatarRewards = {\n                  epochReward: reward.epochReward,\n                }\n                tokenRewards.avatarEstimateDailyReward = getEstimatedDailyReward(positionInfo.lastEpochReward, toSmallUnits(String(collateralBalance), tokenInfo.decimals))\n              }\n            })\n          }\n          setRewardsData((state) => {\n            return {\n              ...state,\n              [key]: tokenRewards,\n            }\n          })\n        }\n      }\n    }\n  }, [account, allowedTokens, chainId, isLogin, positionAll, walletTokenBalance])\n\n  useEffect(() => {\n    pendingReward()\n  }, [pendingReward])\n\n  useEffect(() => {\n    let _walletTotal = 0\n    let _avatarTotal = 0\n    let _dailyInterestRewards = 0\n    let _dailyObligation = 0\n    const _rewardsAll = []\n\n    for (const item of Object.values(positionAll)) {\n      const { mintTokenInfo, positionAddress, isEnable } = item\n\n      const prices = tokenPrice[positionAddress];\n      if (!Object.prototype.hasOwnProperty.call(prices, mintTokenInfo.symbol)) {\n        continue;\n      }\n      let avatarAssetList = Object.keys(valueToKeyMap).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: 0,\n        }\n      }, {})\n\n      if (isEnable && allowedTokens[positionAddress]) {\n        const { balances, tokens } = allowedTokens[positionAddress]\n        avatarAssetList = Object.keys(balances).reduce((acc, key) => {\n          return {\n            ...acc,\n            [key]: balances[key].isZero() ? 0 : toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n          }\n        }, {})\n      }\n\n      const WBTCToUSD = (prices?.USDT && 1 / prices?.USDT?.price.toNumber()) * 10**8 || 0;\n      const currentWBTCPrice = Number(toLargeUnits(prices[mintTokenInfo.symbol].price, mintTokenInfo.settlementCurrency.decimals))\n      _walletTotal +=\n        walletTokenBalance[mintTokenInfo.symbol] * currentWBTCPrice * WBTCToUSD\n      _avatarTotal +=\n        avatarAssetList[mintTokenInfo.symbol] * currentWBTCPrice *\n        WBTCToUSD\n      if (rewardsData[mintTokenInfo.symbol]) {\n        const walletEstimateDailyReward = rewardsData[mintTokenInfo.symbol].walletEstimateDailyReward / 10 ** mintTokenInfo.settlementCurrency.decimals // TODO resolve overflow\n        const avatarEstimateDailyReward = rewardsData[mintTokenInfo.symbol].avatarEstimateDailyReward / 10 ** mintTokenInfo.settlementCurrency.decimals // TODO resolve overflow\n        _dailyInterestRewards += (walletEstimateDailyReward + avatarEstimateDailyReward) * WBTCToUSD\n        _dailyObligation += getEstimatedDailyReward(item.lastEpochReward, item.balance) / 10 ** mintTokenInfo.settlementCurrency.decimals * WBTCToUSD\n\n        const walletRewards = Number(\n          toLargeUnits(rewardsData[mintTokenInfo.symbol].walletRewards.epochReward, mintTokenInfo.settlementCurrency.decimals),\n        )\n        const avatarRewards = Number(\n          toLargeUnits(rewardsData[mintTokenInfo.symbol].avatarRewards.epochReward, mintTokenInfo.settlementCurrency.decimals),\n        )\n        const lpAllRewards = walletRewards + avatarRewards\n        const rewardsTransfromToUsdt = (walletRewards + avatarRewards) * WBTCToUSD\n        _rewardsAll.push({\n          rewards: lpAllRewards,\n          usdt: rewardsTransfromToUsdt,\n          lptoken: mintTokenInfo.symbol,\n        })\n      }\n      setWalletTotal(_walletTotal)\n      setAvatarTotal(_avatarTotal)\n      setDailyInterestRewards(_dailyInterestRewards)\n      setDailyObligation(_dailyObligation)\n      setAllRewards(_rewardsAll)\n    }\n  }, [allowedTokens, hashPowerTokenList, positionAll, rewardsData, tokenPrice, walletTokenBalance])\n\n  const totalRwardsWbtc = useMemo(() => {\n    const total = allRewards.reduce((acc, reward) => acc + reward.rewards, 0)\n    return total\n  }, [allRewards])\n  const totalRwardsUsdt = useMemo(() => {\n    const totalUSDT = allRewards.reduce((acc, reward) => acc + reward.usdt, 0)\n    return TokenUtils.formatCurrencyTwoDecimals(totalUSDT)\n  }, [allRewards])\n\n  const rewardPannel = useMemo(() => {\n    return (\n      <Grid container style={{ marginBottom: 18, lineHeight: '20px', fontSize: '14px' }}>\n        <Grid item xs={6}>\n          <span>{(totalRwardsWbtc && totalRwardsWbtc.toFixed(8)) || totalRwardsWbtc} WBTC</span>\n        </Grid>\n        <Grid item xs={6} dir=\"rtl\">\n          <span>${totalRwardsUsdt}≈</span>\n        </Grid>\n      </Grid>\n    )\n  }, [totalRwardsUsdt, totalRwardsWbtc])\n  return (\n    <Wrapper>\n      <BTitle>My Page</BTitle>\n      <Box>\n        <Grid container spacing={2}>\n          <Grid item xs={8}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <CommonCard>\n                  <SubTitle>Holdings - Synthetic Hashpower Token</SubTitle>\n                  <Grid container>\n                    <Grid item xs={6}>\n                      <h4>Hashpower Token in Wallet </h4>\n                      <p>\n                        <sub>≈</sub>${TokenUtils.formatNumberWithUnits(walletTotal)}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <h4>Hashpower Token in Collateral</h4>\n                      <p>\n                        <sub>≈</sub>${TokenUtils.formatNumberWithUnits(avatarTotal)}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </CommonCard>\n              </Grid>\n              <Grid item xs={12} style={{ paddingTop: 20 }}>\n                <CommonCard style={{ paddingBottom: 33 }}>\n                  <SubTitle>Claimable Rewards</SubTitle>\n                  <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                      {rewardPannel}\n                      <Divider style={{ marginBottom: 18 }} />\n                      <Grid container style={{ marginBottom: 20, lineHeight: '20px', fontSize: '14px' }}>\n                        <Grid item xs={6}>\n                          <span>Total</span>\n                        </Grid>\n                        <Grid item xs={6} dir=\"rtl\">\n                          <span>${totalRwardsUsdt}≈</span>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={6} style={{ paddingTop: 0, paddingLeft: 97 }}>\n                      <img\n                        src=\"/images/eth.png\"\n                        style={{ width: 108, height: 108, margin: '5px 0 0 35px', display: 'block' }}\n                        alt=\"illustration\"\n                      />\n                      <ClaimButton\n                        disabled={claimStatus}\n                        style={{ margin: '30px 0 0' }}\n                        className={`${claimStatus ? 'disabled' : ''}`}\n                        onClick={claimAll}\n                      >\n                        Claim All Rewards\n                      </ClaimButton>\n                    </Grid>\n                  </Grid>\n                </CommonCard>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <CommonCard className=\"rightPanel\">\n              <SubTitle>Epoch {prevEpoch.epoch} Balance</SubTitle>\n              <Grid container>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <h4>Rewards Earned</h4>\n                  <p>\n                    <sub>≈</sub>${formatNumberWithUnits(dailyInterestRewards)}\n                  </p>\n                </Grid>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <h4>Interest Paid</h4>\n                  <p>\n                    <sub>≈</sub>${formatNumberWithUnits(dailyObligation)}\n                  </p>\n                </Grid>\n                <Grid item xs={12} style={{ marginBottom: 30 }}>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={12} style={{ marginBottom: 36 }}>\n                  <h4>Net Rewards</h4>\n                  <p>\n                    <sub>≈</sub>\n                    {formatNumberWithUnits(dailyInterestRewards - dailyObligation).includes('-')\n                      ? formatNumberWithUnits(dailyInterestRewards - dailyObligation).replace('-', '-$')\n                      : `$${formatNumberWithUnits(dailyInterestRewards - dailyObligation)}`}\n                  </p>\n                </Grid>\n              </Grid>\n            </CommonCard>\n          </Grid>\n        </Grid>\n        <div style={{ width: '100%' }}>\n          <Tabs\n            tabsStyle={{\n              minHeight: 36,\n              paddingLeft: 21,\n            }}\n            tabStyle={{\n              paddingTop: 0,\n              paddingBottom: 0,\n              minHeight: 32,\n              lineHeight: '32px',\n            }}\n            tab={[\n              {\n                label: 'All',\n                component: (\n                  <>\n                    <HoldingsWallet rewardsData={rewardsData} />\n                    {/* <HoldingsAvatar rewardsData={rewardsData} />    / */}\n                    <OutstandingDebt />\n                  </>\n                ),\n              },\n              {\n                label: 'Holdings',\n                component: <HoldingsWallet rewardsData={rewardsData} />,\n              },\n              // {\n              //   label: 'Holdings - Avatar',\n              //   component: <HoldingsAvatar rewardsData={rewardsData} />\n              // },\n              {\n                label: 'Outstanding Debt',\n                component: <OutstandingDebt />,\n              },\n            ]}\n          />\n        </div>\n      </Box>\n    </Wrapper>\n  )\n}\n\nexport default React.memo(MyPage)\n","import { useContext } from 'react'\nimport {HashPowerTokenContext} from \"contexts\";\n\nconst useHashPowerToken = () => {\n  const hashPowerToken = useContext(HashPowerTokenContext)\n\n  if (hashPowerToken === undefined) {\n    throw new Error('hashPowerToken context undefined')\n  }\n\n  return hashPowerToken\n}\n\nexport default useHashPowerToken\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Svg = styled.svg`\n  font-size: 14px;\n  width: 10px;\n  height: 5px;\n  display: block;\n`\n\nfunction SortIcon({order}) {\n  return (\n    <span>\n        <Svg width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M0.284084 3.2146L4.81473 3.2146C5.03791 3.2146 5.17182 3.06953 5.06023 2.95794C4.89284 2.77939 2.89534 0.692616 2.79491 0.592183C2.67216 0.458272 2.40434 0.480591 2.29274 0.592183C2.21463 0.670297 0.161333 2.83519 0.0385814 2.95794C-0.0730109 3.08069 0.0720592 3.20344 0.284084 3.2146Z\"\n    fill={order === 'asc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n  <Svg  width=\"6\" height=\"4\" viewBox=\"0 0 6 4\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M4.81626 0.7854H0.285613C0.0624289 0.7854 -0.0714817 0.930471 0.0401105 1.04206C0.207499 1.22061 2.205 3.30738 2.30543 3.40782C2.42818 3.54173 2.69601 3.51941 2.8076 3.40782C2.88571 3.3297 4.93901 1.16481 5.06176 1.04206C5.17335 0.919311 5.02828 0.79656 4.81626 0.7854Z\"\n    fill={order === 'desc'? '#ccc' :' #7d7d7d'}/>\n  </Svg>\n\n    </span>\n  );\n}\n\nexport default SortIcon;\n","import React, { useCallback } from 'react'\nimport { styled } from '@mui/material/styles'\nimport {\n  Box,\n  Table,\n  TableRow,\n  TableSortLabel,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n} from '@mui/material'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport { uniq } from 'lodash'\nimport SortIcon from './icon/SortIcon'\n\nexport const StyledTableCell = styled(TableCell)(() => ({\n  [`&.${tableCellClasses.head}`]: {\n    border: 'none',\n    color: 'rgba(0, 0, 0, 0.5)',\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n    borderBottom: '1px solid #E2E8EE',\n  },\n}))\nexport const StyledTableRow = styled(TableRow)(() => ({\n  cursor: 'pointer',\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    fontSize: 14,\n    borderBottom: '1px solid rgba(226, 232, 238, 1)',\n  },\n}))\n\nconst BoxWrapper = styled(Box)`\n  height: 80%;\n  overflow: scroll;\n  &::-webkit-scrollbar,\n  .MuiTableContainer-root::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) {\n      return order\n    }\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, onRequestSort, columns, isMyPage = false } = props\n  const createSortHandler = (property) => (event: React.MouseEvent<unknown>) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell, index) => (\n          <StyledTableCell\n            style={{ paddingLeft: index === 0 && isMyPage && 0 }}\n            key={headCell.id}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {!headCell.isSort ? (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n                IconComponent={null}\n                style={{\n                  color: 'rgba(0,0,0,.5)',\n                  fontFamily: 'PingFangSC-Regular, sans-serif',\n                }}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" style={{ marginLeft: 4 }}>\n                    {/* {order === 'desc' ? 'sorted descending' : 'sorted ascending'} */}\n                    <SortIcon order={order} />\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            )}\n          </StyledTableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nexport default function EnhancedTable(props) {\n  const { dataSource, columns, content, pagination, rowClick, isMyPage, pages, selectKey } = props\n\n  const [order, setOrder] = React.useState<Order>('desc')\n  const [orderBy, setOrderBy] = React.useState(columns[0].id)\n  const [selected, setSelected] = React.useState<readonly string[]>([])\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property) => {\n    console.log('p :>> ', property);\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n  const handleClick = useCallback(\n    (event, row) => {\n      // const selectedIndex = selected.indexOf(name)\n      // let newSelected: readonly string[] = []\n\n      // if (selectedIndex === -1) {\n      //   newSelected = newSelected.concat(selected, name)\n      // } else if (selectedIndex === 0) {\n      //   newSelected = newSelected.concat(selected.slice(1))\n      // } else if (selectedIndex === selected.length - 1) {\n      //   newSelected = newSelected.concat(selected.slice(0, -1))\n      // } else if (selectedIndex > 0) {\n      //   newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1))\n      // }\n      // console.log('object :>> ', uniq(newSelected));\n      // setSelected(uniq(newSelected))\n\n      if (rowClick) {\n        rowClick(event, row)\n      }\n    },\n    [rowClick],\n  )\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n    if (pagination && props.onChangePage) {\n      props.onChangePage(newPage);\n    }\n  }\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const dataSourceDom = React.useCallback(() => {\n    if (dataSource && dataSource.length && pagination) {\n      if (pages) {\n        return stableSort(dataSource, getComparator(order, orderBy))\n          .map((row, index) => {\n            const labelId = `enhanced-table-checkbox-${index}`\n            return (\n              <StyledTableRow\n                hover\n                onClick={(event) => handleClick(event, row)}\n                role=\"checkbox\"\n                tabIndex={-1}\n                key={`row_${labelId}`}\n              >\n                {content(row, index, labelId)}\n              </StyledTableRow>\n            )\n          })\n      }\n      return stableSort(dataSource, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row, index) => {\n          const labelId = `enhanced-table-checkbox-${index}`\n          return (\n            <StyledTableRow\n              hover\n              onClick={(event) => handleClick(event, row)}\n              role=\"checkbox\"\n              tabIndex={-1}\n              key={`row_${labelId}`}\n            >\n              {content(row, index, labelId)}\n            </StyledTableRow>\n          )\n        })\n    }\n    if (dataSource && dataSource.length && !pagination) {\n      return stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n        const labelId = `enhanced-table-checkbox-${index}`\n        return (\n          <StyledTableRow\n            hover\n            onClick={(event) => handleClick(event, row)}\n            role=\"checkbox\"\n            tabIndex={-1}\n            key={`row_${labelId}`}\n          >\n            {content(row, index, labelId)}\n          </StyledTableRow>\n        )\n      })\n    }\n    return (\n      <StyledTableRow>\n        <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n          No data\n        </StyledTableCell>\n      </StyledTableRow>\n    )\n  }, [columns.length, content, dataSource, handleClick, order, orderBy, page, pages, pagination, rowsPerPage])\n  return (\n    <BoxWrapper>\n      <TableContainer>\n        <Table sx={{ minWidth: 1400 }} aria-labelledby=\"tableTitle\">\n          <EnhancedTableHead\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n            columns={columns}\n            isMyPage={isMyPage}\n          />\n          <TableBody>\n            {dataSourceDom()}\n            {/* {dataSource && dataSource.length && pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <StyledTableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.ticker)}\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.ticker}\n                    >\n                      {content(row, index, labelId)}\n                    </StyledTableRow>\n                  )\n                })\n            ) : dataSource && dataSource.length && !pagination ? (\n              stableSort(dataSource, getComparator(order, orderBy)).map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`\n                return (\n                  <StyledTableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.ticker)}\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.ticker}\n                  >\n                    {content(row, index, labelId)}\n                  </StyledTableRow>\n                )\n              })\n            ) : (\n              <StyledTableRow>\n                <StyledTableCell style={{ textAlign: 'center' }} colSpan={columns.length} rowSpan={3}>\n                  No data\n                </StyledTableCell>\n              </StyledTableRow>\n            )} */}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {pagination ? (\n        <TablePagination\n          rowsPerPageOptions={[10]}\n          component=\"div\"\n          count={pages || (dataSource && dataSource.length) || 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      ) : null}\n    </BoxWrapper>\n  )\n}\n","import { useAppDispatch, useAppSelector } from 'state'\nimport { useWeb3React } from 'web3-react-core'\nimport { useApprove, useCheckApprove } from 'hooks/useApprove'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport tokens from 'config/constants/tokens'\nimport useToast from 'hooks/useToast'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport { ContractTransaction } from 'ethers'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { chainConfigs, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { ToastTitle } from 'config/constants/contants'\nimport {\n  ActionType,\n  NeetralizePendingAction,\n  PendingAction,\n  TokenType,\n  updateActiveAmount,\n  updateActionInfo,\n  updateActiveActionIndex,\n  setShortPendingAction,\n  updateActiveTab,\n  updateShortRateInfo,\n} from './shortSlice'\n\nexport function useShortActiveTokenApprove() {\n  const { account, chainId } = useWeb3React()\n  const activeInfo = useAppSelector((state) => state.short.activeInfo)\n  // const { position } = useCurrentCpt()\n  const { currentPosition } = usePositionInfo()\n  const { onCheckApprove } = useCheckApprove()\n  const { handleApprove } = useApprove(account, activeInfo.token ? tokens[activeInfo.token].address[chainId] : '0')\n  const [approveStatus, setApproveStatus] = useState(false)\n  const [checkApproveLoading, setCheckApproveLoading] = useState(false)\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    if (activeInfo.token) {\n      setCheckApproveLoading(true)\n      onCheckApprove(\n        account,\n        chainConfigs[chainId as SupportedChainId].tokens[valueToKeyMap[activeInfo.token]].address,\n        currentPosition.positionAddress,\n      )\n        .then((res) => {\n          if (res && res._hex > 0) {\n            setApproveStatus(true)\n          } else {\n            setApproveStatus(false)\n          }\n        })\n        .catch(() => {\n          setApproveStatus(false)\n        })\n        .finally(() => {\n          setCheckApproveLoading(false)\n        })\n    }\n\n    // console.log('valueToKeyMap[activeInfo.token]', activeInfo.token, valueToKeyMap[activeInfo.token])\n  }, [account, activeInfo, chainId, currentPosition.positionAddress, onCheckApprove])\n  const onApprove = useCallback(async () => {\n    try {\n      setApproveStatus(true)\n      const info = await handleApprove(currentPosition.positionAddress)\n\n      return info as ContractTransaction\n    } catch (error: any) {\n      setApproveStatus(false)\n      toastError(ToastTitle.failed, `${error.reason}`)\n      throw error\n    }\n  }, [handleApprove, currentPosition.positionAddress, toastError])\n\n  return { approveStatus, onApprove, checkApproveLoading }\n}\n\n// short active action and info\nexport function useShortActiveAction() {\n  const dispatch = useAppDispatch()\n  const { activeAmount, activeInfo, activeIndex } = useAppSelector((state) => state.short)\n  const { pendingActionList } = useShortPendingAction()\n  const setActionInfo = useCallback(\n    (data: { token?: string; tokenType?: TokenType } = {}) => {\n      dispatch(updateActionInfo({ activeInfo: data }))\n      const _index = pendingActionList.findIndex(\n        (item) => item.token === data.token && item.tokenType === data.tokenType,\n      )\n      if (_index >= 0) {\n        dispatch(updateActiveActionIndex({ index: _index }))\n      }\n    },\n    [dispatch, pendingActionList],\n  )\n  const setActiveTab = useCallback(\n    (index: number) => {\n      dispatch(updateActiveTab({ index }))\n    },\n    [dispatch],\n  )\n  const setActionIndex = useCallback(\n    (index: number) => {\n      dispatch(updateActiveActionIndex({ index }))\n    },\n    [dispatch],\n  )\n  const setActiveAmount = useCallback(\n    (amount: any) => {\n      dispatch(updateActiveAmount({ amount }))\n    },\n    [dispatch],\n  )\n  const clearActive = useCallback(() => {\n    setActionInfo()\n    setActiveAmount('')\n    setActionIndex(-1)\n  }, [setActionIndex, setActionInfo, setActiveAmount])\n\n  // const { approveStatus, onApprove } = useShortActiveTokenApprove()\n  const _activeInfo = useMemo(() => {\n    if (activeInfo?.token) {\n      return {\n        ...activeInfo,\n        amount: activeAmount,\n        activeIndex,\n        // approveStatus,\n      }\n    }\n    return { token: null, amount: '', tokenType: null, activeIndex: -1, approveStatus: false }\n  }, [activeAmount, activeIndex, activeInfo])\n\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return {\n    setActionInfo,\n    setActiveAmount,\n    clearActive,\n    setActiveTab,\n    activeInfo: _activeInfo,\n    setActionIndex,\n    onChangeCollateralIndex,\n  }\n}\n\nexport function useShortPendingAction() {\n  const dispatch = useAppDispatch()\n  const { pendingActions } = useAppSelector((state) => state.short)\n  const _pendingActions = useMemo(() => new Map(pendingActions), [pendingActions])\n  // add action\n  const addPendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = _pendingActions.get(data.token) || []\n      _pendingActions.set(data.token, [..._actions, { ...data, type: ActionType.ADD }])\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // delete action\n  const deletePendingAction = useCallback(\n    (token: string, tokenType: TokenType) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.tokenType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n  // clear all action\n  const clearAllPendingAction = useCallback(() => {\n    dispatch(setShortPendingAction({ actions: new Map() }))\n  }, [dispatch])\n\n  // update action\n  const updatePendingAction = useCallback(\n    (data: Pick<PendingAction, 'amount' | 'price' | 'token' | 'tokenType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.tokenType === data.tokenType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const updateNeutralizePendingAction = useCallback(\n    (data: Pick<NeetralizePendingAction, 'amount' | 'price' | 'token' | 'tokenType' | 'neutralizeType'>) => {\n      const _actions = [...(_pendingActions.get(data.token) || [])]\n      const _index = _actions.findIndex((item) => item.neutralizeType === data.neutralizeType)\n      _actions.splice(_index, 1, { ...data, type: ActionType.ADD })\n      _pendingActions.set(data.token, _actions)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [_pendingActions, dispatch],\n  )\n\n  const deleteNeutralizePendingAction = useCallback(\n    (token: string, tokenType: any) => {\n      const _actions = [...(_pendingActions.get(token) || [])]\n      const _nextList = _actions.filter((item) => item.neutralizeType !== tokenType)\n      _pendingActions.set(token, _nextList)\n\n      dispatch(setShortPendingAction({ actions: _pendingActions }))\n    },\n    [dispatch, _pendingActions],\n  )\n\n  // get token type\n  const pendingTokenTypes = useMemo(() => {\n    const _map = new Map<string, TokenType[]>()\n    pendingActions.forEach((item, index) => {\n      _map.set(\n        index,\n        item.map((i) => i.tokenType),\n      )\n    })\n    return _map\n  }, [pendingActions])\n\n  const pendingActionList = useMemo(() => {\n    return Array.from(pendingActions.values()).flat()\n  }, [pendingActions])\n\n  const tokenAmount = useMemo(() => {\n    const _obg = {}\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY || item.tokenType === TokenType.WithDraw) {\n        _obg[item.token] = item.amount\n      }\n    })\n    return _obg\n  }, [pendingActionList])\n\n  const shortAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SHORT) {\n        _amount = item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const neutralizeAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.NEUTRALIZE) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAllAmount = useMemo(() => {\n    let _amount = 0\n    pendingActionList.forEach((item) => {\n      if (item.tokenType === TokenType.SUPPLY) {\n        _amount += item.amount\n      }\n    })\n    return _amount\n  }, [pendingActionList])\n\n  const supplyAmount = useMemo(() => {\n    const _amount = new Map<string, number>()\n    pendingActions.forEach((items) => {\n      const item = items.filter((i) => i.tokenType === TokenType.SUPPLY)[0]\n      if (item) {\n        _amount.set(item.token, item.amount)\n      }\n    })\n    return _amount\n  }, [pendingActions])\n  return {\n    addPendingAction,\n    clearAllPendingAction,\n    deletePendingAction,\n    updatePendingAction,\n    deleteNeutralizePendingAction,\n    updateNeutralizePendingAction,\n    pendingTokenTypes,\n    pendingActions,\n    pendingActionList,\n    tokenAmount,\n    shortAmount,\n    supplyAmount,\n    supplyAllAmount,\n    neutralizeAmount,\n  }\n}\n\nexport function useShortInfo() {\n  const { rateInfo, activeTab, activeInfo } = useAppSelector((state) => state.short)\n\n  const dispatch = useAppDispatch()\n  const onChangeCollateralIndex = useCallback(\n    ({ ratio, coverage }) => {\n      dispatch(\n        updateShortRateInfo({\n          rateInfo: {\n            rate: ratio,\n            coverage,\n          },\n        }),\n      )\n    },\n    [dispatch],\n  )\n  return {\n    rateInfo,\n    onChangeCollateralIndex,\n    activeTab,\n    activeInfo,\n  }\n}\n","import { useWeb3React } from 'web3-react-core'\nimport { useCallback } from 'react'\nimport { ethers } from 'ethers'\nimport { getContract, getSigner } from 'utils/web3React'\nimport ERC20 from 'config/abi/erc20.json'\nimport useSystemParams from './useSystemParams'\n\nexport function useCheckApprove() {\n  const { active } = useWeb3React()\n  const {signer} = useSystemParams()\n\n  const handleApprove = useCallback(\n    async (account: string, spender: string, target: string) => {\n      if (active) {\n        try {\n          // TODO rpc url should be from the chainId\n\n          // const { signer } = getProviderAndSigner(INFURA_NETWORK_URLS[SupportedChainId.BLAST_SEPPLIA], account, SupportedChainId.BLAST_SEPPLIA)\n          const contract = getContract(signer, ERC20, spender)\n          if (contract) {\n            const allowance = await contract.allowance(account, target)\n            return allowance\n          }\n        } catch (error) {\n          console.error('Failed to check approval', error)\n          return null\n        }\n      }\n      return null\n    },\n    [active, signer],\n  )\n\n  return { onCheckApprove: handleApprove }\n}\n\n\n\n\nexport function useApprove(owner, spender) {\n  const { active, library, chainId } = useWeb3React()\n\n  const handleApprove = useCallback(\n    async (target) => {\n      if (active && chainId) {\n        const signer = getSigner(library, owner)\n\n        const contract = getContract(signer, ERC20, spender && typeof spender === 'object' ? spender[chainId] : spender)\n\n        if (contract) {\n          return contract.approve(target, ethers.constants.MaxUint256)\n        }\n      }\n      return null\n    },\n    [active, chainId, library, owner, spender],\n  )\n\n  return { handleApprove }\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material/styles'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { withRouter } from 'react-router'\n\nexport interface StyledTabProps {\n  label: string\n  style?: any\n}\n\nexport interface StyledTabsProps {\n  children?: React.ReactNode\n  value: number\n  onChange: (event: React.SyntheticEvent, newValue: number) => void\n  style?: any\n}\n\nexport const AntTabs = styled((props: StyledTabsProps) => (\n  <Tabs {...props} TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }} />\n))({\n  margin: '40px auto 20px',\n  '& .MuiTabs-indicator': {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 4,\n    backgroundColor: 'transparent',\n  },\n  '& .MuiTabs-indicatorSpan': {\n    maxWidth: 20,\n    width: '100%',\n    borderRadius: 5,\n    background: 'linear-gradient(270deg, #7AE9F0 0%, #61C3F7 100%);',\n  },\n})\n\nexport const AntTab = styled((props: StyledTabProps) => <Tab disableRipple {...props} />)(({ theme }) => ({\n  textTransform: 'none',\n  minWidth: 0,\n  [theme.breakpoints.up('sm')]: {\n    minWidth: 0,\n  },\n  fontFamily: 'Heebo Medium',\n  fontWeight: 500,\n  marginRight: theme.spacing(1),\n  color: 'rgba(0, 0, 0, 0.5)',\n  fontSize: '22px',\n  '&:hover': {\n    color: '#000000',\n    opacity: 1,\n  },\n  '&.Mui-selected': {\n    color: '#000000',\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  '&.Mui-focusVisible': {\n    backgroundColor: '#d1eaff',\n  },\n}))\n\nfunction CustomizedTabs(props) {\n  const { tab, tabsStyle, tabStyle, defaultTabsValue, history } = props\n  const [value, setValue] = React.useState(Number(defaultTabsValue) || 0)\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n\n    if (defaultTabsValue !== undefined) {\n      history.push(`/history/claimed/${newValue}`)\n    }\n  }\n\n  return (\n    <>\n      <AntTabs style={tabsStyle} value={value} onChange={handleChange}>\n        {tab.map((it) => (\n          <AntTab style={tabStyle} key={it.label} label={it.label} />\n        ))}\n      </AntTabs>\n      {tab.map((item, index) => index === value && <React.Fragment key={item.label}>{item.component}</React.Fragment>)}\n    </>\n  )\n}\nexport default withRouter(CustomizedTabs)\n","import { chainConfigs, valueToKeyMap } from \"config/constants/tokenConfig\";\nimport {SupportedChainId} from \"../config/constants/chains\";\n\n\n\nexport default async function addAsset({ connector, tokenSymbol, chainId }: { connector: any\n  tokenSymbol: string,\n\n  chainId: SupportedChainId}){\n    console.log('object :>> ', chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address);\n  try {\n    const provider = await connector.getProvider()\n    await provider.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20', // Initially only supports ERC20, but eventually more!\n          options: {\n            address: chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].address, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: chainConfigs[chainId].tokens[valueToKeyMap[tokenSymbol]].decimals, // The number of decimals in the token\n          },\n        },\n      });\n  } catch (error) {\n    //\n  }\n}\n"],"sourceRoot":""}