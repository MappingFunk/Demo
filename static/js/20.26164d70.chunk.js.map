{"version":3,"sources":["assets/svg/fbtc20.svg","components/CollateralInfoBox/index.tsx","views/Liquidation/detail.tsx","components/Logo.tsx","components/DataWrapper/index.tsx","components/Methods/index.tsx"],"names":["TitleContent","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","LeftWrap","Card","_templateObject3","AssetListWrap","_templateObject4","MyCollateral","props","pageType","currentPosition","currentPositionTokenInfo","currentMintToken","collateralIndex","usePositionInfo","allowedAssets","useMemo","_currentPositionToken","currentAllowedTokens","allowedTokens","currentAllowedTokenBalance","balances","Object","values","tokens","map","tokenInfo","_jsxs","ListItem","children","_jsx","Logo","imgprops","style","marginRight","token","logo","symbol","className","TokenUtils","formatFourDecimals","toLargeUnits","decimals","markPrice","_currentPositionToken2","tokenPrice","mintTokenInfo","price","settlementCurrency","displayTotalAssetsValue","GuaranteeIcon","prepaidInterest","AvatarIcon","CopyToClipboard","toCopy","positionAddress","slice","List","_Fragment","Link","to","ArrowLine","marginBottom","src","Fbtc20Icon","alt","balance","display","flexWrap","alignItems","justifyContent","margin","estimatedDailyDebt","target","href","concat","address","rel","colType","Box","AddBtn","Button","Content","RightCard","_templateObject5","liquidation","contracts","withRouter","chainId","useWeb3React","setRefresh","useHashPowerToken","signer","helperContract","tokenPools","useSystemParams","toastSuccess","toastError","toastWarning","useToast","columns","setColumns","useState","addType","setAddType","isSubmitStatus","setIsSubmit","transferVal","setTransferVal","m1","m2","m3","m4","selectedValue","setSelectedValue","React","handleChange","event","value","handleChangeCurrentPosition","usePositionAction","onUpdateTotalCollateralValue","onUpdatePrepaidInterest","onUpdateNeutralizeValue","onUpdateCollateralValue","newCollateralRatio","newPrepaidInterestCoverage","newOutStandingDebt","newEstimatedDailyDebt","newDisplayCollateralRatio","newDisplayPrepaidInterestCoverage","useComputedIndexAction","avatarAssetList","keys","reduce","acc","key","valueToKeyMap","tokenList","list","it","icon","rightOptionList","item","filter","addMethods","useCallback","state","data","a","id","uuid","type","input","output","inputToken","outputToken","includes","g","console","log","find","onChangeInputAmount","e","formatTokenAmount","Number","MAX_SAFE_INTEGER","res","getSwapQuote","toSmallUnits","actionValSum","curr","next","prototype","hasOwnProperty","call","indexOf","String","length","onChangeToken","selected","changeTransferVal","onSubmit","async","inf","utils","Interface","abi","healthCheck","_params","inputAmount","m","tokenAddressPath","findPath","from","dataCode","encodeFunctionData","push","methods","dataMulti","positionContract","ethers","Contract","PositionABI","info","delegateCall","wait","ToastTitle","failed","reason","submitActionState","handleAddType","useEffect","mintTokens","isSupportedChainId","_tokens","mintTokenChainConfigs","addCollateral","removePrepaidInterest","forEach","poolPath","fromDecimals","toDecimals","inputValue","outputValue","total","Title","Select","isGroup","options","selectValue","onChange","isEnable","Grid","container","spacing","marginTop","paddingTop","xs","DragDropContext","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","copiedItems","Droppable","provided","droppableProps","ref","innerRef","amountOut","unitAmountOut","priceStr","Draggable","draggableId","provideds","draggableProps","dragHandleProps","userSelect","position","width","Methods","SelectIcon","leftInputValue","rightInputValue","rightOptions","leftSelectValue","rightSelectValue","leftBalance","rightBalance","selectedBalance","leftDisableStatus","RightIcon","rightDisableStatus","selectInput","leftChange","rightChange","onMax","leftSymbol","rightSymbol","bottom","right","color","fontSize","IconButton","onClick","cursor","marginLeft","padding","DeleteIcon","DroppableIcon","fill","placeholder","AddIcon","FormControl","RadioGroup","row","name","FormControlLabel","control","Radio","label","paddingRight","checked","inputProps","TextIcon","rightNumberIsShow","DataWrapper","oustrandingDebt","Math","floor","DataIndexName","CollateralRatio","displayRatio","PrepaidInterestCoverage","displayCoverage","TipWrap","IconWrap","background","Approve","disabled","paddingBottom","_props$imgprops","height","colSpan","SelectWrap","GroupWrap","Index","isExchange","onExchange","rightSelectInput","leftDesc","rightDesc","currentSelected","setVal","rightList","setRightList","rightVal","setRightVal","displayValues","_rightBalance","_leftBalance","orignalBalance","left","title","allDisabled","inputDisabled","selectDisabled","val","actionValue","groupStyle","FlexWrap","dir","onKeyUp","tabIndex","role","ExchangeArrow","RoundArrow"],"mappings":"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","file":"static/js/20.26164d70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fbtc20.5f91e1ef.svg\";","import React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport Card from 'components/Card'\nimport { ArrowLine, GuaranteeIcon, AvatarIcon } from 'components/uikit'\nimport { List, ListItem } from '@mui/material'\nimport CopyToClipboard from 'components/uikit/components/WalletModal/CopyToClipboard'\nimport Fbtc20Icon from 'assets/svg/fbtc20.svg'\nimport { usePositionInfo } from 'hooks/news/usePoistion'\nimport Logo from 'components/Logo'\nimport { TokenUtils, toLargeUnits } from '../../utils/transformHelper'\n\nconst TitleContent = styled('h3')`\n  font-family: PingFangSC-Semibold, sans-serif;\n  font-weight: 550;\n  font-size: 16px;\n  line-height: 22px;\n  color: #000000;\n  margin-bottom: 20px;\n`\nconst Wrapper = styled('div')`\n  height: calc(100vh - 200px);\n  overflow-y: scroll;\n  padding-bottom: 30px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\nconst LeftWrap = styled(Card)`\n  background: rgba(255, 255, 255, 0.4) !important;\n  margin-bottom: 20px;\n  padding: 20px !important;\n`\n\nconst AssetListWrap = styled('div')`\n  .total {\n    display: flex;\n    justify-content: space-between;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    margin-bottom: 14px;\n\n    span {\n      color: #000000;\n      &:first-of-type {\n        font-family: PingFangSC-Medium, sans-serif;\n        font-weight: 500;\n      }\n      &:last-of-type {\n        font-family: PingFangSC-Regular, sans-serif;\n        font-weight: 400;\n      }\n    }\n  }\n\n  .guarantee,\n  .avatar,\n  .ticker {\n    display: flex;\n    margin-bottom: 16px;\n\n    .icon {\n      margin-right: 8px;\n    }\n\n    .title {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 12px;\n      color: #000 !important;\n    }\n\n    div {\n      line-height: 20px;\n      width: calc(100% - 20px - 8px);\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      span:last-of-type {\n        font-family: PingFangSC-Regular, sans-serif;\n        font-size: 12px;\n        color: rgba(0, 0, 0, 0.5);\n      }\n    }\n  }\n\n  .avatar .avatar_info {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: fit-content;\n    span {\n      font-family: PingFangSC-Regular, sans-serif;\n      font-weight: 400;\n    }\n    svg {\n      cursor: pointer;\n    }\n  }\n\n  .ticker div span {\n    font-size: 14px !important;\n    line-height: 20px;\n    color: #000000 !important;\n  }\n\n  .token_list {\n    background: rgba(0, 0, 0, 0.04);\n    border-radius: 8px;\n    .icon {\n      width: 22px;\n      margin-right: 10px;\n    }\n    .MuiListItem-root {\n      display: flex;\n\n      .currency {\n        width: 100%;\n        //margin-left: 12px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 12px;\n        color: rgba(0, 0, 0, 0.5);\n        span {\n          font-family: PingFangSC-Regular, sans-serif;\n          font-weight: 400;\n        }\n      }\n    }\n  }\n\n  .daily {\n    font-family: PingFangSC-Medium, sans-serif;\n    margin-top: 20px;\n    margin-bottom: 5px;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 20px;\n    color: #000000;\n    white-space: nowrap;\n  }\n\n  .daily_name span {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-size: 14px;\n    line-height: 20px;\n    color: #000000;\n  }\n\n  .more {\n    margin-top: 20px;\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: 0.02em;\n    color: #2aa1ff;\n    cursor: pointer;\n  }\n`\nexport default function MyCollateral(props) {\n  const { pageType } = props\n\n  const { currentPosition, currentPositionTokenInfo, currentMintToken, collateralIndex } = usePositionInfo()\n\n  const allowedAssets = useMemo(() => {\n    if (!currentPositionTokenInfo) {\n      return null\n    }\n    const currentAllowedTokens = currentPositionTokenInfo.allowedTokens\n    const currentAllowedTokenBalance = currentPositionTokenInfo.allowedTokens?.balances\n    return Object.values(currentAllowedTokens.tokens).map((tokenInfo) => (\n      <ListItem key={tokenInfo.symbol}>\n        <Logo\n          imgprops={{ style: { marginRight: 10 } }}\n          token={tokenInfo.logo}\n          symbol={tokenInfo.symbol}\n        />\n        <div className=\"currency\">\n          <span className=\"symbol\">{tokenInfo.symbol}</span>\n          <span className=\"balance\">\n            {currentAllowedTokenBalance && TokenUtils.formatFourDecimals(toLargeUnits(currentAllowedTokenBalance[tokenInfo.symbol], tokenInfo.decimals, true) as number)}\n          </span>\n        </div>\n      </ListItem>\n    ))\n  }, [currentPositionTokenInfo])\n  const markPrice = useMemo(() => {\n    if (currentPositionTokenInfo.tokenPrice) {\n      return toLargeUnits(\n        currentPositionTokenInfo.tokenPrice[currentPosition.mintTokenInfo.symbol]?.price,\n        currentPosition.mintTokenInfo.settlementCurrency.decimals,\n      )\n    }\n    return 0\n  }, [currentPosition, currentPositionTokenInfo])\n  return (\n    <Wrapper>\n      <LeftWrap>\n        <TitleContent>{pageType === 'Liq' ? 'The Collateral' : 'My Collateral'} </TitleContent>\n        <AssetListWrap>\n          <div className=\"total\">\n            <span>Collateral Value</span>\n            <span>\n              ≈ {currentPositionTokenInfo.displayTotalAssetsValue}\n            </span>\n          </div>\n          <div className=\"guarantee\">\n            <GuaranteeIcon className=\"icon\" />\n            <div>\n              <span className=\"title\">Prepaid Interest </span>\n              <span>\n                ≈{' '}\n                {TokenUtils.formatFourDecimals(collateralIndex.prepaidInterest)}{\" \"}\n                {currentPosition.mintTokenInfo.settlementCurrency.symbol}\n              </span>\n            </div>\n          </div>\n          <div className=\"avatar\">\n            <AvatarIcon className=\"icon\" />\n            <div>\n              <span className=\"title\">Collateral</span>\n              <CopyToClipboard className=\"avatar_info\" toCopy={currentPosition.positionAddress}>\n                <span>\n                  {currentPosition.positionAddress.slice(0, 6)}...{currentPosition.positionAddress.slice(-6)}\n                </span>\n              </CopyToClipboard>\n            </div>\n          </div>\n          <List className=\"token_list\">\n            {allowedAssets}\n          </List>\n          {pageType !== 'Liq' && (\n            <>\n              <h3 className=\"daily\">Mark Price</h3>\n              <div className=\"daily_name\">\n                <span>\n                  1 F(BTC, 20) ≈ {markPrice} {currentPosition.mintTokenInfo.settlementCurrency.symbol}\n                </span>\n              </div>{' '}\n              <Link to=\"/collateral\" className=\"more\">\n                <span>Add More Collateral</span>&nbsp;&nbsp;\n                <ArrowLine />\n              </Link>\n            </>\n          )}\n        </AssetListWrap>\n      </LeftWrap>\n      <LeftWrap>\n        <TitleContent>{pageType === 'Liq' ? 'The Outstanding Debt' : 'My Outstanding Debt'}</TitleContent>\n        <AssetListWrap>\n          <div className=\"ticker\" style={{ marginBottom: 20 }}>\n            <img src={Fbtc20Icon} alt=\"\" className=\"icon\" />\n            <div>\n              <span>{currentMintToken}</span>\n              <span>{TokenUtils.formatFourDecimals(toLargeUnits(currentPosition.balance, currentPosition.mintTokenInfo.decimals, true) as number)}</span>\n            </div>\n          </div>\n\n          <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'space-between' }}>\n            <h3 className=\"daily\" style={{ margin: '0' }}>\n              Daily Paid Rewards Reference\n            </h3>\n            <div className=\"daily_name\">\n              <span>{TokenUtils.formatFourDecimals(collateralIndex.estimatedDailyDebt)} {currentPosition.mintTokenInfo.settlementCurrency.symbol}</span>\n            </div>\n          </div>\n          {pageType !== 'Liq' && (\n            <div className=\"more\">\n              <a\n                target=\"_blank\"\n                href={`https://app.uniswap.org/#/swap?&outputCurrency=${currentPosition.mintTokenInfo.address}&inputCurrency=${currentPosition.mintTokenInfo.settlementCurrency.address}`}\n                rel=\"noreferrer\"\n              >\n                Buy More Asset to Neutralize &nbsp;&nbsp;\n                <ArrowLine />\n              </a>\n            </div>\n          )}\n        </AssetListWrap>\n      </LeftWrap>\n    </Wrapper>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ethers, utils } from 'ethers'\nimport uuid from 'uuid/dist/v4'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport { Link, withRouter } from 'react-router-dom'\nimport { useWeb3React } from 'web3-react-core'\nimport { styled } from '@mui/material/styles'\nimport AddIcon from '@mui/icons-material/Add'\nimport { Grid, IconButton, FormControl, RadioGroup, FormControlLabel, Radio } from '@mui/material'\nimport { Approve, icon, IconWrap, TextIcon, TipWrap, Title } from 'components/CommonComponent'\nimport MyCollateral from 'components/CollateralInfoBox'\nimport Card from 'components/Card'\nimport Methods from 'components/Methods'\nimport DataWrapper from 'components/DataWrapper'\nimport Logo from 'components/Logo'\nimport Select from 'components/Select'\nimport useHashPowerToken from 'hooks/useHashPowerToken'\nimport { ArrowLine, Button, DeleteIcon, DroppableIcon } from 'components/uikit'\nimport { TokenUtils, toLargeUnits, toSmallUnits } from 'utils/transformHelper'\nimport { mintTokenChainConfigs, MintTokenKey } from 'config/constants/mintToken'\nimport { findPath, getSwapQuote } from 'config/constants/pool'\nimport contracts from 'config/constants/contracts'\nimport { DataIndexName, ToastTitle } from 'config/constants/contants'\nimport { SupportedTokens, valueToKeyMap } from 'config/constants/tokenConfig'\nimport { SupportedChainId } from 'config/constants/chains'\nimport { isSupportedChainId } from 'utils/web3React'\nimport useSystemParams from 'hooks/useSystemParams'\nimport useToast from 'hooks/useToast'\nimport PositionABI from 'config/abi/Position.json'\nimport usePosContract from 'hooks/usePosContract'\nimport { useComputedIndexAction, usePositionAction, usePositionInfo } from 'hooks/news/usePoistion'\n\n// Avatar->Avatar 0 Guarantee-Avatar->1\nenum colType {\n  a,\n  g,\n}\n\nconst Box = styled('div')`\n  box-sizing: border-box;\n  margin-top: 18px;\n  padding-right: 44px;\n  overflow: auto;\n\n  & > .MuiGrid-root {\n    min-width: 1024px;\n  }\n\n  .account_panel {\n    height: calc(100vh - 189px);\n    padding-bottom: 100px;\n    overflow: auto;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .asset_info {\n    padding: 0;\n    margin-top: 26px;\n  }\n`\nconst AddBtn = styled(Button)`\n  box-shadow: none !important;\n  width: 34px !important;\n  height: 28px !important;\n  padding: 0 !important;\n  background: linear-gradient(90deg, #62c3f7 0%, #7ae9f1 100%) !important;\n  border-radius: 6px !important;\n\n  svg {\n    color: #000;\n    width: 16px;\n  }\n`\n\nconst Wrapper = styled('div')`\n  padding-right: 44px;\n  width: 100%;\n  overflow: scroll;\n\n  .left_func {\n    overflow: scroll;\n    height: calc(100vh - 200px);\n    padding-bottom: 100px !important;\n  }\n`\n\nconst Content = styled('div')`\n  min-width: 1024px;\n`\nconst RightCard = styled(Card)``\n\nconst { liquidation } = contracts\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return\n  const { source, destination } = result\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId]\n    const destColumn = columns[destination.droppableId]\n    const sourceItems = [...sourceColumn.items]\n    const destItems = [...destColumn.items]\n    const [removed] = sourceItems.splice(source.index, 1)\n    destItems.splice(destination.index, 0, removed)\n    setColumns([...destColumn, destItems])\n  } else {\n    const copiedItems = [...columns]\n    const [removed] = copiedItems.splice(source.index, 1)\n    copiedItems.splice(destination.index, 0, removed)\n    // if (copiedItems.map(it=>it.input>0).includes(false)){\n    //   setIsSubmit(true)\n    // }else{\n    //   setIsSubmit(false)\n    // }\n    setColumns(copiedItems)\n  }\n}\n\nfunction LiquidationDetail() {\n  const { chainId } = useWeb3React()\n  const { setRefresh } = useHashPowerToken()\n  const { signer, helperContract, tokenPools } = useSystemParams()\n  const { toastSuccess, toastError, toastWarning } = useToast()\n  const [columns, setColumns] = useState([])\n  const [addType, setAddType] = useState(0)\n  const [isSubmitStatus, setIsSubmit] = useState(true)\n  const [transferVal, setTransferVal] = useState({\n    m1: 0,\n    m2: 0,\n    m3: 0,\n    m4: 0,\n  })\n  const [selectedValue, setSelectedValue] = React.useState('2')\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedValue(event.target.value)\n  }\n\n\n\n  const { currentPosition, currentPositionTokenInfo, currentMintToken, collateralIndex, } = usePositionInfo()\n  const { handleChangeCurrentPosition } = usePositionAction()\n  const { onUpdateTotalCollateralValue, onUpdatePrepaidInterest, onUpdateNeutralizeValue, onUpdateCollateralValue, newCollateralRatio, newPrepaidInterestCoverage, newOutStandingDebt, newEstimatedDailyDebt, newDisplayCollateralRatio, newDisplayPrepaidInterestCoverage } = useComputedIndexAction()\n\n\n  const avatarAssetList = useMemo(() => {\n    if (currentPositionTokenInfo.allowedTokens) {\n      const { balances, tokens } = currentPositionTokenInfo.allowedTokens\n      return Object.keys(balances).reduce((acc, key) => {\n        return {\n          ...acc,\n          [key]: toLargeUnits(balances[key], tokens[key].decimals, true) as number,\n        }\n      }, {})\n    }\n    return Object.keys(valueToKeyMap).reduce((acc, key) => {\n      return {\n        ...acc,\n        [key]: 0,\n      }\n    }, {}) as Record<SupportedTokens, number>\n  }, [currentPositionTokenInfo.allowedTokens])\n  const tokenList = useMemo<\n    {\n      token: SupportedTokens\n      balance: number\n      decimals: number\n      icon: React.FC<JSX.Element>\n      rightOptionList: {\n        token: SupportedTokens\n        balance: number\n        decimals: number\n        icon: React.FC<JSX.Element>\n      }[]\n    }[]\n  >(() => {\n    if (currentPositionTokenInfo?.tokenPrice) {\n      const { allowedTokens } = currentPositionTokenInfo\n      const list = Object.values(allowedTokens.tokens).map((it) => {\n        // eslint-disable-next-line @typescript-eslint/no-shadow\n        const balance =\n          (allowedTokens?.balances &&\n            (toLargeUnits(allowedTokens?.balances[it.symbol] || 0, it.decimals, true) as number)) ||\n          0\n        return {\n          decimals: it.decimals,\n          token: it.symbol,\n          balance,\n          icon: () => <Logo imgprops={{ style: { marginRight: 10 } }} token={it.logo} symbol={it.symbol} />,\n          rightOptionList: [],\n        }\n      })\n      return list.map((item) => {\n        return {\n          ...item,\n          rightOptionList: list.filter((it) => it.token !== item.token),\n        }\n      })\n    }\n    return []\n  }, [currentPositionTokenInfo])\n\n  const addMethods = useCallback(() => {\n    setColumns((state) => {\n      let data = [...state]\n      if (addType === colType.a) {\n        data = [\n          ...data,\n          {\n            id: uuid(),\n            type: colType.a,\n            input: 0,\n            output: 0,\n            inputToken: tokenList[0],\n            outputToken: tokenList[0].rightOptionList[0],\n          },\n        ]\n        if (data.map((it) => it.input > 0).includes(false)) {\n          setIsSubmit(true)\n        } else {\n          setIsSubmit(false)\n        }\n      }\n      if (addType === colType.g) {\n        console.log('object :>> ', tokenList.find((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol));\n        data = [\n          ...data,\n          {\n            id: uuid(),\n            type: colType.g,\n            input: 0,\n            output: 0,\n            inputToken: {\n              ...tokenList.find((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol),\n              balance: collateralIndex.prepaidInterest,\n              rightOptionList: tokenList.filter((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol),\n            },\n            outputToken: {\n              ...tokenList.find((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol)\n            }\n          }\n        ]\n      }\n\n      return data\n    })\n  }, [addType, collateralIndex.prepaidInterest, currentPosition.mintTokenInfo.settlementCurrency.symbol, tokenList])\n  const onChangeInputAmount = useCallback(\n    (e, item) => {\n      if (item.type === colType.a) {\n        const value = TokenUtils.formatTokenAmount(Number(e.target.value), item.inputToken.decimals)\n        if (Number(value) > Number.MAX_SAFE_INTEGER) {\n          setIsSubmit(true)\n          return\n        }\n        const res =\n          getSwapQuote(\n            chainId,\n            item.inputToken.token,\n            item.outputToken.token,\n            toSmallUnits(value, item.inputToken.decimals),\n            tokenPools,\n          ) || 0\n        setColumns((state) => {\n          const data = state.map((it) => {\n            const _item = {\n              ...it,\n              input: it.id === item.id ? e.target.value : it.input,\n              output: it.id === item.id ? (toLargeUnits(res, item.outputToken.decimals, true) as number) : it.output,\n            }\n            return _item\n          })\n\n          const actionValSum = data.reduce((acc, curr) => {\n            const next = { ...acc }\n            if (Object.prototype.hasOwnProperty.call(next, curr.inputToken.token)) {\n              next[curr.inputToken.token] += Number(curr.input)\n            } else {\n              next[curr.inputToken.token] = Number(curr.input)\n            }\n            return next\n          }, {} as Record<SupportedTokens, number>)\n\n          if (data.map((it) => it.input > 0 && it.output > 0 && it.input <= it.inputToken.balance).includes(false)) {\n            setIsSubmit(true)\n          } else if (\n            value.indexOf('.') !== -1 &&\n            String(value).slice(value.indexOf('.') + 1).length > item.inputToken.decimals\n          ) {\n            setIsSubmit(true)\n          } else {\n            setIsSubmit(false)\n          }\n\n          if (data.map((it) => it.input > 0).includes(false)) {\n            setIsSubmit(true)\n          } else if (actionValSum[item.inputToken.token] > item.inputToken.balance) {\n            setIsSubmit(true)\n          } else {\n            setIsSubmit(false)\n          }\n          return data\n        })\n      } else {\n        setColumns((state) => {\n          const data = state.map((it) => {\n            const _item = {\n              ...it,\n              input: it.id === item.id ? e.target.value : it.input,\n              output: it.id === item.id ? e.target.value : it.output,\n            }\n            return _item\n          })\n          return data\n        })\n      }\n\n    },\n    [chainId, tokenPools],\n  )\n  const onChangeToken = useCallback(\n    (selected, id, type) => {\n      setColumns((state) => {\n        return state.map((item) => {\n          if (item.id === id) {\n            const data = { ...item, [type]: selected }\n            if (data.input) {\n              const res = getSwapQuote(\n                chainId,\n                data.inputToken.token,\n                data.outputToken.token,\n                toSmallUnits(\n                  TokenUtils.formatTokenAmount(data.input, data.inputToken.decimals),\n                  data.inputToken.decimals,\n                ),\n                tokenPools,\n              )\n              data.output = toLargeUnits(res, data.outputToken.decimals, true) as number\n            }\n            return data\n          }\n          return item\n        })\n      })\n    },\n    [chainId, tokenPools],\n  )\n  const changeTransferVal = useCallback(\n    (e, type, key) => {\n      if (type > 0) {\n        if (key === 'm3') {\n          setTransferVal((state) => ({\n            ...state,\n            [key]: avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol],\n          }))\n        }\n        if (key === 'm4') {\n          setTransferVal((state) => ({\n            ...state,\n            [key]: avatarAssetList[currentMintToken],\n          }))\n        }\n\n      } else {\n        setTransferVal((state) => ({\n          ...state,\n          [key]: e.target.value,\n        }))\n      }\n    },\n    [avatarAssetList, currentMintToken, currentPosition.mintTokenInfo.settlementCurrency.symbol],\n  )\n  const onSubmit = useCallback(async () => {\n    const inf = new utils.Interface(liquidation.abi)\n    const result = await helperContract.healthCheck(currentPosition.positionAddress, currentPosition.balance, 12000, 20)\n\n    if (result.includes(false)) {\n      const _params = columns.map((it) => {\n        const inputAmount = toSmallUnits(TokenUtils.formatTokenAmount(it.input, it.inputToken.decimals), it.inputToken.decimals)\n        const m = []\n        if (it.type === colType.a) {\n          const { tokenAddressPath } = findPath({\n            chainId,\n            from: it.inputToken.token,\n            to: it.outputToken.token,\n          })\n          const dataCode = inf.encodeFunctionData('swapExactTokensForTokens', [\n            inputAmount,\n            '0',\n            tokenAddressPath,\n            '999999999999999',\n          ])\n          m.push(liquidation.address[chainId], dataCode)\n        }\n        if (it.type === colType.g) {\n          m.push(liquidation.address[chainId], inf.encodeFunctionData('moveGuaranteeBack', [inputAmount]))\n        }\n        return m\n      })\n      const methods = []\n\n      if (selectedValue === '1' && transferVal.m3) {\n        const m3 = inf.encodeFunctionData('addGuarantee', [toSmallUnits(TokenUtils.formatTokenAmount(transferVal.m3, currentPosition.mintTokenInfo.settlementCurrency.decimals), currentPosition.mintTokenInfo.settlementCurrency.decimals)])\n        methods.push([liquidation.address[chainId], m3])\n      }\n      if (selectedValue === '2' && transferVal.m4) {\n        const m4 = inf.encodeFunctionData('neutralizetBalance', [toSmallUnits(TokenUtils.formatTokenAmount(transferVal.m4, currentPosition.mintTokenInfo.decimals), currentPosition.mintTokenInfo.decimals)])\n        methods.push([liquidation.address[chainId], m4])\n      }\n      const dataMulti = inf.encodeFunctionData('liquidation', [selectedValue, [..._params, ...methods]])\n\n      try {\n        const positionContract = new ethers.Contract(currentPosition.positionAddress, PositionABI, signer)\n        const info = await positionContract.delegateCall(liquidation.address[chainId], dataMulti)\n        if (info) {\n          toastSuccess('Success', 'The transaction has been submitted')\n          const res = await info.wait()\n          if (res) {\n            setRefresh((state) => !state)\n            toastSuccess('Success', 'The transaction has been successfully')\n          }\n        }\n      } catch (e: any) {\n        toastError(ToastTitle.failed, e?.reason)\n      }\n    } else {\n      toastWarning('Warning', 'Liquidation conditions not met')\n    }\n  }, [helperContract, currentPosition.positionAddress, currentPosition.balance, currentPosition.mintTokenInfo.settlementCurrency.decimals, currentPosition.mintTokenInfo.decimals, columns, selectedValue, transferVal.m3, transferVal.m4, chainId, signer, toastSuccess, setRefresh, toastError, toastWarning])\n\n  const submitActionState = useMemo(() => {\n    // console.log(params.futureCRate)\n    return newCollateralRatio >= 120 && newPrepaidInterestCoverage >= 20 && isSubmitStatus\n  }, [isSubmitStatus, newCollateralRatio, newPrepaidInterestCoverage])\n  // change add methods     Avatar->Avatar | Guarantee-> Avata\n  const handleAddType = useCallback((e) => {\n    const { value } = e.target\n    setAddType(Number(value))\n  }, [])\n\n  useEffect(() => {\n    if (tokenList.length) {\n      setColumns(() => {\n        return [\n          {\n            id: uuid(),\n            input: 0,\n            output: 0,\n            type: colType.a,\n            inputToken: tokenList[0],\n            outputToken: tokenList[0].rightOptionList[0],\n          },\n        ]\n      })\n      console.log('1 :>> ', 1);\n    }\n  }, [tokenList])\n\n\n  const mintTokens = useMemo(() => {\n    if (isSupportedChainId(chainId)) {\n      const _tokens = mintTokenChainConfigs[chainId as SupportedChainId].tokens\n      return Object.keys(mintTokenChainConfigs[chainId as SupportedChainId].tokens).map((key) => {\n        return {\n          token: _tokens[key as MintTokenKey].symbol,\n          address: _tokens[key as MintTokenKey].address,\n          decimals: _tokens[key as MintTokenKey].decimals,\n          icon: () => (\n            <Logo\n              imgprops={{ style: { marginRight: 10 } }}\n              token={_tokens[key as MintTokenKey].logo}\n              symbol={_tokens[key as MintTokenKey].symbol}\n            />\n          ),\n        }\n      })\n    }\n    return []\n  }, [chainId])\n\n  useEffect(() => {\n\n    let addCollateral = 0\n    let removePrepaidInterest = 0\n    columns.filter(it => it.type === colType.g).forEach((it) => {\n      addCollateral += Number(it.input)\n      removePrepaidInterest += Number(it.input)\n    })\n    onUpdateCollateralValue({\n      symbol: currentPosition.mintTokenInfo.settlementCurrency.symbol as any,\n      value: transferVal.m3 > 0 ? addCollateral + Number(`-${transferVal.m3}`) : 0,\n    })\n    onUpdatePrepaidInterest(transferVal.m3 + Number(`-${removePrepaidInterest}`))\n    onUpdateNeutralizeValue(transferVal.m4 > 0 ? Number(`-${transferVal.m4}`) : 0)\n\n  }, [columns, currentPosition.mintTokenInfo.settlementCurrency.symbol, onUpdateCollateralValue, onUpdateNeutralizeValue, onUpdatePrepaidInterest, transferVal.m3, transferVal.m4])\n  useEffect(() => {\n    const { tokenPrice } = currentPositionTokenInfo\n    if (tokenPrice) {\n      const poolPath = columns.filter(it => it.type === colType.a).map((it) => ({\n        from: it.inputToken.token,\n        to: it.outputToken.token,\n        fromDecimals: it.inputToken.decimals,\n        toDecimals: it.outputToken.decimals,\n        inputValue: Number(it.input),\n        outputValue: Number(it.output),\n      }))\n      let total = 0\n      poolPath.forEach((item) => {\n        if (tokenPrice[item.from]) {\n          total -=\n          item.inputValue *\n          (toLargeUnits(\n            tokenPrice[item.from].price,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            true,\n          ) as number)\n        }\n        if (tokenPrice[item.to]) {\n          total +=\n          item.outputValue *\n          (toLargeUnits(\n            tokenPrice[item.to].price,\n            currentPosition.mintTokenInfo.settlementCurrency.decimals,\n            true,\n          ) as number)\n        }\n      })\n      onUpdateTotalCollateralValue(total)\n    }\n  }, [\n    columns,\n    currentPosition.mintTokenInfo.settlementCurrency.decimals,\n    currentPositionTokenInfo,\n    onUpdateTotalCollateralValue,\n  ])\n\n  return (\n    <Wrapper>\n      <Content>\n        <Title>Liquidation</Title>\n        <Select\n          isGroup={false}\n          options={mintTokens}\n          selectValue={currentMintToken}\n          onChange={(e: any) => {\n            handleChangeCurrentPosition(e)\n          }}\n        />\n        {\n          !currentPosition.isEnable ? <Box>\n            <Link to=\"/collateral\" style={{ color: '#2AA1FF' }}>\n              Please enable the collateral first\n              <ArrowLine />{' '}\n            </Link>\n          </Box> :\n            <Grid container spacing={2} style={{ marginTop: 14 }}>\n              <Grid className=\"left_func\" style={{ paddingTop: 0 }} item xs={8}>\n                <RightCard>\n                  {/* trading through Avatar */}\n                  <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\n                    <Droppable droppableId=\"droppableId\">\n                      {(provided) => {\n                        return (\n                          <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {columns.map((item, index) => {\n                              const amountOut =\n                                (tokenPools.length &&\n                                  getSwapQuote(\n                                    chainId,\n                                    item.inputToken.token,\n                                    item.outputToken.token,\n                                    toSmallUnits(String(item.input || '1'), item.inputToken.decimals),\n                                    tokenPools,\n                                  )) ||\n                                0\n                              const price = toLargeUnits(amountOut, item.outputToken.decimals, true) as number\n                              const unitAmountOut = price / (item.input || 1)\n\n                              const priceStr = TokenUtils.formatFourDecimals(unitAmountOut)\n                              return (\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                  {(provideds) => {\n                                    return (\n                                      <div\n                                        ref={provideds.innerRef}\n                                        {...provideds.draggableProps}\n                                        {...provideds.dragHandleProps}\n                                        style={{\n                                          display: 'flex',\n                                          alignItems: 'center',\n                                          userSelect: 'none',\n                                          margin: '0 0 8px 0',\n                                          ...provideds.draggableProps.style,\n                                          position: 'static',\n                                        }}\n                                      >\n                                        <div style={{ width: '100%', position: 'relative' }}>\n                                          <Methods\n                                            SelectIcon={() => (\n                                              <span>{item.type === colType.a ? 'Collateral' : 'Prepaid Interest '}</span>\n                                            )}\n                                            leftInputValue={item.input}\n                                            rightInputValue={item.output}\n                                            options={tokenList}\n                                            rightOptions={item.inputToken.rightOptionList}\n                                            leftSelectValue={item.inputToken.token}\n                                            rightSelectValue={item.outputToken.token}\n                                            leftBalance={item.inputToken.balance}\n                                            rightBalance={item.outputToken.balance}\n                                            selectedBalance={100}\n                                            leftDisableStatus={[item.type === colType.g, false]}\n                                            RightIcon={() => <span>Collateral</span>}\n                                            rightDisableStatus={[item.type === colType.g, true]}\n                                            selectInput={(e) => {\n                                              onChangeInputAmount(e, item)\n                                            }}\n                                            leftChange={(selected) => {\n                                              onChangeToken(selected, item.id, 'inputToken')\n                                            }}\n                                            rightChange={(selected) => {\n                                              onChangeToken(selected, item.id, 'outputToken')\n                                            }}\n                                            onMax={() => {\n                                              onChangeInputAmount({ target: { value: item.inputToken.balance } }, item)\n                                            }}\n                                            leftSymbol={item.inputToken.token}\n                                            rightSymbol={item.outputToken.token}\n                                          />\n                                          <p\n                                            style={{\n                                              position: 'absolute',\n                                              bottom: 0,\n                                              right: 0,\n                                              color: 'rgba(0, 0, 0, 0.5)',\n                                              fontSize: 12,\n                                            }}\n                                          >\n                                            {`${1} ${item.inputToken.token}`} ≈ {`${priceStr} ${item.outputToken.token}`}\n                                          </p>\n                                        </div>\n                                        <IconButton\n                                          onClick={() => {\n                                            const data = [...columns]\n                                            data.splice(index, 1)\n                                            // if (data.map(it=>it.input>0).includes(false)){\n                                            //   setIsSubmit(true)\n                                            // }else{\n                                            //   setIsSubmit(false)\n                                            // }\n                                            setColumns(data)\n                                          }}\n                                          style={{\n                                            cursor: 'pointer',\n                                            marginTop: 8,\n                                            marginLeft: 10,\n                                            padding: 0,\n                                          }}\n                                        >\n                                          <DeleteIcon />\n                                        </IconButton>\n                                        <IconButton style={{ marginTop: 8, marginLeft: 8, padding: 0 }}>\n                                          <DroppableIcon style={{ fill: 'none' }} />\n                                        </IconButton>\n                                      </div>\n                                    )\n                                  }}\n                                </Draggable>\n                              )\n                            })}\n                            {provided.placeholder}\n                          </div>\n                        )\n                      }}\n                    </Droppable>\n                  </DragDropContext>\n                  <div style={{ display: 'flex', alignItems: 'center', marginTop: 10, marginBottom: 40 }}>\n                    <AddBtn onClick={addMethods}>\n                      <AddIcon />\n                    </AddBtn>\n                    <FormControl style={{ marginLeft: 10 }}>\n                      <RadioGroup\n                        row\n                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                        name=\"row-radio-buttons-group\"\n                        value={addType}\n                        onChange={handleAddType}\n                      >\n                        <FormControlLabel\n                          value={0}\n                          control={<Radio />}\n                          label={\n                            <p style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                              <span>Collateral</span>\n                              <span style={{ margin: '0 10px' }}>-&gt;</span>\n                              <span>Collateral</span>\n                            </p>\n                          }\n                        />\n                        <FormControlLabel\n                          value={1}\n                          control={<Radio />}\n                          label={\n                            <p style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                              <span>Prepaid Interest </span>\n                              <span style={{ margin: '0 10px' }}>-&gt;</span>\n                              <span>Collateral</span>\n                            </p>\n                          }\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  </div>\n                  {/* add guarantee */}\n                  <div style={{ display: 'flex', alignItems: 'center', paddingRight: 28, width: '100%' }}>\n                    <div style={{ width: '100%' }}>\n                      <Methods\n                        SelectIcon={() => <span>Collateral</span>}\n                        options={[\n                          {\n                            ...tokenList.find((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol),\n                            rightOptionList: tokenList.filter((it) => it.token === currentPosition.mintTokenInfo.settlementCurrency.symbol),\n                          }\n                        ]}\n                        rightBalance={collateralIndex.prepaidInterest}\n                        leftBalance={avatarAssetList ? TokenUtils.formatFourDecimals(avatarAssetList[currentPosition.mintTokenInfo.settlementCurrency.symbol]) : 0}\n                        RightIcon={() => <span>Prepaid Interest </span>}\n                        leftInputValue={transferVal.m3}\n                        rightInputValue={transferVal.m3}\n                        selectInput={(e) => {\n                          changeTransferVal(e, 0, 'm3')\n                        }}\n                        onMax={() => {\n                          changeTransferVal({}, 1, 'm3')\n                        }}\n                      />\n                    </div>\n                    <Radio\n                      checked={selectedValue === '1'}\n                      onChange={handleChange}\n                      value=\"1\"\n                      name=\"radio-buttons\"\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 8,\n                        marginLeft: 10,\n                        padding: 0,\n                      }}\n                      inputProps={{ 'aria-label': '1' }}\n                    />\n                  </div>\n                  {/* neutralize */}\n                  <div style={{ display: 'flex', alignItems: 'center', paddingRight: 28, width: '100%' }}>\n                    <div style={{ width: '100%' }}>\n                      <Methods\n                        SelectIcon={() => <span>Collateral</span>}\n                        options={[\n                          {\n                            ...tokenList.find((it) => it.token === currentPosition.mintTokenInfo.symbol),\n                            rightOptionList: tokenList.filter((it) => it.token === currentPosition.mintTokenInfo.symbol),\n                          }\n                        ]}\n                        leftBalance={avatarAssetList ? avatarAssetList[currentMintToken] : 0}\n                        RightIcon={icon(TextIcon, [<span style={{ color: '#f40' }}>Neutralize</span>])}\n                        leftSelectValue={currentMintToken}\n                        leftSymbol={currentMintToken}\n                        rightSelectValue={currentMintToken}\n                        leftInputValue={transferVal.m4}\n                        rightInputValue={transferVal.m4}\n                        rightNumberIsShow={false}\n                        selectInput={(e) => {\n                          changeTransferVal(e, 0, 'm4')\n                        }}\n                        onMax={() => {\n                          changeTransferVal({}, 1, 'm4')\n                        }}\n                      />\n                    </div>\n                    <Radio\n                      checked={selectedValue === '2'}\n                      onChange={handleChange}\n                      value=\"2\"\n                      style={{\n                        cursor: 'pointer',\n                        marginTop: 8,\n                        marginLeft: 10,\n                        padding: 0,\n                      }}\n                      name=\"radio-buttons\"\n                      inputProps={{ 'aria-label': '2' }}\n                    />\n                  </div>\n\n                  <DataWrapper\n                    data={[\n                      [\n                        'OutStanding Debt',\n                        collateralIndex.oustrandingDebt,\n                        toLargeUnits(newOutStandingDebt, currentPosition.mintTokenInfo.decimals),\n                      ],\n                      [\n                        'Daily Obligation Reference',\n                        `${collateralIndex.estimatedDailyDebt} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n                        `${toLargeUnits(Math.floor(newEstimatedDailyDebt), currentPosition.mintTokenInfo.settlementCurrency.decimals)} ${currentPosition.mintTokenInfo.settlementCurrency.symbol}`,\n                      ],\n                      [\n                        DataIndexName.CollateralRatio,\n                        collateralIndex.displayRatio,\n                        newDisplayCollateralRatio,\n                      ],\n                      [\n                        DataIndexName.PrepaidInterestCoverage,\n                        collateralIndex.displayCoverage,\n                        newDisplayPrepaidInterestCoverage,\n                      ],\n                    ]}\n                  />\n                  <TipWrap>\n                    <IconWrap style={{ background: '#FF7D00', color: '#fff' }}>!</IconWrap>\n                    <p>\n                      The collateral ratio should lower than 200% and the Prepaid Interest Coverage should lower than 100\n                      days after the liquidation.\n                    </p>\n                  </TipWrap>\n                  <Approve disabled={submitActionState} onClick={onSubmit}>\n                    Submit\n                  </Approve>\n                </RightCard>\n              </Grid>\n              <Grid item style={{ paddingTop: 0, marginBottom: 40, paddingBottom: 50 }} xs={4}>\n                <MyCollateral pageType=\"Liq\" />\n              </Grid>\n            </Grid>\n        }\n      </Content>\n    </Wrapper>\n  )\n}\n\nexport default withRouter(LiquidationDetail)\n","import React from 'react'\n\nexport default function Logo(props: { token: string; symbol: string; imgprops?: React.ImgHTMLAttributes<HTMLImageElement> }) {\n  return <img {...props.imgprops} style={{width: 22, height: 22, ...props.imgprops?.style}} src={props.token} alt={props.symbol}  />\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\n\nconst Wrapper = styled('div')`\n  background: #def1ff;\n  border-radius: 14px;\n  padding: 13px 22px;\n  margin: 20px 0;\n\n  table {\n    width: 100%;\n  }\n\n  td {\n    font-family: PingFangSC-Regular, sans-serif;\n    font-weight: 400;\n    font-size: 12px;\n    padding: 5px 0;\n  }\n\n  .label {\n    text-align: left;\n    width: 30%;\n  }\n\n  .from,\n  .to {\n    width: 35%;\n    line-height: 17px;\n    text-align: right;\n  }\n\n  .to {\n    font-family: PingFangSC-Medium, sans-serif;\n    font-weight: 500;\n    color: #000;\n  }\n\n  .borderTop {\n    border-top: 0.5px solid rgba(0, 0, 0, 0.12);\n  }\n`\n\n/*\n\nconst data = [\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n  ['Collateral Ratio', 100, 200],\n]\n\n*/\n\nfunction DataWrapper(props) {\n  const { data } = props\n  return (\n    <Wrapper>\n      <table>\n        <tbody>\n          <tr>\n            <td className=\"from\" colSpan={2}>\n              From\n            </td>\n            <td className=\"to\">To</td>\n          </tr>\n          {data.map((item) => (\n            <tr className={item[3] ? 'borderTop' : ''} key={item[0]}>\n              <td className=\"label\">{item[0]}</td>\n              <td className=\"from\">{item[1]}</td>\n              <td className=\"to\">{item[2]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Wrapper>\n  )\n}\n\nexport default DataWrapper\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { PoolProps } from 'config/constants/types'\nimport { TokenUtils } from 'utils/transformHelper'\nimport Select from '../Select'\nimport { ExchangeArrow, RoundArrow } from '../uikit'\nimport { FlexWrap } from '../CommonComponent'\n\nconst SelectWrap = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: static !important;\n`\n\nconst GroupWrap = styled('div')`\n  display: flex;\n  flex-direction: column;\n  width: calc(100% / 2 - 25px);\n\n  p {\n    height: 28px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 15px;\n    box-sizing: border-box;\n\n    span {\n      font-size: 12px;\n      line-height: 17px;\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  .maxBtn {\n    height: 21px;\n    align-items: flex-end;\n  }\n`\n\nexport const IconWrap = styled('strong')`\n  display: block;\n  width: 20px;\n  height: 20px;\n  background: #c4c4c4;\n  line-height: 20px;\n  text-align: center;\n  border-radius: 50%;\n`\n\nexport interface MethodsProps {\n  options: PoolProps[] // selectIcon\n  selectValue: number // current selected\n  onMax?: (arg1: PoolProps) => void // to max action\n  selectedSymbol: string // selected symbol\n  SelectIcon: React.FC // leftTop icon\n  RightIcon: React.FC // right icon\n  leftInputValue?: number | null // left input value\n  rightInputValue?: number // right input value\n  rightBalance: number // right balance\n  rightSymbol: string // right symbol\n  rightOptions: PoolProps[] // options list\n  selectInput?: (arg1: React.SyntheticEvent) => void\n  leftBalance?: any\n}\n\nexport default function Index(props) {\n  const {\n    options,\n    leftBalance,\n    isExchange,\n    onExchange,\n    onMax,\n    selectInput,\n    rightSelectInput,\n    SelectIcon,\n    RightIcon,\n    leftInputValue,\n    rightInputValue,\n    rightBalance,\n    rightDisableStatus,\n    leftChange,\n    rightChange,\n    leftDisableStatus = [false, false],\n    leftSelectValue,\n    rightSelectValue,\n    rightOptions,\n    leftSymbol,\n    rightSymbol,\n    rightNumberIsShow = true,\n    leftDesc,\n    rightDesc,\n  } = props\n  // rightDisableStatus[1] true selectDisabled\n  // rightDisableStatus[2] true inputDisabled\n\n  const [currentSelected, setVal] = useState(options && options.length ? options[0] : {})\n  const [rightList, setRightList] = useState(options && options.length ? options[0].rightOptionList : [])\n  const [rightVal, setRightVal] = useState(rightList ? rightList[0] : {})\n\n\n  useEffect(() => {\n    if (options && options.length && leftSelectValue && rightSelectValue) {\n      setVal(options.filter((it) => it.token === leftSelectValue)[0] || options[0])\n      setRightList(options[0].rightOptionList)\n      setRightVal(options[0].rightOptionList.filter((it) => it.token === rightSelectValue)[0] || options[0].rightOptionList[0])\n    }\n  }, [leftSelectValue, options, rightSelectValue])\n\n  const displayValues = useMemo(() => {\n    const _rightBalance = rightBalance || rightVal && rightVal.balance || 0;\n    const _leftBalance = leftBalance || currentSelected.balance || 0;\n    return {\n      right: {\n        orignalBalance: _rightBalance,\n        balance: TokenUtils.formatFourDecimals(_rightBalance),\n        symbol: rightSymbol || (rightVal && Object.keys(rightVal) ? rightVal.token : 'WBTC'),\n      },\n      left: {\n        orignalBalance: _leftBalance,\n        balance: TokenUtils.formatFourDecimals(_leftBalance),\n        symbol: leftSymbol || currentSelected.token || 'WBTC',\n      },\n    }\n  }, [currentSelected, leftBalance, leftSymbol, rightBalance, rightSymbol, rightVal])\n  return (\n    <>\n      <SelectWrap>\n        <GroupWrap>\n          <p title={`${displayValues.left.symbol} Balance: ${displayValues.left.orignalBalance}`}>\n            <SelectIcon />\n            <span className=\"balance\">\n              {displayValues.left.balance} {displayValues.left.symbol}\n            </span>\n          </p>\n          <Select\n            key={1}\n            selectValue={leftSelectValue || currentSelected.token}\n            allDisabled={!leftDisableStatus || (leftDisableStatus[0] && leftDisableStatus[1])}\n            inputDisabled={!leftDisableStatus || leftDisableStatus[1]}\n            selectDisabled={!leftDisableStatus || leftDisableStatus[0]}\n            onChange={(val) => {\n              const selected = options.filter((it) => it.token === val)[0]\n              setRightList(selected.rightOptionList)\n              setRightVal(selected.rightOptionList[0])\n              setVal(selected)\n              if (leftChange) {\n                leftChange(selected)\n              }\n            }}\n            selectInput={selectInput}\n            actionValue={leftInputValue}\n            options={options}\n            groupStyle={{ width: '100%' }}\n            isGroup\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {leftDesc && leftDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\">\n              <span\n                onClick={() => {\n                  if (onMax) {\n                    onMax(currentSelected)\n                  }\n                }}\n                onKeyUp={() => null}\n                tabIndex={0}\n                role=\"button\"\n                style={{ cursor: 'pointer', color: '#6ED6F3', fontSize: '0.75rem', userSelect: 'none' }}\n              >\n                Max\n              </span>\n            </p>\n          </FlexWrap>\n        </GroupWrap>\n        {isExchange ? (\n          <ExchangeArrow onClick={onExchange} style={{ fill: 'none', cursor: 'pointer', width: 22, marginTop: 8 }} />\n        ) : (\n          <RoundArrow style={{ fill: 'none', width: 22, marginTop: 8 }} />\n        )}\n\n        <GroupWrap>\n          <p title={rightNumberIsShow ? `${displayValues.right.symbol} Balance: ${displayValues.right.orignalBalance}` : ''}>\n            <RightIcon />\n            {rightNumberIsShow ? (\n              <span className=\"balance\">\n                {displayValues.right.balance}{\" \"}\n                {displayValues.right.symbol}\n              </span>\n            ) : null}\n          </p>\n          <Select\n            key={2}\n            selectValue={rightSelectValue || (rightVal ? rightVal.token : 'WBTC')}\n            options={rightOptions || rightList}\n            actionValue={rightInputValue}\n            groupStyle={{ width: '100%' }}\n            isGroup\n            allDisabled={!rightDisableStatus || (rightDisableStatus[0] && rightDisableStatus[1])}\n            inputDisabled={!rightDisableStatus || rightDisableStatus[1]}\n            selectDisabled={!rightDisableStatus || rightDisableStatus[0]}\n            selectInput={rightSelectInput}\n            onChange={(val) => {\n              if (currentSelected) {\n                const selected = currentSelected.rightOptionList.filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              } else {\n                const selected = options[0].filter((it) => it.token === val)[0]\n                if (rightChange) {\n                  rightChange(selected)\n                }\n                setRightVal(selected)\n              }\n            }}\n          />\n          <FlexWrap style={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {rightDesc && rightDesc}\n            <p dir=\"rtl\" style={{ width: '100%' }} className=\"maxBtn\" />\n          </FlexWrap>\n        </GroupWrap>\n      </SelectWrap>\n    </>\n  )\n}\n"],"sourceRoot":""}